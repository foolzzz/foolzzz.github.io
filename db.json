{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/hexo-theme-next-7.8.0/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/Test.md","hash":"7793a704c1247b63a8ffb66993d39901583e363f","modified":1665994774685},{"_id":"source/_posts/git-usage.md","hash":"80ce9457bdce5379e48277d5eb5d8550b144a397","modified":1665994963504},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1665994774686},{"_id":"themes/hexo-theme-next-7.8.0/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1665994774686},{"_id":"themes/hexo-theme-next-7.8.0/.gitignore","hash":"7b68ca7a46104cf9aa84ec0541a4856ab1836eca","modified":1665994774689},{"_id":"themes/hexo-theme-next-7.8.0/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1665994774687},{"_id":"themes/hexo-theme-next-7.8.0/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1665994774687},{"_id":"themes/hexo-theme-next-7.8.0/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1665994774690},{"_id":"themes/hexo-theme-next-7.8.0/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1665994774690},{"_id":"themes/hexo-theme-next-7.8.0/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1665994774690},{"_id":"themes/hexo-theme-next-7.8.0/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1665994774713},{"_id":"themes/hexo-theme-next-7.8.0/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1665994774690},{"_id":"themes/hexo-theme-next-7.8.0/_config.yml","hash":"b60b177f9cb53bf055d537409e03c3c4daafa50a","modified":1665994774691},{"_id":"themes/hexo-theme-next-7.8.0/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1665994774691},{"_id":"themes/hexo-theme-next-7.8.0/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1665994774687},{"_id":"themes/hexo-theme-next-7.8.0/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1665994774688},{"_id":"themes/hexo-theme-next-7.8.0/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1665994774688},{"_id":"themes/hexo-theme-next-7.8.0/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1665994774687},{"_id":"themes/hexo-theme-next-7.8.0/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1665994774695},{"_id":"themes/hexo-theme-next-7.8.0/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1665994774688},{"_id":"themes/hexo-theme-next-7.8.0/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1665994774688},{"_id":"themes/hexo-theme-next-7.8.0/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1665994774689},{"_id":"themes/hexo-theme-next-7.8.0/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1665994774689},{"_id":"themes/hexo-theme-next-7.8.0/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1665994774689},{"_id":"themes/hexo-theme-next-7.8.0/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1665994774689},{"_id":"themes/hexo-theme-next-7.8.0/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1665994774689},{"_id":"themes/hexo-theme-next-7.8.0/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1665994774691},{"_id":"themes/hexo-theme-next-7.8.0/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1665994774692},{"_id":"themes/hexo-theme-next-7.8.0/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1665994774691},{"_id":"themes/hexo-theme-next-7.8.0/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1665994774692},{"_id":"themes/hexo-theme-next-7.8.0/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1665994774692},{"_id":"themes/hexo-theme-next-7.8.0/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1665994774692},{"_id":"themes/hexo-theme-next-7.8.0/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1665994774692},{"_id":"themes/hexo-theme-next-7.8.0/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1665994774692},{"_id":"themes/hexo-theme-next-7.8.0/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1665994774695},{"_id":"themes/hexo-theme-next-7.8.0/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1665994774695},{"_id":"themes/hexo-theme-next-7.8.0/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1665994774692},{"_id":"themes/hexo-theme-next-7.8.0/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1665994774695},{"_id":"themes/hexo-theme-next-7.8.0/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1665994774696},{"_id":"themes/hexo-theme-next-7.8.0/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1665994774696},{"_id":"themes/hexo-theme-next-7.8.0/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1665994774695},{"_id":"themes/hexo-theme-next-7.8.0/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1665994774696},{"_id":"themes/hexo-theme-next-7.8.0/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1665994774696},{"_id":"themes/hexo-theme-next-7.8.0/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1665994774697},{"_id":"themes/hexo-theme-next-7.8.0/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1665994774696},{"_id":"themes/hexo-theme-next-7.8.0/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1665994774697},{"_id":"themes/hexo-theme-next-7.8.0/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1665994774697},{"_id":"themes/hexo-theme-next-7.8.0/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1665994774697},{"_id":"themes/hexo-theme-next-7.8.0/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1665994774697},{"_id":"themes/hexo-theme-next-7.8.0/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1665994774697},{"_id":"themes/hexo-theme-next-7.8.0/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1665994774697},{"_id":"themes/hexo-theme-next-7.8.0/languages/tr.yml","hash":"fe793f4c2608e3f85f0b872fd0ac1fb93e6155e2","modified":1665994774698},{"_id":"themes/hexo-theme-next-7.8.0/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1665994774698},{"_id":"themes/hexo-theme-next-7.8.0/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1665994774698},{"_id":"themes/hexo-theme-next-7.8.0/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1665994774698},{"_id":"themes/hexo-theme-next-7.8.0/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1665994774698},{"_id":"themes/hexo-theme-next-7.8.0/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1665994774698},{"_id":"themes/hexo-theme-next-7.8.0/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1665994774699},{"_id":"themes/hexo-theme-next-7.8.0/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1665994774712},{"_id":"themes/hexo-theme-next-7.8.0/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1665994774712},{"_id":"themes/hexo-theme-next-7.8.0/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1665994774712},{"_id":"themes/hexo-theme-next-7.8.0/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1665994774712},{"_id":"themes/hexo-theme-next-7.8.0/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1665994774712},{"_id":"themes/hexo-theme-next-7.8.0/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1665994774717},{"_id":"themes/hexo-theme-next-7.8.0/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1665994774712},{"_id":"themes/hexo-theme-next-7.8.0/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1665994774687},{"_id":"themes/hexo-theme-next-7.8.0/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1665994774688},{"_id":"themes/hexo-theme-next-7.8.0/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1665994774688},{"_id":"themes/hexo-theme-next-7.8.0/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1665994774687},{"_id":"themes/hexo-theme-next-7.8.0/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1665994774693},{"_id":"themes/hexo-theme-next-7.8.0/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1665994774693},{"_id":"themes/hexo-theme-next-7.8.0/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1665994774693},{"_id":"themes/hexo-theme-next-7.8.0/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1665994774693},{"_id":"themes/hexo-theme-next-7.8.0/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1665994774693},{"_id":"themes/hexo-theme-next-7.8.0/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1665994774694},{"_id":"themes/hexo-theme-next-7.8.0/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1665994774694},{"_id":"themes/hexo-theme-next-7.8.0/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1665994774694},{"_id":"themes/hexo-theme-next-7.8.0/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1665994774694},{"_id":"themes/hexo-theme-next-7.8.0/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1665994774694},{"_id":"themes/hexo-theme-next-7.8.0/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1665994774695},{"_id":"themes/hexo-theme-next-7.8.0/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1665994774694},{"_id":"themes/hexo-theme-next-7.8.0/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1665994774695},{"_id":"themes/hexo-theme-next-7.8.0/layout/_macro/post-collapse.swig","hash":"c4ec5822d644ddcedf2401837e6f6e6d3b63fbcd","modified":1665994774699},{"_id":"themes/hexo-theme-next-7.8.0/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1665994774699},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/footer.swig","hash":"af2d688f688923080aaf8f20be33cfda629797ea","modified":1665994774700},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1665994774700},{"_id":"themes/hexo-theme-next-7.8.0/layout/_macro/post.swig","hash":"71e4dc5a56cbc403d9785526f7719d824f4c8911","modified":1665994774699},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1665994774704},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1665994774702},{"_id":"themes/hexo-theme-next-7.8.0/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1665994774704},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1665994774701},{"_id":"themes/hexo-theme-next-7.8.0/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1665994774706},{"_id":"themes/hexo-theme-next-7.8.0/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1665994774706},{"_id":"themes/hexo-theme-next-7.8.0/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1665994774705},{"_id":"themes/hexo-theme-next-7.8.0/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1665994774704},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/baidu-push.swig","hash":"8627c8c8b031ecee16c522433b66fa4d6979b8ea","modified":1665994774707},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1665994774709},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1665994774709},{"_id":"themes/hexo-theme-next-7.8.0/scripts/events/index.js","hash":"bf5e93f9209d111a014a7a6a17e86c05be552d13","modified":1665994774713},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1665994774709},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1665994774715},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1665994774716},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1665994774716},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/post.js","hash":"d86849559ae54a4098aef4e2ab9dc8f99a1d186c","modified":1665994774716},{"_id":"themes/hexo-theme-next-7.8.0/scripts/helpers/engine.js","hash":"22d77bd511fc7c1bbd12339d65004ed5bfb0713c","modified":1665994774716},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1665994774716},{"_id":"themes/hexo-theme-next-7.8.0/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1665994774717},{"_id":"themes/hexo-theme-next-7.8.0/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1665994774717},{"_id":"themes/hexo-theme-next-7.8.0/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1665994774717},{"_id":"themes/hexo-theme-next-7.8.0/scripts/tags/button.js","hash":"946dd7beede408d1f090d5e9774d74763828b97c","modified":1665994774717},{"_id":"themes/hexo-theme-next-7.8.0/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1665994774718},{"_id":"themes/hexo-theme-next-7.8.0/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1665994774718},{"_id":"themes/hexo-theme-next-7.8.0/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1665994774718},{"_id":"themes/hexo-theme-next-7.8.0/scripts/tags/center-quote.js","hash":"0f133f27b61e8351cfd0959ba8a1b8551a9a8cc6","modified":1665994774718},{"_id":"themes/hexo-theme-next-7.8.0/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1665994774718},{"_id":"themes/hexo-theme-next-7.8.0/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1665994774719},{"_id":"themes/hexo-theme-next-7.8.0/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1665994774719},{"_id":"themes/hexo-theme-next-7.8.0/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1665994774719},{"_id":"themes/hexo-theme-next-7.8.0/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1665994774719},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_colors.styl","hash":"19c836f367977fb712b9868f3281ff5d757a8d5c","modified":1665994774720},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_mixins.styl","hash":"b79ff3debd5709397b122292fc7e551ae9d40782","modified":1665994774733},{"_id":"themes/hexo-theme-next-7.8.0/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1665994774738},{"_id":"themes/hexo-theme-next-7.8.0/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1665994774738},{"_id":"themes/hexo-theme-next-7.8.0/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1665994774738},{"_id":"themes/hexo-theme-next-7.8.0/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1665994774739},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1665994774739},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1665994774739},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1665994774739},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1665994774739},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1665994774740},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1665994774740},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1665994774740},{"_id":"themes/hexo-theme-next-7.8.0/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1665994774740},{"_id":"themes/hexo-theme-next-7.8.0/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1665994774740},{"_id":"themes/hexo-theme-next-7.8.0/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1665994774740},{"_id":"themes/hexo-theme-next-7.8.0/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1665994774741},{"_id":"themes/hexo-theme-next-7.8.0/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1665994774741},{"_id":"themes/hexo-theme-next-7.8.0/source/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1665994774741},{"_id":"themes/hexo-theme-next-7.8.0/source/js/algolia-search.js","hash":"23cc3c013185eb97ef347c3b4c92d928f2f3398f","modified":1665994774741},{"_id":"themes/hexo-theme-next-7.8.0/source/js/local-search.js","hash":"b42bd1c883ce91db8632d96e0f0e062cb6b73adc","modified":1665994774741},{"_id":"themes/hexo-theme-next-7.8.0/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1665994774742},{"_id":"themes/hexo-theme-next-7.8.0/source/js/next-boot.js","hash":"a22eeb6048ddd6b9224c8a671cbcfa303a2f7a1a","modified":1665994774742},{"_id":"themes/hexo-theme-next-7.8.0/source/js/utils.js","hash":"95c5d37aa06521675afcf8619cfc5dbba3d2e18a","modified":1665994774743},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1665994774700},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1665994774743},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1665994774701},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/header/menu-item.swig","hash":"12aeb9ee0d1d49d347f82a91e6bab568e1b59037","modified":1665994774701},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/header/menu.swig","hash":"958e097790551c9520426a1233add03515034f35","modified":1665994774701},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1665994774701},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1665994774700},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/head/head.swig","hash":"1ea12d4b9490d9065ebf1b8739b90ce5defd6398","modified":1665994774700},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1665994774702},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1665994774702},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/post/post-copyright.swig","hash":"94d54b0c65d504f772af1e62424952e092b6c21d","modified":1665994774702},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/post/post-followme.swig","hash":"12cd9adb0c33adc484201f9e8a4e64ccf3011bae","modified":1665994774702},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1665994774703},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1665994774703},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1665994774703},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1665994774703},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1665994774704},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1665994774703},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/sidebar/site-overview.swig","hash":"ec20ff43845723e0ac2a245047c7a7e5aead6e88","modified":1665994774704},{"_id":"themes/hexo-theme-next-7.8.0/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1665994774705},{"_id":"themes/hexo-theme-next-7.8.0/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1665994774705},{"_id":"themes/hexo-theme-next-7.8.0/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1665994774705},{"_id":"themes/hexo-theme-next-7.8.0/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1665994774705},{"_id":"themes/hexo-theme-next-7.8.0/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1665994774706},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1665994774706},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1665994774706},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1665994774706},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1665994774707},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1665994774707},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1665994774707},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1665994774707},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1665994774708},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1665994774708},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1665994774708},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1665994774708},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1665994774708},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1665994774709},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1665994774709},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1665994774710},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1665994774709},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d7258d02bcf0dac6c0fd8377c0909ddecb09d1d4","modified":1665994774710},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1665994774710},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1665994774710},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1665994774711},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1665994774710},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1665994774711},{"_id":"themes/hexo-theme-next-7.8.0/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1665994774713},{"_id":"themes/hexo-theme-next-7.8.0/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1665994774713},{"_id":"themes/hexo-theme-next-7.8.0/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1665994774713},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1665994774711},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/comment/changyan.js","hash":"1f20213af8da3127701e6bb9da995e5c91be2051","modified":1665994774714},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1665994774714},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/comment/disqus.js","hash":"19cbd24880d0fbbd4d5698cd54da598f03b942da","modified":1665994774714},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/comment/common.js","hash":"0803d4f4d3d02c24417c163ad0b27b60fda79250","modified":1665994774714},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1665994774714},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1665994774711},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1665994774715},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1665994774715},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/comment/valine.js","hash":"6a72b5928cdab9526a288177991e4b2aedd028cf","modified":1665994774715},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1665994774711},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1665994774737},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1665994774737},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1665994774737},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_variables/Pisces.styl","hash":"799fdf4f258a51d45d1e2b02fb59b337e46b5b3c","modified":1665994774738},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1665994774743},{"_id":"themes/hexo-theme-next-7.8.0/source/js/schemes/pisces.js","hash":"3d9d3c14b77044d66be1898a9a934696e9127c82","modified":1665994774742},{"_id":"themes/hexo-theme-next-7.8.0/source/js/schemes/muse.js","hash":"47c4f60eb7f7dc3303e84914b611dc34827069e1","modified":1665994774742},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_variables/base.styl","hash":"dae390efcb5da9c021ad7f25fe2d39ff36938cc6","modified":1665994774738},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1665994774743},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1665994774744},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1665994774744},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1665994774743},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1665994774720},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1665994774720},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1665994774748},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1665994774720},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1665994774724},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1665994774748},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1665994774727},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1665994774727},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/base.styl","hash":"220da37051ed5dac9cf7bd126451f6aba4f94d21","modified":1665994774729},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1665994774729},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1665994774729},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1665994774731},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1665994774731},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/tables.styl","hash":"b3bea92eef0e1fe2e7e294dac2184d16b5b8d666","modified":1665994774731},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1665994774731},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1665994774734},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1665994774733},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1665994774733},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1665994774734},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1665994774734},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1665994774734},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1665994774735},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1665994774735},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Muse/_menu.styl","hash":"5e644b1303ab6dcd1b65ee0fd6b91309b04ce64d","modified":1665994774735},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1665994774735},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1665994774735},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1665994774735},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1665994774736},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1665994774736},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1665994774736},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Pisces/_sidebar.styl","hash":"e4f958677a75de87ee1caf7e22ba46a0602f22dd","modified":1665994774736},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Pisces/_sub-menu.styl","hash":"82025c3ad7af12e532e2e81be98deb0a74ff23ac","modified":1665994774737},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Pisces/_menu.styl","hash":"ccb71d732b12acd02ac26ed6bbda4861d027857d","modified":1665994774736},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1665994774737},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1665994774744},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1665994774745},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1665994774745},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1665994774721},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1665994774720},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1665994774721},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/pages/schedule.styl","hash":"c1daeb60c23945f745703ac2c3f4bf99d0ea3d95","modified":1665994774721},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/pages/tag-cloud.styl","hash":"7ddb7453bf9b85b01bff136e9d10a7f06baac9e8","modified":1665994774721},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1665994774722},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1665994774722},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-collapse.styl","hash":"89f76380091f1be49936c69bac02e984dae5ff87","modified":1665994774721},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1665994774722},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-nav.styl","hash":"796eb941ba0ca03fd5ca6d15a1f6a56afd9aa174","modified":1665994774723},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1665994774722},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1665994774722},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-header.styl","hash":"66211794e4ed47e779ca81150cef588e0b4f2fc5","modified":1665994774723},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1665994774723},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-reward.styl","hash":"eca4d80dd0df1c3b1bc06bd39e6a4bd6c56198df","modified":1665994774723},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1665994774723},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1665994774723},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1665994774724},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1665994774724},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1665994774724},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1665994774724},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1665994774725},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1665994774725},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/header/bookmark.styl","hash":"e02b1097a72a7d2ddc45ea8d53aa6d77c25ac407","modified":1665994774725},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1665994774725},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1665994774726},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1665994774726},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1665994774726},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/header/menu.styl","hash":"555762730f1f31451113e8fdc84ec438ea738d90","modified":1665994774726},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1665994774726},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1665994774726},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1665994774727},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1665994774727},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1665994774727},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"a237c290e8934d1a8cbbf22b3f30503d9663021d","modified":1665994774728},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1665994774728},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1665994774728},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1665994774728},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1665994774728},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1665994774730},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1665994774729},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1665994774729},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1665994774730},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"7213e3d0ad7c95717ecd4e701d6ee9248ef2bf9f","modified":1665994774732},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1665994774730},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1665994774732},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1665994774730},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/tags/note.styl","hash":"9b3cce30c58e57b59e45d3f668a71a4129d3a8e4","modified":1665994774732},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1665994774732},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1665994774732},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1665994774733},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1665994774733},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1665994774747},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1665994774747},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1665994774746},{"_id":"public/2022/10/17/hello-world/index.html","hash":"40ce37b5e4578b5f25a203d6cc5d238af3f360e9","modified":1665994875241},{"_id":"public/2022/10/17/git-usage/index.html","hash":"37d67e94667b80d41720e24eaf95ebc8b72975e3","modified":1667274465694},{"_id":"public/2022/05/05/Test/index.html","hash":"e81c4d42ff45eef4669403fd5b3d4d286441abe4","modified":1667274465694},{"_id":"public/archives/index.html","hash":"707d1b18265c108b0c6bd0ffb925418c4a175f7a","modified":1670053735092},{"_id":"public/archives/2022/index.html","hash":"b0ddb82ec8531bf3b6aec6043c54c7de4836a251","modified":1670053735092},{"_id":"public/archives/2022/05/index.html","hash":"029e0b36c39526ff7502d822a0c898361ccd8f4e","modified":1670053735092},{"_id":"public/archives/2022/10/index.html","hash":"d60ca3d6aa1d4e375f8681ef58c9af81030f10d7","modified":1670053735092},{"_id":"public/index.html","hash":"e0e7a0b254f8edb5a5abd500b816f87f273df6e3","modified":1670053735092},{"_id":"public/tags/杂念/index.html","hash":"6fcf325988463c1da3dab83d24439fa6fdb964a7","modified":1670053735092},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1665994833819},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1665994833819},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1665994833819},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1665994833819},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1665994833819},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1665994833819},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1665994833819},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1665994833819},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1665994833819},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1665994833819},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1665994833819},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1665994833819},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1665994833819},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1665994833819},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1665994833819},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1665994833819},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1665994833819},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1665994833819},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1665994833819},{"_id":"public/js/algolia-search.js","hash":"23cc3c013185eb97ef347c3b4c92d928f2f3398f","modified":1665994833819},{"_id":"public/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1665994833819},{"_id":"public/js/local-search.js","hash":"b42bd1c883ce91db8632d96e0f0e062cb6b73adc","modified":1665994833819},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1665994833819},{"_id":"public/js/next-boot.js","hash":"a22eeb6048ddd6b9224c8a671cbcfa303a2f7a1a","modified":1665994833819},{"_id":"public/js/utils.js","hash":"95c5d37aa06521675afcf8619cfc5dbba3d2e18a","modified":1665994833819},{"_id":"public/js/schemes/muse.js","hash":"47c4f60eb7f7dc3303e84914b611dc34827069e1","modified":1665994833819},{"_id":"public/js/schemes/pisces.js","hash":"3d9d3c14b77044d66be1898a9a934696e9127c82","modified":1665994833819},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1665994833819},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1665994833819},{"_id":"public/css/main.css","hash":"69a8568ce5433b02da5e126063ca18e646fbaba9","modified":1665994833819},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1665994833819},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1665994833819},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1665994833819},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1665994833819},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1665994833819},{"_id":"public/tags/git-code/index.html","hash":"5eed6e560492029df06b1d4b2869723ebe786ce9","modified":1670053735092},{"_id":"source/_posts/dwm.md","hash":"20b09feffa06d86b47dede1ab4a27af68999c940","modified":1666096671310},{"_id":"source/_posts/折腾arch.md","hash":"85ab91e1eae3e43d7d3d0de6ec7284610d719b90","modified":1666095580877},{"_id":"public/2022/10/18/dwm/index.html","hash":"a290870f81df3c6ed52012dd667fb7282f912067","modified":1667274465694},{"_id":"public/2022/10/17/折腾arch/index.html","hash":"8ecedbb79c16d1c399a3cb88eb4e93900ade84bf","modified":1666542525151},{"_id":"public/tags/archlinux/index.html","hash":"f6460384c9092fb519aa75857d4a6f8975d45e35","modified":1670053735092},{"_id":"source/_posts/cpp.md","hash":"759365a4d25f2318a5b96ba2368aecf9e8b84fc9","modified":1667116560996},{"_id":"public/2022/10/20/cpp/index.html","hash":"30a543aac9a9beb478deededf065cc55d8e24b88","modified":1667274518072},{"_id":"source/_posts/tunnel.md","hash":"967d70632af98083ed270dca5494561c4ef45604","modified":1666708524600},{"_id":"source/.DS_Store","hash":"b48c4f7d61a5928be717d4bd654481ff1eab36ee","modified":1666521714790},{"_id":"source/_posts/prepare-aosp-read.md","hash":"2ff2b7fb174825764e340f286edcef5dac1666bd","modified":1666521668306},{"_id":"public/2022/10/24/tunnel/index.html","hash":"2114f9bf2f862cd126095088a6c9c31839dc7f58","modified":1667274465694},{"_id":"public/2022/10/23/prepare-aosp-read/index.html","hash":"525e61009059bdcd231539b4291daa51b8fe46d7","modified":1666542525151},{"_id":"source/_posts/arch.md","hash":"85ab91e1eae3e43d7d3d0de6ec7284610d719b90","modified":1666095580877},{"_id":"public/2022/10/17/arch/index.html","hash":"612744c73821e6d05ce29dc8d7a8c5e543b6b7c1","modified":1667274465694},{"_id":"source/_posts/android.md","hash":"411693861cbc4392275a81a2c0648114b83a9896","modified":1667125153474},{"_id":"public/2022/10/30/android/index.html","hash":"9dd88f99ba4ff3041319f3ba787284690fcbdd96","modified":1667274518072},{"_id":"source/_posts/8-page-load.md","hash":"9db6a05c52a743d5a8561d2fced5ff62c65c7af5","modified":1667274291947},{"_id":"public/2022/11/01/8-page-load/index.html","hash":"935204866bafbda3123bd939ea11070c6757b7da","modified":1667274465694},{"_id":"public/archives/2022/11/index.html","hash":"aa38db4a7fb8b9182172ad1d92463b98970b4368","modified":1670053735092},{"_id":"source/_posts/1-tunnel.md","hash":"967d70632af98083ed270dca5494561c4ef45604","modified":1666708524600},{"_id":"public/2022/10/24/1-tunnel/index.html","hash":"f90e7cd7c6273e88abb5c5d21e8fd29c070e6289","modified":1668254426537},{"_id":"source/_posts/0-test.md","hash":"7793a704c1247b63a8ffb66993d39901583e363f","modified":1665994774685},{"_id":"source/_posts/2-dwm.md","hash":"20b09feffa06d86b47dede1ab4a27af68999c940","modified":1666096671310},{"_id":"source/_posts/3-arch.md","hash":"85ab91e1eae3e43d7d3d0de6ec7284610d719b90","modified":1666095580877},{"_id":"source/_posts/4-cpp.md","hash":"759365a4d25f2318a5b96ba2368aecf9e8b84fc9","modified":1667116560996},{"_id":"source/_posts/5-git.md","hash":"80ce9457bdce5379e48277d5eb5d8550b144a397","modified":1665994963504},{"_id":"source/_posts/6-android.md","hash":"d23f1a59040ff3020eea532d0da5f763f771490f","modified":1668248702095},{"_id":"source/_posts/7-page_load.md","hash":"9db6a05c52a743d5a8561d2fced5ff62c65c7af5","modified":1667274291947},{"_id":"public/2022/11/01/7-page_load/index.html","hash":"9e943ed500157cf5119c809bb62e6046d922e0f2","modified":1668254426537},{"_id":"public/2022/10/30/6-android/index.html","hash":"ead11509da8eccaf44a692eeb49fea1a35601466","modified":1670053735092},{"_id":"public/2022/10/18/2-dwm/index.html","hash":"4b9128bb2d436dbe8609105830c2d4f308df3cc2","modified":1670053735092},{"_id":"public/2022/10/17/3-arch/index.html","hash":"8747d523cd8e1da2254d5127c95d5869e330819d","modified":1670053735092},{"_id":"public/2022/05/05/0-test/index.html","hash":"22cfca9595f7a974686e4a8502e513a28ca74a1c","modified":1668254426537},{"_id":"public/2022/10/17/5-git/index.html","hash":"ac1af99ec8c289ac4f2e729f3c592f9abc4414c1","modified":1668254426537},{"_id":"public/2022/10/20/4-cpp/index.html","hash":"8a641347bb817c24df040bae824e97884669ee11","modified":1670053735092},{"_id":"source/_posts/8-typescript.md","hash":"c3177c2bc8d12ee1bfb94e75a4a4b621c6c1ccf1","modified":1667633162261},{"_id":"public/2022/11/03/8-typescript/index.html","hash":"e1a608bfda332e4866e2a58a231358dba1feff2b","modified":1670053735092},{"_id":"public/tags/web/index.html","hash":"3a5e1865aa87d96e40ce02c7ca88d085291bc210","modified":1670053735092},{"_id":"source/_posts/10-xaas.md","hash":"33d828f2b0cd1784391cd4810c23e312d858ed2a","modified":1667636167194},{"_id":"source/_posts/9-javascript.md","hash":"d63cf089065a9c3c00b5dbf9b884ac70d485be38","modified":1667637027778},{"_id":"public/2022/11/05/10-xaas/index.html","hash":"f04b0e2e0b59ac7f8948d6dd7ea6062a693def3b","modified":1670053735092},{"_id":"public/2022/11/05/9-javascript/index.html","hash":"b37ba2d325a554ffc5e2768cc4251cc0aa66b7d7","modified":1670053735092},{"_id":"public/page/2/index.html","hash":"44ae7b2deaf15065d81b06149d3321f1f48b89d9","modified":1670053735092},{"_id":"public/archives/page/2/index.html","hash":"9e8b425cc3137cfaccba31366f0a579d79d2166d","modified":1670053735092},{"_id":"public/archives/2022/page/2/index.html","hash":"5b0e00968f9593d3651b4a2c3dc9badb2408698c","modified":1670053735092},{"_id":"source/_posts/11-docker.md","hash":"1245ee3e813f50d5aade8f044c7ec6f7d6b9e7fe","modified":1667643466338},{"_id":"public/2022/11/05/11-docker/index.html","hash":"c408569ba797df92dd77f1733d1aa6e04ae9c3cb","modified":1670053735092},{"_id":"source/_posts/12-android-partitions.md","hash":"7ceb8d802035320a3aa0a1b2de950306c89b6f87","modified":1668254584107},{"_id":"public/2022/11/12/12-android-partitions/index.html","hash":"0b8a8888ab649072e297b4b9189cbec7cc7b92b1","modified":1670053735092},{"_id":"source/_posts/us-travel-1-basic-knowledge.md","hash":"90451effb0a2b6126e05a8b47d62dee7d7e79643","modified":1670053725666},{"_id":"public/2022/12/02/us-travel-1-basic-knowledge/index.html","hash":"9f97a1735b827d9fdffcd31d13caba6a33b043b6","modified":1670053735092},{"_id":"public/2022/10/31/7-page_load/index.html","hash":"748de92ae14e8ed0306010fd66cc01c5a9717fc0","modified":1670053735092},{"_id":"public/2022/10/23/1-tunnel/index.html","hash":"980793a0f80121fe4c6bd9ce942d1c8e1191a4d1","modified":1670053735092},{"_id":"public/2022/10/16/5-git/index.html","hash":"d22cff1e57183bf4f3b552c60f0b2be9e4987e56","modified":1670053735092},{"_id":"public/2022/05/04/0-test/index.html","hash":"b4323357886d397cf17836eea01e17bee6ccde4f","modified":1670053735092},{"_id":"public/archives/2022/12/index.html","hash":"262004551839db0654b1f96b81c8a0d59ea97bba","modified":1670053735092}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"tunnel原理的一点学习","date":"2022-10-23T16:27:34.000Z","_content":"\n\n\nref:\n[tun2socks](https://github.com/ambrop72/badvpn/tree/master/tun2socks)\nhttps://github.com/shark-vpn/shark-vpn.github.io\nhttps://yunfwe.cn/2018/05/24/2018/%E4%B8%80%E8%B5%B7%E5%8A%A8%E6%89%8B%E5%86%99%E4%B8%80%E4%B8%AAVPN/\nhttps://github.com/meh/rust-tun\nhttps://github.com/the-tunnel/tt-dns/blob/master/src/main.rs\nhttps://github.com/the-tunnel/rust-tun\n[icmp forward](https://www.lyytaw.com/%E7%BD%91%E7%BB%9C/%E4%BD%BF%E7%94%A8TUN%E8%99%9A%E6%8B%9F%E7%BD%91%E5%8D%A1%E5%AE%9E%E7%8E%B0ping%E8%AF%B7%E6%B1%82%E8%BD%AC%E5%8F%91/)\n[虚拟设备, 这个系列写的挺好的](https://github.com/g0dA/linuxStack/blob/master/linux%E7%BD%91%E7%BB%9C(%E5%9B%9B).md)\n\n","source":"_posts/1-tunnel.md","raw":"---\ntitle: tunnel原理的一点学习\ndate: 2022-10-24 00:27:34\ntags:\n---\n\n\n\nref:\n[tun2socks](https://github.com/ambrop72/badvpn/tree/master/tun2socks)\nhttps://github.com/shark-vpn/shark-vpn.github.io\nhttps://yunfwe.cn/2018/05/24/2018/%E4%B8%80%E8%B5%B7%E5%8A%A8%E6%89%8B%E5%86%99%E4%B8%80%E4%B8%AAVPN/\nhttps://github.com/meh/rust-tun\nhttps://github.com/the-tunnel/tt-dns/blob/master/src/main.rs\nhttps://github.com/the-tunnel/rust-tun\n[icmp forward](https://www.lyytaw.com/%E7%BD%91%E7%BB%9C/%E4%BD%BF%E7%94%A8TUN%E8%99%9A%E6%8B%9F%E7%BD%91%E5%8D%A1%E5%AE%9E%E7%8E%B0ping%E8%AF%B7%E6%B1%82%E8%BD%AC%E5%8F%91/)\n[虚拟设备, 这个系列写的挺好的](https://github.com/g0dA/linuxStack/blob/master/linux%E7%BD%91%E7%BB%9C(%E5%9B%9B).md)\n\n","slug":"1-tunnel","published":1,"updated":"2022-10-25T14:35:24.600Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9xo77uh00003inh0czjg52n","content":"<p>ref:<br><a href=\"https://github.com/ambrop72/badvpn/tree/master/tun2socks\">tun2socks</a><br><a href=\"https://github.com/shark-vpn/shark-vpn.github.io\">https://github.com/shark-vpn/shark-vpn.github.io</a><br><a href=\"https://yunfwe.cn/2018/05/24/2018/%E4%B8%80%E8%B5%B7%E5%8A%A8%E6%89%8B%E5%86%99%E4%B8%80%E4%B8%AAVPN/\">https://yunfwe.cn/2018/05/24/2018/%E4%B8%80%E8%B5%B7%E5%8A%A8%E6%89%8B%E5%86%99%E4%B8%80%E4%B8%AAVPN/</a><br><a href=\"https://github.com/meh/rust-tun\">https://github.com/meh/rust-tun</a><br><a href=\"https://github.com/the-tunnel/tt-dns/blob/master/src/main.rs\">https://github.com/the-tunnel/tt-dns/blob/master/src/main.rs</a><br><a href=\"https://github.com/the-tunnel/rust-tun\">https://github.com/the-tunnel/rust-tun</a><br><a href=\"https://www.lyytaw.com/%E7%BD%91%E7%BB%9C/%E4%BD%BF%E7%94%A8TUN%E8%99%9A%E6%8B%9F%E7%BD%91%E5%8D%A1%E5%AE%9E%E7%8E%B0ping%E8%AF%B7%E6%B1%82%E8%BD%AC%E5%8F%91/\">icmp forward</a><br><a href=\"https://github.com/g0dA/linuxStack/blob/master/linux%E7%BD%91%E7%BB%9C(%E5%9B%9B).md\">虚拟设备, 这个系列写的挺好的</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>ref:<br><a href=\"https://github.com/ambrop72/badvpn/tree/master/tun2socks\">tun2socks</a><br><a href=\"https://github.com/shark-vpn/shark-vpn.github.io\">https://github.com/shark-vpn/shark-vpn.github.io</a><br><a href=\"https://yunfwe.cn/2018/05/24/2018/%E4%B8%80%E8%B5%B7%E5%8A%A8%E6%89%8B%E5%86%99%E4%B8%80%E4%B8%AAVPN/\">https://yunfwe.cn/2018/05/24/2018/%E4%B8%80%E8%B5%B7%E5%8A%A8%E6%89%8B%E5%86%99%E4%B8%80%E4%B8%AAVPN/</a><br><a href=\"https://github.com/meh/rust-tun\">https://github.com/meh/rust-tun</a><br><a href=\"https://github.com/the-tunnel/tt-dns/blob/master/src/main.rs\">https://github.com/the-tunnel/tt-dns/blob/master/src/main.rs</a><br><a href=\"https://github.com/the-tunnel/rust-tun\">https://github.com/the-tunnel/rust-tun</a><br><a href=\"https://www.lyytaw.com/%E7%BD%91%E7%BB%9C/%E4%BD%BF%E7%94%A8TUN%E8%99%9A%E6%8B%9F%E7%BD%91%E5%8D%A1%E5%AE%9E%E7%8E%B0ping%E8%AF%B7%E6%B1%82%E8%BD%AC%E5%8F%91/\">icmp forward</a><br><a href=\"https://github.com/g0dA/linuxStack/blob/master/linux%E7%BD%91%E7%BB%9C(%E5%9B%9B).md\">虚拟设备, 这个系列写的挺好的</a></p>\n"},{"title":"Test","date":"2022-05-04T17:18:40.000Z","_content":"\n## Test ##\nJust a test..\n\n----\n算算自己从大学来，断断续续搞了好多年技术，博客总是写了删，删了写。想想还是要厚积薄发，望自己多积累，多学习吧。","source":"_posts/0-test.md","raw":"---\ntitle: Test\ndate: 2022-05-05 01:18:40\ntags: 杂念\n---\n\n## Test ##\nJust a test..\n\n----\n算算自己从大学来，断断续续搞了好多年技术，博客总是写了删，删了写。想想还是要厚积薄发，望自己多积累，多学习吧。","slug":"0-test","published":1,"updated":"2022-10-17T08:19:34.685Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9xoa92e0000rgnh3rtqardg","content":"<h2 id=\"Test\"><a href=\"#Test\" class=\"headerlink\" title=\"Test\"></a>Test</h2><p>Just a test..</p>\n<hr>\n<p>算算自己从大学来，断断续续搞了好多年技术，博客总是写了删，删了写。想想还是要厚积薄发，望自己多积累，多学习吧。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Test\"><a href=\"#Test\" class=\"headerlink\" title=\"Test\"></a>Test</h2><p>Just a test..</p>\n<hr>\n<p>算算自己从大学来，断断续续搞了好多年技术，博客总是写了删，删了写。想想还是要厚积薄发，望自己多积累，多学习吧。</p>\n"},{"title":"dwm","date":"2022-10-18T12:23:36.000Z","_content":"\nalt + shift + enter 打开新窗口\nalt + shift + c     关闭\nalt + D             横向排列\nait + I             竖向排列\nalt + Enter         窗口位置互换\nalt + num           切换标签页\nalt + shift + num   移动窗口至某标签页\nalt + T             平铺\nalt + M             单窗口模式\nalt + F             浮动模式\n\n在窗口间切换\nalt + J\nalt + K\n\n改变窗口的长度/比例\nalt + H\nalt + L\n\n窗口模式切换\nalt + space\nalt + shift + space\n\n\nRef:\ndwm快捷键 https://blog.csdn.net/qq_36390239/article/details/112990746\nhttps://blog.csdn.net/qq_34548075/article/details/106941934\n\n","source":"_posts/2-dwm.md","raw":"---\ntitle: dwm\ndate: 2022-10-18 20:23:36\ntags:\n---\n\nalt + shift + enter 打开新窗口\nalt + shift + c     关闭\nalt + D             横向排列\nait + I             竖向排列\nalt + Enter         窗口位置互换\nalt + num           切换标签页\nalt + shift + num   移动窗口至某标签页\nalt + T             平铺\nalt + M             单窗口模式\nalt + F             浮动模式\n\n在窗口间切换\nalt + J\nalt + K\n\n改变窗口的长度/比例\nalt + H\nalt + L\n\n窗口模式切换\nalt + space\nalt + shift + space\n\n\nRef:\ndwm快捷键 https://blog.csdn.net/qq_36390239/article/details/112990746\nhttps://blog.csdn.net/qq_34548075/article/details/106941934\n\n","slug":"2-dwm","published":1,"updated":"2022-10-18T12:37:51.310Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9xoa92h0001rgnhcc03a15h","content":"<p>alt + shift + enter 打开新窗口<br>alt + shift + c     关闭<br>alt + D             横向排列<br>ait + I             竖向排列<br>alt + Enter         窗口位置互换<br>alt + num           切换标签页<br>alt + shift + num   移动窗口至某标签页<br>alt + T             平铺<br>alt + M             单窗口模式<br>alt + F             浮动模式</p>\n<p>在窗口间切换<br>alt + J<br>alt + K</p>\n<p>改变窗口的长度&#x2F;比例<br>alt + H<br>alt + L</p>\n<p>窗口模式切换<br>alt + space<br>alt + shift + space</p>\n<p>Ref:<br>dwm快捷键 <a href=\"https://blog.csdn.net/qq_36390239/article/details/112990746\">https://blog.csdn.net/qq_36390239/article/details/112990746</a><br><a href=\"https://blog.csdn.net/qq_34548075/article/details/106941934\">https://blog.csdn.net/qq_34548075/article/details/106941934</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>alt + shift + enter 打开新窗口<br>alt + shift + c     关闭<br>alt + D             横向排列<br>ait + I             竖向排列<br>alt + Enter         窗口位置互换<br>alt + num           切换标签页<br>alt + shift + num   移动窗口至某标签页<br>alt + T             平铺<br>alt + M             单窗口模式<br>alt + F             浮动模式</p>\n<p>在窗口间切换<br>alt + J<br>alt + K</p>\n<p>改变窗口的长度&#x2F;比例<br>alt + H<br>alt + L</p>\n<p>窗口模式切换<br>alt + space<br>alt + shift + space</p>\n<p>Ref:<br>dwm快捷键 <a href=\"https://blog.csdn.net/qq_36390239/article/details/112990746\">https://blog.csdn.net/qq_36390239/article/details/112990746</a><br><a href=\"https://blog.csdn.net/qq_34548075/article/details/106941934\">https://blog.csdn.net/qq_34548075/article/details/106941934</a></p>\n"},{"title":"折腾arch","date":"2022-10-17T08:33:30.000Z","_content":"\n\n### xorg\nsudo pacman -S xorg-server xorg-apps xorg-xinit xorg-xclock xterm \n\n### kde plasma\nsudo pacman -S plasma\nsudo pacman -S kde-applications\n\n### 登录管理器\nsddm: simple desktop display manager\n\nsudo pacman -S sddm\nsudo systemctl enable sddm\nsudo systemctl start sddm\n\n\nX是协议，不是某个软件.\nX11R6 是 X协议的Release 6版本\n\n\ntwm是什么\nTabWindow Manager for the X WindowSystem. 是一个窗口管理器\n\n终端模拟器\nsTerm, Rxvt, Konsole, Kvt, Gnome-Terminal, Nxterm, eterm\n\n\n\nxrdp\n\n\n\nrun level [inittab详解](https://blog.csdn.net/newnewman80/article/details/8133797)\n0 - 关闭或暂停系统 | shutdown.target\n1 - 单用户模式 | rescue.target\n2 - 多用户, 没有NFS | multi-user.target\n3 - 完全多用户 | multi-user.target\n4 - 保留 | multi-user.target\n5 - X11(图形用户界面) | graphical.target\n6 - 重启系统 | reboot.target\n\n\n### systemd\nhttp://blog.itpub.net/31524109/viewspace-2647049/\n\n\nDisplay manager: https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\n\n\n\n\ndwm安装\nhttps://blog.csdn.net/qq_45933858/article/details/124553077\n\nkde是桌面\n\nDM: https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\nDM是显示管理器, 也叫登录管理器。\nSDDM - Simple Desktop Display Manager\n不同DM的区别 https://blog.csdn.net/weixin_36073714/article/details/116758417\nWM(Window Manager)\n\n\nREF:\nhttps://www.cnblogs.com/EasonJim/p/7230616.html\nhttps://www.jianshu.com/p/a05559a7b757\nhttps://jtao.work/archives/x--w-i-n-d-o-w--she-zhi-jie-shao\n[deepin lighdm配置](https://wiki.archlinux.org/title/Deepin_Desktop_Environment_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87))\n[Window Manager](https://wiki.archlinux.org/title/Window_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87))\n[KDE plasma](https://wiki.archlinux.org/title/KDE_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E5%90%AF%E5%8A%A8_Plasma)\n[/etc/inittab](https://blog.csdn.net/ChunfengZhang/article/details/4450531)\n[arch inittab](https://wiki.archlinux.org/title/SysVinit_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87))\n[ubuntu](https://blog.csdn.net/yusiguyuan/article/details/9928139)","source":"_posts/3-arch.md","raw":"---\ntitle: 折腾arch\ndate: 2022-10-17 16:33:30\ntags: archlinux\n---\n\n\n### xorg\nsudo pacman -S xorg-server xorg-apps xorg-xinit xorg-xclock xterm \n\n### kde plasma\nsudo pacman -S plasma\nsudo pacman -S kde-applications\n\n### 登录管理器\nsddm: simple desktop display manager\n\nsudo pacman -S sddm\nsudo systemctl enable sddm\nsudo systemctl start sddm\n\n\nX是协议，不是某个软件.\nX11R6 是 X协议的Release 6版本\n\n\ntwm是什么\nTabWindow Manager for the X WindowSystem. 是一个窗口管理器\n\n终端模拟器\nsTerm, Rxvt, Konsole, Kvt, Gnome-Terminal, Nxterm, eterm\n\n\n\nxrdp\n\n\n\nrun level [inittab详解](https://blog.csdn.net/newnewman80/article/details/8133797)\n0 - 关闭或暂停系统 | shutdown.target\n1 - 单用户模式 | rescue.target\n2 - 多用户, 没有NFS | multi-user.target\n3 - 完全多用户 | multi-user.target\n4 - 保留 | multi-user.target\n5 - X11(图形用户界面) | graphical.target\n6 - 重启系统 | reboot.target\n\n\n### systemd\nhttp://blog.itpub.net/31524109/viewspace-2647049/\n\n\nDisplay manager: https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\n\n\n\n\ndwm安装\nhttps://blog.csdn.net/qq_45933858/article/details/124553077\n\nkde是桌面\n\nDM: https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\nDM是显示管理器, 也叫登录管理器。\nSDDM - Simple Desktop Display Manager\n不同DM的区别 https://blog.csdn.net/weixin_36073714/article/details/116758417\nWM(Window Manager)\n\n\nREF:\nhttps://www.cnblogs.com/EasonJim/p/7230616.html\nhttps://www.jianshu.com/p/a05559a7b757\nhttps://jtao.work/archives/x--w-i-n-d-o-w--she-zhi-jie-shao\n[deepin lighdm配置](https://wiki.archlinux.org/title/Deepin_Desktop_Environment_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87))\n[Window Manager](https://wiki.archlinux.org/title/Window_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87))\n[KDE plasma](https://wiki.archlinux.org/title/KDE_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E5%90%AF%E5%8A%A8_Plasma)\n[/etc/inittab](https://blog.csdn.net/ChunfengZhang/article/details/4450531)\n[arch inittab](https://wiki.archlinux.org/title/SysVinit_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87))\n[ubuntu](https://blog.csdn.net/yusiguyuan/article/details/9928139)","slug":"3-arch","published":1,"updated":"2022-10-18T12:19:40.877Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9xoa92i0003rgnhb65t62i2","content":"<h3 id=\"xorg\"><a href=\"#xorg\" class=\"headerlink\" title=\"xorg\"></a>xorg</h3><p>sudo pacman -S xorg-server xorg-apps xorg-xinit xorg-xclock xterm </p>\n<h3 id=\"kde-plasma\"><a href=\"#kde-plasma\" class=\"headerlink\" title=\"kde plasma\"></a>kde plasma</h3><p>sudo pacman -S plasma<br>sudo pacman -S kde-applications</p>\n<h3 id=\"登录管理器\"><a href=\"#登录管理器\" class=\"headerlink\" title=\"登录管理器\"></a>登录管理器</h3><p>sddm: simple desktop display manager</p>\n<p>sudo pacman -S sddm<br>sudo systemctl enable sddm<br>sudo systemctl start sddm</p>\n<p>X是协议，不是某个软件.<br>X11R6 是 X协议的Release 6版本</p>\n<p>twm是什么<br>TabWindow Manager for the X WindowSystem. 是一个窗口管理器</p>\n<p>终端模拟器<br>sTerm, Rxvt, Konsole, Kvt, Gnome-Terminal, Nxterm, eterm</p>\n<p>xrdp</p>\n<p>run level <a href=\"https://blog.csdn.net/newnewman80/article/details/8133797\">inittab详解</a><br>0 - 关闭或暂停系统 | shutdown.target<br>1 - 单用户模式 | rescue.target<br>2 - 多用户, 没有NFS | multi-user.target<br>3 - 完全多用户 | multi-user.target<br>4 - 保留 | multi-user.target<br>5 - X11(图形用户界面) | graphical.target<br>6 - 重启系统 | reboot.target</p>\n<h3 id=\"systemd\"><a href=\"#systemd\" class=\"headerlink\" title=\"systemd\"></a>systemd</h3><p><a href=\"http://blog.itpub.net/31524109/viewspace-2647049/\">http://blog.itpub.net/31524109/viewspace-2647049/</a></p>\n<p>Display manager: <a href=\"https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p>\n<p>dwm安装<br><a href=\"https://blog.csdn.net/qq_45933858/article/details/124553077\">https://blog.csdn.net/qq_45933858/article/details/124553077</a></p>\n<p>kde是桌面</p>\n<p>DM: <a href=\"https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a><br>DM是显示管理器, 也叫登录管理器。<br>SDDM - Simple Desktop Display Manager<br>不同DM的区别 <a href=\"https://blog.csdn.net/weixin_36073714/article/details/116758417\">https://blog.csdn.net/weixin_36073714/article/details/116758417</a><br>WM(Window Manager)</p>\n<p>REF:<br><a href=\"https://www.cnblogs.com/EasonJim/p/7230616.html\">https://www.cnblogs.com/EasonJim/p/7230616.html</a><br><a href=\"https://www.jianshu.com/p/a05559a7b757\">https://www.jianshu.com/p/a05559a7b757</a><br><a href=\"https://jtao.work/archives/x--w-i-n-d-o-w--she-zhi-jie-shao\">https://jtao.work/archives/x--w-i-n-d-o-w--she-zhi-jie-shao</a><br><a href=\"https://wiki.archlinux.org/title/Deepin_Desktop_Environment_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">deepin lighdm配置</a><br><a href=\"https://wiki.archlinux.org/title/Window_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">Window Manager</a><br><a href=\"https://wiki.archlinux.org/title/KDE_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E5%90%AF%E5%8A%A8_Plasma\">KDE plasma</a><br><a href=\"https://blog.csdn.net/ChunfengZhang/article/details/4450531\">&#x2F;etc&#x2F;inittab</a><br><a href=\"https://wiki.archlinux.org/title/SysVinit_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">arch inittab</a><br><a href=\"https://blog.csdn.net/yusiguyuan/article/details/9928139\">ubuntu</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"xorg\"><a href=\"#xorg\" class=\"headerlink\" title=\"xorg\"></a>xorg</h3><p>sudo pacman -S xorg-server xorg-apps xorg-xinit xorg-xclock xterm </p>\n<h3 id=\"kde-plasma\"><a href=\"#kde-plasma\" class=\"headerlink\" title=\"kde plasma\"></a>kde plasma</h3><p>sudo pacman -S plasma<br>sudo pacman -S kde-applications</p>\n<h3 id=\"登录管理器\"><a href=\"#登录管理器\" class=\"headerlink\" title=\"登录管理器\"></a>登录管理器</h3><p>sddm: simple desktop display manager</p>\n<p>sudo pacman -S sddm<br>sudo systemctl enable sddm<br>sudo systemctl start sddm</p>\n<p>X是协议，不是某个软件.<br>X11R6 是 X协议的Release 6版本</p>\n<p>twm是什么<br>TabWindow Manager for the X WindowSystem. 是一个窗口管理器</p>\n<p>终端模拟器<br>sTerm, Rxvt, Konsole, Kvt, Gnome-Terminal, Nxterm, eterm</p>\n<p>xrdp</p>\n<p>run level <a href=\"https://blog.csdn.net/newnewman80/article/details/8133797\">inittab详解</a><br>0 - 关闭或暂停系统 | shutdown.target<br>1 - 单用户模式 | rescue.target<br>2 - 多用户, 没有NFS | multi-user.target<br>3 - 完全多用户 | multi-user.target<br>4 - 保留 | multi-user.target<br>5 - X11(图形用户界面) | graphical.target<br>6 - 重启系统 | reboot.target</p>\n<h3 id=\"systemd\"><a href=\"#systemd\" class=\"headerlink\" title=\"systemd\"></a>systemd</h3><p><a href=\"http://blog.itpub.net/31524109/viewspace-2647049/\">http://blog.itpub.net/31524109/viewspace-2647049/</a></p>\n<p>Display manager: <a href=\"https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p>\n<p>dwm安装<br><a href=\"https://blog.csdn.net/qq_45933858/article/details/124553077\">https://blog.csdn.net/qq_45933858/article/details/124553077</a></p>\n<p>kde是桌面</p>\n<p>DM: <a href=\"https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a><br>DM是显示管理器, 也叫登录管理器。<br>SDDM - Simple Desktop Display Manager<br>不同DM的区别 <a href=\"https://blog.csdn.net/weixin_36073714/article/details/116758417\">https://blog.csdn.net/weixin_36073714/article/details/116758417</a><br>WM(Window Manager)</p>\n<p>REF:<br><a href=\"https://www.cnblogs.com/EasonJim/p/7230616.html\">https://www.cnblogs.com/EasonJim/p/7230616.html</a><br><a href=\"https://www.jianshu.com/p/a05559a7b757\">https://www.jianshu.com/p/a05559a7b757</a><br><a href=\"https://jtao.work/archives/x--w-i-n-d-o-w--she-zhi-jie-shao\">https://jtao.work/archives/x--w-i-n-d-o-w--she-zhi-jie-shao</a><br><a href=\"https://wiki.archlinux.org/title/Deepin_Desktop_Environment_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">deepin lighdm配置</a><br><a href=\"https://wiki.archlinux.org/title/Window_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">Window Manager</a><br><a href=\"https://wiki.archlinux.org/title/KDE_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E5%90%AF%E5%8A%A8_Plasma\">KDE plasma</a><br><a href=\"https://blog.csdn.net/ChunfengZhang/article/details/4450531\">&#x2F;etc&#x2F;inittab</a><br><a href=\"https://wiki.archlinux.org/title/SysVinit_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">arch inittab</a><br><a href=\"https://blog.csdn.net/yusiguyuan/article/details/9928139\">ubuntu</a></p>\n"},{"title":"c++ 11","date":"2022-10-20T09:39:14.000Z","_content":"\n\n## 2. 保证稳定性与兼容性\n### c++11\n通过内存模型、线程、原子操作等来支持本地并行编程(Native Concurrency)。\n通过统一初始化表达式、auto、declytype、移动语义等来统一对泛型编程的支持。 \n通过 constexpr、POD(概念)等更好地支持系统编程。\n通过内联命名空间、继承构造函数和右值引用等，以更好地支持库的构建。\n\n### _Pragma\n\n```c\n#pragma\n\n_Pragma(\"once)\n```\n\n### 变长参数定义以及__VA_ARGS_\n```c\n#define PR(...) printf(__VA_ARGS__) \n```\n\n### long long\n- ll (long long) %lld\n- ull (unsigned long long) %llu\n\nlimits.h\nLLONG_MIN\nLLONG_MAX\nULLONG_MIN\n\n### 静态断言 + static_assert\n\n静态断言\n编译时期断言\n```c++\ntemplate <typename t, typename u> int bit_copy(t& a, u& b) {\n  static_assert(sizeof(b) == sizeof(a), \"the parameters of bit_coppy must have same width.\");\n\n  // TODO\n}\n```\n\n\n### noexcept\n```c++\nvoid BlockThrow() noexcept { Throw(); }\n```\nnoexcept 会直接调用`std::terminate`中断程序的执行,阻止异常传播.\n即声明不抛出异常的函数\n\n```c++\ntemplate <class T>\nvoid fun() noexcept(noexcept(T())) {}\n```\n\n\n\neg:\n```c++\ntemplate<class T> class A {\n  public:\n    static constexpr T min() noexcept { return T(); }\n    static constexpr T max() noexcept { return T(); }\n    static constexpr T lowest() noexcept { return T(); }\n}\n```\n\nc++11中类的析构函数默认也是noexcept(true)的.\n\n\n### 2.7 快速初始化成员变量\nC++11 允许使用= {} 进行就地的非静态成员变量初始化。\n\n```c++\nstruct init{ int a = 1; double b {1.2}; }\n```\n\n初始化列表 后作用与 非静态成员, 即 初始化列表的效果总是优先于就地初始化的。\n\n\n### 2.8 非静态成员的sizeof\nc++11 中对非静态成员变量使用sizeof操作是合法的。\n```c++\n#include<iostream>\nusing namespace std;\n\nstruct People {\n  public:\n    int hand;\n}\n\nint main() {\n  cout << sizeof(People::hand) << endl;\n}\n```\n\n\n### 2.9 friend\n\n### 2.10 final/override\n`final`关键字使派生类不可覆盖它所修饰的虚函数.\n\n如果派生类的虚函数声明时, 使用了`override`描述符, 那么该函数必须重载其基类中的同名函数，否则代码将无法通过编译。\n\n\n### 2.11 模板函数的默认模板参数\n\n### 2.12 外部模板\n\n### 2.13 局部和匿名类型作模板实参\n\n## 3 通用为本, 专用为末\n### 3.1 继承构造函数\n\n子类可以通过使用using声明来声明继承基类的构造函数.\n\n```c++\n#include <iostream>\nusing namespace std;\n\nstruct A {\n  A(int i) {}\n}\n\nstruct B : A {\n  using A::A;\n\n  int d {0};\n}\n\nint main() {\n  B b(365);\n}\n```\n\n### 3.2 委派构造函数\n\n在C++11中，委派构造函数，就是指委派函数将构造的任务委派给了目标构造函数来完成的这样一种类构造的方式.\n```c++\nclass Info {\npublic:\n  Info() : Info(1, 'a') {}\n  Info(int i) : Info(i, 'a') {}\n  Info(char e) : Info(1, e) {}\n\nprivate:\n  Info(int i, char e): type(i), name(e) {}\n  int type;\n  char name;\n}\n```\n\n### 3.3 右值引用；移动语义和完美转发\n\n3.3.1 指针成员与拷贝构造\n涉及到指针要使用深拷贝.\n\n3.3.2 移动语义\n移动构造函数\n\n```c++\n#include <iostream>\nusing namespace std;\n\nclass HasPtrMem {\npublic:\n  HasPtrMem():d(new int(3)) {}\n  HasPtrMem(const HasPtrMem &h):d(new int(*h.d)) {}\n\n  HasPtrMem(HasPtrMem && h) : d(h.d) { // 移动构造函数\n    h.d = nullptr;\n  }\n\n  ~HasPtrMem() {\n    delete d;\n  }\n\n  int *d\n}\n```\n\n3.3.3 左值\\右值 与 右值引用\n\n可以取地址的、有名字的就是左值.\n不可以取地址的，没有名字的就是右值.\n\nc++11 中, 右值分为两种, 将亡值(xvalue, eXpiring Value), 纯右值(prvalue, Pure Rvalue)\n\n```c++\nT && a = ReturnRvalue();\nT b = ReturnRvalue();\n```\n右值引用是不能绑定到任何左值的\n```c++\nint c;\nint && d = c; // X 编译失败\n```\n\n出现这样的状况的原因是，在常量左值引用在 C++98 标准中开始就是个“万能”的引用 类型。它可以接受非常量左值、常量左值、右值对其进行初始化。而且在使用右值对其初始 化的时候，常量左值引用还可以像右值引用一样将右值的生命期延长。不过相比于右值引用 所引用的右值，常量左值所引用的右值在它的“余生”中只能是只读的。相对地，非常量左 值只能接受非常量左值对其进行初始化。\n\n```c++\nconst bool & judge = true;\nconst bool judge2 = true;\n```\n\n常量左值引用可以减少对象开销.\n\n\n3.3.4 std::move 强制转化为右值\n\n\n3.3.5 移动语义的一些其他问题\nmove_if_noexcept(x)\n如果x是noexcept的, 则为move语义，否则为copy语义.\n\n3.3.6 完美转发 P85\n\n```c++\nvoid IrunCodeActually(int t) {}\n\ntemplate <typename T>\nvoid IamForwarding(T && t) {\n  IrunCodeActually(static_cast<T &&>(t));\n}\n```\n\n\n```c++\n#include <iostream>\nusing namespace std;\n\nvoid RunCode(int && m) {}\nvoid RunCode(int & m) {}\nvoid RunCode(const int && m) {}\nvoid RunCode(const int & m) {}\n\ntemplate <typename T>\nvoid PerfectForward(T && t) { RunCode(forward<T>(t)); }\n\nint main() {\n  int a = 1;\n  int b = 2;\n  const int c = 3;\n  const int d = 4;\n\n  PerfectForward(a);\n  PerfectForward(move(b));\n  PerfectForward(c);\n  PerfectForward(move(d));\n}\n```\n\n\n3.4 显示转换操作符\n\n`explicit`\n\n\n3.5 列表初始化\n3.5.1 初始化列表\n```c++\nmap<int, float> m = {{1, 1.0f}, {2, 2.1f}};\n\ninitializer_list<int>;\n\n```\n3.5.2 防止类型收窄\nC++11 使用列表初始化可以防范类型收窄, 也能够加强类型使用的安全性.\n\n3.6 POD类型 P105\n\n3.7 非受限联合体\n\n3.8 用户自定义字面量\n\n3.9 内联名字空间\n`inline namespace`\n\n3.10 模板的别名\n```c++\ntypedef std::vector<std::string> strvec;\n\n\n// c++11\nusing uint = unsigned int;\ntypedef unsigned int UINT;\nusing sint = int;\n\ntemplate<typename T> \nusing MapString = std::map<T, char *>;\n\n\nMapString<int> numberedString;\n```\n\n3.11 一般化的SFINEA规则\n模板推导\n```c++\n#include <iostream>\n\nstruct Test {\n  typedef int foo;\n}\n\ntemplate <typename T>\nvoid f(typename T::foo) {\n\n}\n\ntemplate <typename T>\nvoid f(T) {\n\n}\n\nint main() {\n  f<Test>(10); // #1\n  f<int>(10); // #2\n}\n```\n\n## 4 新手易学，老兵易用\n4.1 右尖括号>的改进\n\n4.2 auto类型推导\n\n4.3 decltype\n\n4.4 追踪返回类型\n```c++\ntemplate<typename T1, typename T2>\nauto Sum(T1 & t1, T2 & t2) -> decltype(t1 + t2) {\n  return t1 + t2;\n}\n```\n\n4.4.2 使用追踪返回类型的函数\n\n```c++\nint func(char *a, int b)\n```\n\n\n\n## 5 提高类型安全\n\n5.1 强类型枚举\n```c++\nenum class Type {};\n```\n\n5.2 堆内存管理：智能指针与垃圾回收\nunique_ptr, shared_ptr, weak_ptr\n\n## 6 提高性能及操作硬件的能力\n\n6.1 常量表达式\n\n变长参数\n```c++\npair<int, double>;\n\nstd::tuple<double, char, std::string> collections;\n```\n变长模板\n\n```c++\ntemplate <typeame... Elements> class tuple;\n\ntuple<int, char, double>;\n```\n\n6.3 原子类型与原子操作 P196\n```c++\natomic_llong\n```\n\n## 7 为改变思考方式而改变\n\n7.2 默认函数的控制 P227\n\n\n7.3 lambda函数 P234\n\n```c++\n[capture](parameters) mutable -> return-type { statement }\n\n[]{}\n```\n捕捉列表\n- `[var]` 值传递\n- `[=]` 值传递方式捕捉所有父作用于的变量\n- `[&var]` 引用传递\n- `[&]` 引用传递捕捉父作用于的变脸\n- `this` 表示值传递的方式捕捉当前的this指针\n\n## 8 融入实际应用\n\n8.1 对齐 P258\n\n8.2 通用属性\n","source":"_posts/4-cpp.md","raw":"---\ntitle: c++ 11\ndate: 2022-10-20 17:39:14\ntags:\n---\n\n\n## 2. 保证稳定性与兼容性\n### c++11\n通过内存模型、线程、原子操作等来支持本地并行编程(Native Concurrency)。\n通过统一初始化表达式、auto、declytype、移动语义等来统一对泛型编程的支持。 \n通过 constexpr、POD(概念)等更好地支持系统编程。\n通过内联命名空间、继承构造函数和右值引用等，以更好地支持库的构建。\n\n### _Pragma\n\n```c\n#pragma\n\n_Pragma(\"once)\n```\n\n### 变长参数定义以及__VA_ARGS_\n```c\n#define PR(...) printf(__VA_ARGS__) \n```\n\n### long long\n- ll (long long) %lld\n- ull (unsigned long long) %llu\n\nlimits.h\nLLONG_MIN\nLLONG_MAX\nULLONG_MIN\n\n### 静态断言 + static_assert\n\n静态断言\n编译时期断言\n```c++\ntemplate <typename t, typename u> int bit_copy(t& a, u& b) {\n  static_assert(sizeof(b) == sizeof(a), \"the parameters of bit_coppy must have same width.\");\n\n  // TODO\n}\n```\n\n\n### noexcept\n```c++\nvoid BlockThrow() noexcept { Throw(); }\n```\nnoexcept 会直接调用`std::terminate`中断程序的执行,阻止异常传播.\n即声明不抛出异常的函数\n\n```c++\ntemplate <class T>\nvoid fun() noexcept(noexcept(T())) {}\n```\n\n\n\neg:\n```c++\ntemplate<class T> class A {\n  public:\n    static constexpr T min() noexcept { return T(); }\n    static constexpr T max() noexcept { return T(); }\n    static constexpr T lowest() noexcept { return T(); }\n}\n```\n\nc++11中类的析构函数默认也是noexcept(true)的.\n\n\n### 2.7 快速初始化成员变量\nC++11 允许使用= {} 进行就地的非静态成员变量初始化。\n\n```c++\nstruct init{ int a = 1; double b {1.2}; }\n```\n\n初始化列表 后作用与 非静态成员, 即 初始化列表的效果总是优先于就地初始化的。\n\n\n### 2.8 非静态成员的sizeof\nc++11 中对非静态成员变量使用sizeof操作是合法的。\n```c++\n#include<iostream>\nusing namespace std;\n\nstruct People {\n  public:\n    int hand;\n}\n\nint main() {\n  cout << sizeof(People::hand) << endl;\n}\n```\n\n\n### 2.9 friend\n\n### 2.10 final/override\n`final`关键字使派生类不可覆盖它所修饰的虚函数.\n\n如果派生类的虚函数声明时, 使用了`override`描述符, 那么该函数必须重载其基类中的同名函数，否则代码将无法通过编译。\n\n\n### 2.11 模板函数的默认模板参数\n\n### 2.12 外部模板\n\n### 2.13 局部和匿名类型作模板实参\n\n## 3 通用为本, 专用为末\n### 3.1 继承构造函数\n\n子类可以通过使用using声明来声明继承基类的构造函数.\n\n```c++\n#include <iostream>\nusing namespace std;\n\nstruct A {\n  A(int i) {}\n}\n\nstruct B : A {\n  using A::A;\n\n  int d {0};\n}\n\nint main() {\n  B b(365);\n}\n```\n\n### 3.2 委派构造函数\n\n在C++11中，委派构造函数，就是指委派函数将构造的任务委派给了目标构造函数来完成的这样一种类构造的方式.\n```c++\nclass Info {\npublic:\n  Info() : Info(1, 'a') {}\n  Info(int i) : Info(i, 'a') {}\n  Info(char e) : Info(1, e) {}\n\nprivate:\n  Info(int i, char e): type(i), name(e) {}\n  int type;\n  char name;\n}\n```\n\n### 3.3 右值引用；移动语义和完美转发\n\n3.3.1 指针成员与拷贝构造\n涉及到指针要使用深拷贝.\n\n3.3.2 移动语义\n移动构造函数\n\n```c++\n#include <iostream>\nusing namespace std;\n\nclass HasPtrMem {\npublic:\n  HasPtrMem():d(new int(3)) {}\n  HasPtrMem(const HasPtrMem &h):d(new int(*h.d)) {}\n\n  HasPtrMem(HasPtrMem && h) : d(h.d) { // 移动构造函数\n    h.d = nullptr;\n  }\n\n  ~HasPtrMem() {\n    delete d;\n  }\n\n  int *d\n}\n```\n\n3.3.3 左值\\右值 与 右值引用\n\n可以取地址的、有名字的就是左值.\n不可以取地址的，没有名字的就是右值.\n\nc++11 中, 右值分为两种, 将亡值(xvalue, eXpiring Value), 纯右值(prvalue, Pure Rvalue)\n\n```c++\nT && a = ReturnRvalue();\nT b = ReturnRvalue();\n```\n右值引用是不能绑定到任何左值的\n```c++\nint c;\nint && d = c; // X 编译失败\n```\n\n出现这样的状况的原因是，在常量左值引用在 C++98 标准中开始就是个“万能”的引用 类型。它可以接受非常量左值、常量左值、右值对其进行初始化。而且在使用右值对其初始 化的时候，常量左值引用还可以像右值引用一样将右值的生命期延长。不过相比于右值引用 所引用的右值，常量左值所引用的右值在它的“余生”中只能是只读的。相对地，非常量左 值只能接受非常量左值对其进行初始化。\n\n```c++\nconst bool & judge = true;\nconst bool judge2 = true;\n```\n\n常量左值引用可以减少对象开销.\n\n\n3.3.4 std::move 强制转化为右值\n\n\n3.3.5 移动语义的一些其他问题\nmove_if_noexcept(x)\n如果x是noexcept的, 则为move语义，否则为copy语义.\n\n3.3.6 完美转发 P85\n\n```c++\nvoid IrunCodeActually(int t) {}\n\ntemplate <typename T>\nvoid IamForwarding(T && t) {\n  IrunCodeActually(static_cast<T &&>(t));\n}\n```\n\n\n```c++\n#include <iostream>\nusing namespace std;\n\nvoid RunCode(int && m) {}\nvoid RunCode(int & m) {}\nvoid RunCode(const int && m) {}\nvoid RunCode(const int & m) {}\n\ntemplate <typename T>\nvoid PerfectForward(T && t) { RunCode(forward<T>(t)); }\n\nint main() {\n  int a = 1;\n  int b = 2;\n  const int c = 3;\n  const int d = 4;\n\n  PerfectForward(a);\n  PerfectForward(move(b));\n  PerfectForward(c);\n  PerfectForward(move(d));\n}\n```\n\n\n3.4 显示转换操作符\n\n`explicit`\n\n\n3.5 列表初始化\n3.5.1 初始化列表\n```c++\nmap<int, float> m = {{1, 1.0f}, {2, 2.1f}};\n\ninitializer_list<int>;\n\n```\n3.5.2 防止类型收窄\nC++11 使用列表初始化可以防范类型收窄, 也能够加强类型使用的安全性.\n\n3.6 POD类型 P105\n\n3.7 非受限联合体\n\n3.8 用户自定义字面量\n\n3.9 内联名字空间\n`inline namespace`\n\n3.10 模板的别名\n```c++\ntypedef std::vector<std::string> strvec;\n\n\n// c++11\nusing uint = unsigned int;\ntypedef unsigned int UINT;\nusing sint = int;\n\ntemplate<typename T> \nusing MapString = std::map<T, char *>;\n\n\nMapString<int> numberedString;\n```\n\n3.11 一般化的SFINEA规则\n模板推导\n```c++\n#include <iostream>\n\nstruct Test {\n  typedef int foo;\n}\n\ntemplate <typename T>\nvoid f(typename T::foo) {\n\n}\n\ntemplate <typename T>\nvoid f(T) {\n\n}\n\nint main() {\n  f<Test>(10); // #1\n  f<int>(10); // #2\n}\n```\n\n## 4 新手易学，老兵易用\n4.1 右尖括号>的改进\n\n4.2 auto类型推导\n\n4.3 decltype\n\n4.4 追踪返回类型\n```c++\ntemplate<typename T1, typename T2>\nauto Sum(T1 & t1, T2 & t2) -> decltype(t1 + t2) {\n  return t1 + t2;\n}\n```\n\n4.4.2 使用追踪返回类型的函数\n\n```c++\nint func(char *a, int b)\n```\n\n\n\n## 5 提高类型安全\n\n5.1 强类型枚举\n```c++\nenum class Type {};\n```\n\n5.2 堆内存管理：智能指针与垃圾回收\nunique_ptr, shared_ptr, weak_ptr\n\n## 6 提高性能及操作硬件的能力\n\n6.1 常量表达式\n\n变长参数\n```c++\npair<int, double>;\n\nstd::tuple<double, char, std::string> collections;\n```\n变长模板\n\n```c++\ntemplate <typeame... Elements> class tuple;\n\ntuple<int, char, double>;\n```\n\n6.3 原子类型与原子操作 P196\n```c++\natomic_llong\n```\n\n## 7 为改变思考方式而改变\n\n7.2 默认函数的控制 P227\n\n\n7.3 lambda函数 P234\n\n```c++\n[capture](parameters) mutable -> return-type { statement }\n\n[]{}\n```\n捕捉列表\n- `[var]` 值传递\n- `[=]` 值传递方式捕捉所有父作用于的变量\n- `[&var]` 引用传递\n- `[&]` 引用传递捕捉父作用于的变脸\n- `this` 表示值传递的方式捕捉当前的this指针\n\n## 8 融入实际应用\n\n8.1 对齐 P258\n\n8.2 通用属性\n","slug":"4-cpp","published":1,"updated":"2022-10-30T07:56:00.996Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9xoa92j0004rgnhg5ctainn","content":"<h2 id=\"2-保证稳定性与兼容性\"><a href=\"#2-保证稳定性与兼容性\" class=\"headerlink\" title=\"2. 保证稳定性与兼容性\"></a>2. 保证稳定性与兼容性</h2><h3 id=\"c-11\"><a href=\"#c-11\" class=\"headerlink\" title=\"c++11\"></a>c++11</h3><p>通过内存模型、线程、原子操作等来支持本地并行编程(Native Concurrency)。<br>通过统一初始化表达式、auto、declytype、移动语义等来统一对泛型编程的支持。<br>通过 constexpr、POD(概念)等更好地支持系统编程。<br>通过内联命名空间、继承构造函数和右值引用等，以更好地支持库的构建。</p>\n<h3 id=\"Pragma\"><a href=\"#Pragma\" class=\"headerlink\" title=\"_Pragma\"></a>_Pragma</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">_Pragma</span>(<span class=\"string\">&quot;once)</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"变长参数定义以及-VA-ARGS\"><a href=\"#变长参数定义以及-VA-ARGS\" class=\"headerlink\" title=\"变长参数定义以及__VA_ARGS_\"></a>变长参数定义以及__VA_ARGS_</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> PR(...) printf(__VA_ARGS__) </span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"long-long\"><a href=\"#long-long\" class=\"headerlink\" title=\"long long\"></a>long long</h3><ul>\n<li>ll (long long) %lld</li>\n<li>ull (unsigned long long) %llu</li>\n</ul>\n<p>limits.h<br>LLONG_MIN<br>LLONG_MAX<br>ULLONG_MIN</p>\n<h3 id=\"静态断言-static-assert\"><a href=\"#静态断言-static-assert\" class=\"headerlink\" title=\"静态断言 + static_assert\"></a>静态断言 + static_assert</h3><p>静态断言<br>编译时期断言</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> t, <span class=\"keyword\">typename</span> u&gt; <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">bit_copy</span><span class=\"params\">(t&amp; a, u&amp; b)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">static_assert</span>(<span class=\"built_in\">sizeof</span>(b) == <span class=\"built_in\">sizeof</span>(a), <span class=\"string\">&quot;the parameters of bit_coppy must have same width.&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// TODO</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"noexcept\"><a href=\"#noexcept\" class=\"headerlink\" title=\"noexcept\"></a>noexcept</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">BlockThrow</span><span class=\"params\">()</span> <span class=\"keyword\">noexcept</span> </span>&#123; <span class=\"built_in\">Throw</span>(); &#125;</span><br></pre></td></tr></table></figure>\n<p>noexcept 会直接调用<code>std::terminate</code>中断程序的执行,阻止异常传播.<br>即声明不抛出异常的函数</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">class</span> <span class=\"title class_\">T</span>&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fun</span><span class=\"params\">()</span> <span class=\"title\">noexcept</span><span class=\"params\">(<span class=\"keyword\">noexcept</span>(T()))</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>eg:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">class</span> <span class=\"title class_\">T</span>&gt; <span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"keyword\">constexpr</span> T <span class=\"title\">min</span><span class=\"params\">()</span> <span class=\"keyword\">noexcept</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">T</span>(); &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"keyword\">constexpr</span> T <span class=\"title\">max</span><span class=\"params\">()</span> <span class=\"keyword\">noexcept</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">T</span>(); &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"keyword\">constexpr</span> T <span class=\"title\">lowest</span><span class=\"params\">()</span> <span class=\"keyword\">noexcept</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">T</span>(); &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>c++11中类的析构函数默认也是noexcept(true)的.</p>\n<h3 id=\"2-7-快速初始化成员变量\"><a href=\"#2-7-快速初始化成员变量\" class=\"headerlink\" title=\"2.7 快速初始化成员变量\"></a>2.7 快速初始化成员变量</h3><p>C++11 允许使用&#x3D; {} 进行就地的非静态成员变量初始化。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">init</span>&#123; <span class=\"type\">int</span> a = <span class=\"number\">1</span>; <span class=\"type\">double</span> b &#123;<span class=\"number\">1.2</span>&#125;; &#125;</span><br></pre></td></tr></table></figure>\n\n<p>初始化列表 后作用与 非静态成员, 即 初始化列表的效果总是优先于就地初始化的。</p>\n<h3 id=\"2-8-非静态成员的sizeof\"><a href=\"#2-8-非静态成员的sizeof\" class=\"headerlink\" title=\"2.8 非静态成员的sizeof\"></a>2.8 非静态成员的sizeof</h3><p>c++11 中对非静态成员变量使用sizeof操作是合法的。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">People</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> hand;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"built_in\">sizeof</span>(People::hand) &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"2-9-friend\"><a href=\"#2-9-friend\" class=\"headerlink\" title=\"2.9 friend\"></a>2.9 friend</h3><h3 id=\"2-10-final-x2F-override\"><a href=\"#2-10-final-x2F-override\" class=\"headerlink\" title=\"2.10 final&#x2F;override\"></a>2.10 final&#x2F;override</h3><p><code>final</code>关键字使派生类不可覆盖它所修饰的虚函数.</p>\n<p>如果派生类的虚函数声明时, 使用了<code>override</code>描述符, 那么该函数必须重载其基类中的同名函数，否则代码将无法通过编译。</p>\n<h3 id=\"2-11-模板函数的默认模板参数\"><a href=\"#2-11-模板函数的默认模板参数\" class=\"headerlink\" title=\"2.11 模板函数的默认模板参数\"></a>2.11 模板函数的默认模板参数</h3><h3 id=\"2-12-外部模板\"><a href=\"#2-12-外部模板\" class=\"headerlink\" title=\"2.12 外部模板\"></a>2.12 外部模板</h3><h3 id=\"2-13-局部和匿名类型作模板实参\"><a href=\"#2-13-局部和匿名类型作模板实参\" class=\"headerlink\" title=\"2.13 局部和匿名类型作模板实参\"></a>2.13 局部和匿名类型作模板实参</h3><h2 id=\"3-通用为本-专用为末\"><a href=\"#3-通用为本-专用为末\" class=\"headerlink\" title=\"3 通用为本, 专用为末\"></a>3 通用为本, 专用为末</h2><h3 id=\"3-1-继承构造函数\"><a href=\"#3-1-继承构造函数\" class=\"headerlink\" title=\"3.1 继承构造函数\"></a>3.1 继承构造函数</h3><p>子类可以通过使用using声明来声明继承基类的构造函数.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">A</span>(<span class=\"type\">int</span> i) &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">B</span> : A &#123;</span><br><span class=\"line\">  <span class=\"keyword\">using</span> A::A;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">int</span> d &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\">B <span class=\"title\">b</span><span class=\"params\">(<span class=\"number\">365</span>)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-委派构造函数\"><a href=\"#3-2-委派构造函数\" class=\"headerlink\" title=\"3.2 委派构造函数\"></a>3.2 委派构造函数</h3><p>在C++11中，委派构造函数，就是指委派函数将构造的任务委派给了目标构造函数来完成的这样一种类构造的方式.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Info</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"built_in\">Info</span>() : <span class=\"built_in\">Info</span>(<span class=\"number\">1</span>, <span class=\"string\">&#x27;a&#x27;</span>) &#123;&#125;</span><br><span class=\"line\">  <span class=\"built_in\">Info</span>(<span class=\"type\">int</span> i) : <span class=\"built_in\">Info</span>(i, <span class=\"string\">&#x27;a&#x27;</span>) &#123;&#125;</span><br><span class=\"line\">  <span class=\"built_in\">Info</span>(<span class=\"type\">char</span> e) : <span class=\"built_in\">Info</span>(<span class=\"number\">1</span>, e) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">  <span class=\"built_in\">Info</span>(<span class=\"type\">int</span> i, <span class=\"type\">char</span> e): <span class=\"built_in\">type</span>(i), <span class=\"built_in\">name</span>(e) &#123;&#125;</span><br><span class=\"line\">  <span class=\"type\">int</span> type;</span><br><span class=\"line\">  <span class=\"type\">char</span> name;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-右值引用；移动语义和完美转发\"><a href=\"#3-3-右值引用；移动语义和完美转发\" class=\"headerlink\" title=\"3.3 右值引用；移动语义和完美转发\"></a>3.3 右值引用；移动语义和完美转发</h3><p>3.3.1 指针成员与拷贝构造<br>涉及到指针要使用深拷贝.</p>\n<p>3.3.2 移动语义<br>移动构造函数</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">HasPtrMem</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"built_in\">HasPtrMem</span>():<span class=\"built_in\">d</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">int</span>(<span class=\"number\">3</span>)) &#123;&#125;</span><br><span class=\"line\">  <span class=\"built_in\">HasPtrMem</span>(<span class=\"type\">const</span> HasPtrMem &amp;h):<span class=\"built_in\">d</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">int</span>(*h.d)) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">HasPtrMem</span>(HasPtrMem &amp;&amp; h) : <span class=\"built_in\">d</span>(h.d) &#123; <span class=\"comment\">// 移动构造函数</span></span><br><span class=\"line\">    h.d = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ~<span class=\"built_in\">HasPtrMem</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> d;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">int</span> *d</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>3.3.3 左值\\右值 与 右值引用</p>\n<p>可以取地址的、有名字的就是左值.<br>不可以取地址的，没有名字的就是右值.</p>\n<p>c++11 中, 右值分为两种, 将亡值(xvalue, eXpiring Value), 纯右值(prvalue, Pure Rvalue)</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T &amp;&amp; a = <span class=\"built_in\">ReturnRvalue</span>();</span><br><span class=\"line\">T b = <span class=\"built_in\">ReturnRvalue</span>();</span><br></pre></td></tr></table></figure>\n<p>右值引用是不能绑定到任何左值的</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> c;</span><br><span class=\"line\"><span class=\"type\">int</span> &amp;&amp; d = c; <span class=\"comment\">// X 编译失败</span></span><br></pre></td></tr></table></figure>\n\n<p>出现这样的状况的原因是，在常量左值引用在 C++98 标准中开始就是个“万能”的引用 类型。它可以接受非常量左值、常量左值、右值对其进行初始化。而且在使用右值对其初始 化的时候，常量左值引用还可以像右值引用一样将右值的生命期延长。不过相比于右值引用 所引用的右值，常量左值所引用的右值在它的“余生”中只能是只读的。相对地，非常量左 值只能接受非常量左值对其进行初始化。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">bool</span> &amp; judge = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">bool</span> judge2 = <span class=\"literal\">true</span>;</span><br></pre></td></tr></table></figure>\n\n<p>常量左值引用可以减少对象开销.</p>\n<p>3.3.4 std::move 强制转化为右值</p>\n<p>3.3.5 移动语义的一些其他问题<br>move_if_noexcept(x)<br>如果x是noexcept的, 则为move语义，否则为copy语义.</p>\n<p>3.3.6 完美转发 P85</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">IrunCodeActually</span><span class=\"params\">(<span class=\"type\">int</span> t)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">IamForwarding</span><span class=\"params\">(T &amp;&amp; t)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">IrunCodeActually</span>(<span class=\"built_in\">static_cast</span>&lt;T &amp;&amp;&gt;(t));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">RunCode</span><span class=\"params\">(<span class=\"type\">int</span> &amp;&amp; m)</span> </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">RunCode</span><span class=\"params\">(<span class=\"type\">int</span> &amp; m)</span> </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">RunCode</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">int</span> &amp;&amp; m)</span> </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">RunCode</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">int</span> &amp; m)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">PerfectForward</span><span class=\"params\">(T &amp;&amp; t)</span> </span>&#123; <span class=\"built_in\">RunCode</span>(forward&lt;T&gt;(t)); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"type\">int</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"type\">const</span> <span class=\"type\">int</span> c = <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"type\">const</span> <span class=\"type\">int</span> d = <span class=\"number\">4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">PerfectForward</span>(a);</span><br><span class=\"line\">  <span class=\"built_in\">PerfectForward</span>(<span class=\"built_in\">move</span>(b));</span><br><span class=\"line\">  <span class=\"built_in\">PerfectForward</span>(c);</span><br><span class=\"line\">  <span class=\"built_in\">PerfectForward</span>(<span class=\"built_in\">move</span>(d));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>3.4 显示转换操作符</p>\n<p><code>explicit</code></p>\n<p>3.5 列表初始化<br>3.5.1 初始化列表</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">map&lt;<span class=\"type\">int</span>, <span class=\"type\">float</span>&gt; m = &#123;&#123;<span class=\"number\">1</span>, <span class=\"number\">1.0f</span>&#125;, &#123;<span class=\"number\">2</span>, <span class=\"number\">2.1f</span>&#125;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">initializer_list&lt;<span class=\"type\">int</span>&gt;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>3.5.2 防止类型收窄<br>C++11 使用列表初始化可以防范类型收窄, 也能够加强类型使用的安全性.</p>\n<p>3.6 POD类型 P105</p>\n<p>3.7 非受限联合体</p>\n<p>3.8 用户自定义字面量</p>\n<p>3.9 内联名字空间<br><code>inline namespace</code></p>\n<p>3.10 模板的别名</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> std::vector&lt;std::string&gt; strvec;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// c++11</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> uint = <span class=\"type\">unsigned</span> <span class=\"type\">int</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">unsigned</span> <span class=\"type\">int</span> UINT;</span><br><span class=\"line\"><span class=\"keyword\">using</span> sint = <span class=\"type\">int</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt; </span><br><span class=\"line\"><span class=\"keyword\">using</span> MapString = std::map&lt;T, <span class=\"type\">char</span> *&gt;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">MapString&lt;<span class=\"type\">int</span>&gt; numberedString;</span><br></pre></td></tr></table></figure>\n\n<p>3.11 一般化的SFINEA规则<br>模板推导</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">typedef</span> <span class=\"type\">int</span> foo;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">f</span><span class=\"params\">(<span class=\"keyword\">typename</span> T::foo)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">f</span><span class=\"params\">(T)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">f</span>&lt;Test&gt;(<span class=\"number\">10</span>); <span class=\"comment\">// #1</span></span><br><span class=\"line\">  <span class=\"built_in\">f</span>&lt;<span class=\"type\">int</span>&gt;(<span class=\"number\">10</span>); <span class=\"comment\">// #2</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-新手易学，老兵易用\"><a href=\"#4-新手易学，老兵易用\" class=\"headerlink\" title=\"4 新手易学，老兵易用\"></a>4 新手易学，老兵易用</h2><p>4.1 右尖括号&gt;的改进</p>\n<p>4.2 auto类型推导</p>\n<p>4.3 decltype</p>\n<p>4.4 追踪返回类型</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T1, <span class=\"keyword\">typename</span> T2&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">auto</span> <span class=\"title\">Sum</span><span class=\"params\">(T1 &amp; t1, T2 &amp; t2)</span> -&gt; <span class=\"title\">decltype</span><span class=\"params\">(t1 + t2)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> t1 + t2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>4.4.2 使用追踪返回类型的函数</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">func</span><span class=\"params\">(<span class=\"type\">char</span> *a, <span class=\"type\">int</span> b)</span></span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"5-提高类型安全\"><a href=\"#5-提高类型安全\" class=\"headerlink\" title=\"5 提高类型安全\"></a>5 提高类型安全</h2><p>5.1 强类型枚举</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">enum class</span> <span class=\"title class_\">Type</span> &#123;&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>5.2 堆内存管理：智能指针与垃圾回收<br>unique_ptr, shared_ptr, weak_ptr</p>\n<h2 id=\"6-提高性能及操作硬件的能力\"><a href=\"#6-提高性能及操作硬件的能力\" class=\"headerlink\" title=\"6 提高性能及操作硬件的能力\"></a>6 提高性能及操作硬件的能力</h2><p>6.1 常量表达式</p>\n<p>变长参数</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pair&lt;<span class=\"type\">int</span>, <span class=\"type\">double</span>&gt;;</span><br><span class=\"line\"></span><br><span class=\"line\">std::tuple&lt;<span class=\"type\">double</span>, <span class=\"type\">char</span>, std::string&gt; collections;</span><br></pre></td></tr></table></figure>\n<p>变长模板</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;typeame... Elements&gt; <span class=\"keyword\">class</span> <span class=\"title class_\">tuple</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">tuple&lt;<span class=\"type\">int</span>, <span class=\"type\">char</span>, <span class=\"type\">double</span>&gt;;</span><br></pre></td></tr></table></figure>\n\n<p>6.3 原子类型与原子操作 P196</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">atomic_llong</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-为改变思考方式而改变\"><a href=\"#7-为改变思考方式而改变\" class=\"headerlink\" title=\"7 为改变思考方式而改变\"></a>7 为改变思考方式而改变</h2><p>7.2 默认函数的控制 P227</p>\n<p>7.3 lambda函数 P234</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[capture](parameters) <span class=\"keyword\">mutable</span> -&gt; <span class=\"keyword\">return</span>-type &#123; statement &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">[]&#123;&#125;</span><br></pre></td></tr></table></figure>\n<p>捕捉列表</p>\n<ul>\n<li><code>[var]</code> 值传递</li>\n<li><code>[=]</code> 值传递方式捕捉所有父作用于的变量</li>\n<li><code>[&amp;var]</code> 引用传递</li>\n<li><code>[&amp;]</code> 引用传递捕捉父作用于的变脸</li>\n<li><code>this</code> 表示值传递的方式捕捉当前的this指针</li>\n</ul>\n<h2 id=\"8-融入实际应用\"><a href=\"#8-融入实际应用\" class=\"headerlink\" title=\"8 融入实际应用\"></a>8 融入实际应用</h2><p>8.1 对齐 P258</p>\n<p>8.2 通用属性</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"2-保证稳定性与兼容性\"><a href=\"#2-保证稳定性与兼容性\" class=\"headerlink\" title=\"2. 保证稳定性与兼容性\"></a>2. 保证稳定性与兼容性</h2><h3 id=\"c-11\"><a href=\"#c-11\" class=\"headerlink\" title=\"c++11\"></a>c++11</h3><p>通过内存模型、线程、原子操作等来支持本地并行编程(Native Concurrency)。<br>通过统一初始化表达式、auto、declytype、移动语义等来统一对泛型编程的支持。<br>通过 constexpr、POD(概念)等更好地支持系统编程。<br>通过内联命名空间、继承构造函数和右值引用等，以更好地支持库的构建。</p>\n<h3 id=\"Pragma\"><a href=\"#Pragma\" class=\"headerlink\" title=\"_Pragma\"></a>_Pragma</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">_Pragma</span>(<span class=\"string\">&quot;once)</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"变长参数定义以及-VA-ARGS\"><a href=\"#变长参数定义以及-VA-ARGS\" class=\"headerlink\" title=\"变长参数定义以及__VA_ARGS_\"></a>变长参数定义以及__VA_ARGS_</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> PR(...) printf(__VA_ARGS__) </span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"long-long\"><a href=\"#long-long\" class=\"headerlink\" title=\"long long\"></a>long long</h3><ul>\n<li>ll (long long) %lld</li>\n<li>ull (unsigned long long) %llu</li>\n</ul>\n<p>limits.h<br>LLONG_MIN<br>LLONG_MAX<br>ULLONG_MIN</p>\n<h3 id=\"静态断言-static-assert\"><a href=\"#静态断言-static-assert\" class=\"headerlink\" title=\"静态断言 + static_assert\"></a>静态断言 + static_assert</h3><p>静态断言<br>编译时期断言</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> t, <span class=\"keyword\">typename</span> u&gt; <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">bit_copy</span><span class=\"params\">(t&amp; a, u&amp; b)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">static_assert</span>(<span class=\"built_in\">sizeof</span>(b) == <span class=\"built_in\">sizeof</span>(a), <span class=\"string\">&quot;the parameters of bit_coppy must have same width.&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// TODO</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"noexcept\"><a href=\"#noexcept\" class=\"headerlink\" title=\"noexcept\"></a>noexcept</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">BlockThrow</span><span class=\"params\">()</span> <span class=\"keyword\">noexcept</span> </span>&#123; <span class=\"built_in\">Throw</span>(); &#125;</span><br></pre></td></tr></table></figure>\n<p>noexcept 会直接调用<code>std::terminate</code>中断程序的执行,阻止异常传播.<br>即声明不抛出异常的函数</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">class</span> <span class=\"title class_\">T</span>&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fun</span><span class=\"params\">()</span> <span class=\"title\">noexcept</span><span class=\"params\">(<span class=\"keyword\">noexcept</span>(T()))</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>eg:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">class</span> <span class=\"title class_\">T</span>&gt; <span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"keyword\">constexpr</span> T <span class=\"title\">min</span><span class=\"params\">()</span> <span class=\"keyword\">noexcept</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">T</span>(); &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"keyword\">constexpr</span> T <span class=\"title\">max</span><span class=\"params\">()</span> <span class=\"keyword\">noexcept</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">T</span>(); &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"keyword\">constexpr</span> T <span class=\"title\">lowest</span><span class=\"params\">()</span> <span class=\"keyword\">noexcept</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">T</span>(); &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>c++11中类的析构函数默认也是noexcept(true)的.</p>\n<h3 id=\"2-7-快速初始化成员变量\"><a href=\"#2-7-快速初始化成员变量\" class=\"headerlink\" title=\"2.7 快速初始化成员变量\"></a>2.7 快速初始化成员变量</h3><p>C++11 允许使用&#x3D; {} 进行就地的非静态成员变量初始化。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">init</span>&#123; <span class=\"type\">int</span> a = <span class=\"number\">1</span>; <span class=\"type\">double</span> b &#123;<span class=\"number\">1.2</span>&#125;; &#125;</span><br></pre></td></tr></table></figure>\n\n<p>初始化列表 后作用与 非静态成员, 即 初始化列表的效果总是优先于就地初始化的。</p>\n<h3 id=\"2-8-非静态成员的sizeof\"><a href=\"#2-8-非静态成员的sizeof\" class=\"headerlink\" title=\"2.8 非静态成员的sizeof\"></a>2.8 非静态成员的sizeof</h3><p>c++11 中对非静态成员变量使用sizeof操作是合法的。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">People</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> hand;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"built_in\">sizeof</span>(People::hand) &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"2-9-friend\"><a href=\"#2-9-friend\" class=\"headerlink\" title=\"2.9 friend\"></a>2.9 friend</h3><h3 id=\"2-10-final-x2F-override\"><a href=\"#2-10-final-x2F-override\" class=\"headerlink\" title=\"2.10 final&#x2F;override\"></a>2.10 final&#x2F;override</h3><p><code>final</code>关键字使派生类不可覆盖它所修饰的虚函数.</p>\n<p>如果派生类的虚函数声明时, 使用了<code>override</code>描述符, 那么该函数必须重载其基类中的同名函数，否则代码将无法通过编译。</p>\n<h3 id=\"2-11-模板函数的默认模板参数\"><a href=\"#2-11-模板函数的默认模板参数\" class=\"headerlink\" title=\"2.11 模板函数的默认模板参数\"></a>2.11 模板函数的默认模板参数</h3><h3 id=\"2-12-外部模板\"><a href=\"#2-12-外部模板\" class=\"headerlink\" title=\"2.12 外部模板\"></a>2.12 外部模板</h3><h3 id=\"2-13-局部和匿名类型作模板实参\"><a href=\"#2-13-局部和匿名类型作模板实参\" class=\"headerlink\" title=\"2.13 局部和匿名类型作模板实参\"></a>2.13 局部和匿名类型作模板实参</h3><h2 id=\"3-通用为本-专用为末\"><a href=\"#3-通用为本-专用为末\" class=\"headerlink\" title=\"3 通用为本, 专用为末\"></a>3 通用为本, 专用为末</h2><h3 id=\"3-1-继承构造函数\"><a href=\"#3-1-继承构造函数\" class=\"headerlink\" title=\"3.1 继承构造函数\"></a>3.1 继承构造函数</h3><p>子类可以通过使用using声明来声明继承基类的构造函数.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">A</span>(<span class=\"type\">int</span> i) &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">B</span> : A &#123;</span><br><span class=\"line\">  <span class=\"keyword\">using</span> A::A;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">int</span> d &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\">B <span class=\"title\">b</span><span class=\"params\">(<span class=\"number\">365</span>)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-委派构造函数\"><a href=\"#3-2-委派构造函数\" class=\"headerlink\" title=\"3.2 委派构造函数\"></a>3.2 委派构造函数</h3><p>在C++11中，委派构造函数，就是指委派函数将构造的任务委派给了目标构造函数来完成的这样一种类构造的方式.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Info</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"built_in\">Info</span>() : <span class=\"built_in\">Info</span>(<span class=\"number\">1</span>, <span class=\"string\">&#x27;a&#x27;</span>) &#123;&#125;</span><br><span class=\"line\">  <span class=\"built_in\">Info</span>(<span class=\"type\">int</span> i) : <span class=\"built_in\">Info</span>(i, <span class=\"string\">&#x27;a&#x27;</span>) &#123;&#125;</span><br><span class=\"line\">  <span class=\"built_in\">Info</span>(<span class=\"type\">char</span> e) : <span class=\"built_in\">Info</span>(<span class=\"number\">1</span>, e) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">  <span class=\"built_in\">Info</span>(<span class=\"type\">int</span> i, <span class=\"type\">char</span> e): <span class=\"built_in\">type</span>(i), <span class=\"built_in\">name</span>(e) &#123;&#125;</span><br><span class=\"line\">  <span class=\"type\">int</span> type;</span><br><span class=\"line\">  <span class=\"type\">char</span> name;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-右值引用；移动语义和完美转发\"><a href=\"#3-3-右值引用；移动语义和完美转发\" class=\"headerlink\" title=\"3.3 右值引用；移动语义和完美转发\"></a>3.3 右值引用；移动语义和完美转发</h3><p>3.3.1 指针成员与拷贝构造<br>涉及到指针要使用深拷贝.</p>\n<p>3.3.2 移动语义<br>移动构造函数</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">HasPtrMem</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"built_in\">HasPtrMem</span>():<span class=\"built_in\">d</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">int</span>(<span class=\"number\">3</span>)) &#123;&#125;</span><br><span class=\"line\">  <span class=\"built_in\">HasPtrMem</span>(<span class=\"type\">const</span> HasPtrMem &amp;h):<span class=\"built_in\">d</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">int</span>(*h.d)) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">HasPtrMem</span>(HasPtrMem &amp;&amp; h) : <span class=\"built_in\">d</span>(h.d) &#123; <span class=\"comment\">// 移动构造函数</span></span><br><span class=\"line\">    h.d = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ~<span class=\"built_in\">HasPtrMem</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> d;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">int</span> *d</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>3.3.3 左值\\右值 与 右值引用</p>\n<p>可以取地址的、有名字的就是左值.<br>不可以取地址的，没有名字的就是右值.</p>\n<p>c++11 中, 右值分为两种, 将亡值(xvalue, eXpiring Value), 纯右值(prvalue, Pure Rvalue)</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T &amp;&amp; a = <span class=\"built_in\">ReturnRvalue</span>();</span><br><span class=\"line\">T b = <span class=\"built_in\">ReturnRvalue</span>();</span><br></pre></td></tr></table></figure>\n<p>右值引用是不能绑定到任何左值的</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> c;</span><br><span class=\"line\"><span class=\"type\">int</span> &amp;&amp; d = c; <span class=\"comment\">// X 编译失败</span></span><br></pre></td></tr></table></figure>\n\n<p>出现这样的状况的原因是，在常量左值引用在 C++98 标准中开始就是个“万能”的引用 类型。它可以接受非常量左值、常量左值、右值对其进行初始化。而且在使用右值对其初始 化的时候，常量左值引用还可以像右值引用一样将右值的生命期延长。不过相比于右值引用 所引用的右值，常量左值所引用的右值在它的“余生”中只能是只读的。相对地，非常量左 值只能接受非常量左值对其进行初始化。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">bool</span> &amp; judge = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">bool</span> judge2 = <span class=\"literal\">true</span>;</span><br></pre></td></tr></table></figure>\n\n<p>常量左值引用可以减少对象开销.</p>\n<p>3.3.4 std::move 强制转化为右值</p>\n<p>3.3.5 移动语义的一些其他问题<br>move_if_noexcept(x)<br>如果x是noexcept的, 则为move语义，否则为copy语义.</p>\n<p>3.3.6 完美转发 P85</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">IrunCodeActually</span><span class=\"params\">(<span class=\"type\">int</span> t)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">IamForwarding</span><span class=\"params\">(T &amp;&amp; t)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">IrunCodeActually</span>(<span class=\"built_in\">static_cast</span>&lt;T &amp;&amp;&gt;(t));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">RunCode</span><span class=\"params\">(<span class=\"type\">int</span> &amp;&amp; m)</span> </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">RunCode</span><span class=\"params\">(<span class=\"type\">int</span> &amp; m)</span> </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">RunCode</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">int</span> &amp;&amp; m)</span> </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">RunCode</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">int</span> &amp; m)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">PerfectForward</span><span class=\"params\">(T &amp;&amp; t)</span> </span>&#123; <span class=\"built_in\">RunCode</span>(forward&lt;T&gt;(t)); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"type\">int</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"type\">const</span> <span class=\"type\">int</span> c = <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"type\">const</span> <span class=\"type\">int</span> d = <span class=\"number\">4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">PerfectForward</span>(a);</span><br><span class=\"line\">  <span class=\"built_in\">PerfectForward</span>(<span class=\"built_in\">move</span>(b));</span><br><span class=\"line\">  <span class=\"built_in\">PerfectForward</span>(c);</span><br><span class=\"line\">  <span class=\"built_in\">PerfectForward</span>(<span class=\"built_in\">move</span>(d));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>3.4 显示转换操作符</p>\n<p><code>explicit</code></p>\n<p>3.5 列表初始化<br>3.5.1 初始化列表</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">map&lt;<span class=\"type\">int</span>, <span class=\"type\">float</span>&gt; m = &#123;&#123;<span class=\"number\">1</span>, <span class=\"number\">1.0f</span>&#125;, &#123;<span class=\"number\">2</span>, <span class=\"number\">2.1f</span>&#125;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">initializer_list&lt;<span class=\"type\">int</span>&gt;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>3.5.2 防止类型收窄<br>C++11 使用列表初始化可以防范类型收窄, 也能够加强类型使用的安全性.</p>\n<p>3.6 POD类型 P105</p>\n<p>3.7 非受限联合体</p>\n<p>3.8 用户自定义字面量</p>\n<p>3.9 内联名字空间<br><code>inline namespace</code></p>\n<p>3.10 模板的别名</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> std::vector&lt;std::string&gt; strvec;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// c++11</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> uint = <span class=\"type\">unsigned</span> <span class=\"type\">int</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">unsigned</span> <span class=\"type\">int</span> UINT;</span><br><span class=\"line\"><span class=\"keyword\">using</span> sint = <span class=\"type\">int</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt; </span><br><span class=\"line\"><span class=\"keyword\">using</span> MapString = std::map&lt;T, <span class=\"type\">char</span> *&gt;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">MapString&lt;<span class=\"type\">int</span>&gt; numberedString;</span><br></pre></td></tr></table></figure>\n\n<p>3.11 一般化的SFINEA规则<br>模板推导</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">typedef</span> <span class=\"type\">int</span> foo;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">f</span><span class=\"params\">(<span class=\"keyword\">typename</span> T::foo)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">f</span><span class=\"params\">(T)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">f</span>&lt;Test&gt;(<span class=\"number\">10</span>); <span class=\"comment\">// #1</span></span><br><span class=\"line\">  <span class=\"built_in\">f</span>&lt;<span class=\"type\">int</span>&gt;(<span class=\"number\">10</span>); <span class=\"comment\">// #2</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-新手易学，老兵易用\"><a href=\"#4-新手易学，老兵易用\" class=\"headerlink\" title=\"4 新手易学，老兵易用\"></a>4 新手易学，老兵易用</h2><p>4.1 右尖括号&gt;的改进</p>\n<p>4.2 auto类型推导</p>\n<p>4.3 decltype</p>\n<p>4.4 追踪返回类型</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T1, <span class=\"keyword\">typename</span> T2&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">auto</span> <span class=\"title\">Sum</span><span class=\"params\">(T1 &amp; t1, T2 &amp; t2)</span> -&gt; <span class=\"title\">decltype</span><span class=\"params\">(t1 + t2)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> t1 + t2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>4.4.2 使用追踪返回类型的函数</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">func</span><span class=\"params\">(<span class=\"type\">char</span> *a, <span class=\"type\">int</span> b)</span></span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"5-提高类型安全\"><a href=\"#5-提高类型安全\" class=\"headerlink\" title=\"5 提高类型安全\"></a>5 提高类型安全</h2><p>5.1 强类型枚举</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">enum class</span> <span class=\"title class_\">Type</span> &#123;&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>5.2 堆内存管理：智能指针与垃圾回收<br>unique_ptr, shared_ptr, weak_ptr</p>\n<h2 id=\"6-提高性能及操作硬件的能力\"><a href=\"#6-提高性能及操作硬件的能力\" class=\"headerlink\" title=\"6 提高性能及操作硬件的能力\"></a>6 提高性能及操作硬件的能力</h2><p>6.1 常量表达式</p>\n<p>变长参数</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pair&lt;<span class=\"type\">int</span>, <span class=\"type\">double</span>&gt;;</span><br><span class=\"line\"></span><br><span class=\"line\">std::tuple&lt;<span class=\"type\">double</span>, <span class=\"type\">char</span>, std::string&gt; collections;</span><br></pre></td></tr></table></figure>\n<p>变长模板</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;typeame... Elements&gt; <span class=\"keyword\">class</span> <span class=\"title class_\">tuple</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">tuple&lt;<span class=\"type\">int</span>, <span class=\"type\">char</span>, <span class=\"type\">double</span>&gt;;</span><br></pre></td></tr></table></figure>\n\n<p>6.3 原子类型与原子操作 P196</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">atomic_llong</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-为改变思考方式而改变\"><a href=\"#7-为改变思考方式而改变\" class=\"headerlink\" title=\"7 为改变思考方式而改变\"></a>7 为改变思考方式而改变</h2><p>7.2 默认函数的控制 P227</p>\n<p>7.3 lambda函数 P234</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[capture](parameters) <span class=\"keyword\">mutable</span> -&gt; <span class=\"keyword\">return</span>-type &#123; statement &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">[]&#123;&#125;</span><br></pre></td></tr></table></figure>\n<p>捕捉列表</p>\n<ul>\n<li><code>[var]</code> 值传递</li>\n<li><code>[=]</code> 值传递方式捕捉所有父作用于的变量</li>\n<li><code>[&amp;var]</code> 引用传递</li>\n<li><code>[&amp;]</code> 引用传递捕捉父作用于的变脸</li>\n<li><code>this</code> 表示值传递的方式捕捉当前的this指针</li>\n</ul>\n<h2 id=\"8-融入实际应用\"><a href=\"#8-融入实际应用\" class=\"headerlink\" title=\"8 融入实际应用\"></a>8 融入实际应用</h2><p>8.1 对齐 P258</p>\n<p>8.2 通用属性</p>\n"},{"layout":"title","title":"git常用操作","date":"2022-10-17T06:48:01.000Z","_content":"\n## Merge\ngit merge --abort\n\n\n## 显示多个分支的共同commit\n```\n# 显示多个commit依次合并后的base\ngit merge-base $branch1 $branch2 \n\n# 显示多个commit的共同base\ngit show-branch --merge-base $branch1 $branch2 \n```\n\n## cherry-pick\n\n- 转移单个提交\n```\ngit cherry-pick <commitHash>/<branch>\n```\n- 转移多次提交\n```\ngit cherry-pick <HashA> <HashB>\ngit cherry-pick A..B # 不含A\ngit cherry-pick A^..B # 含A\n```\n## rebase\n\n```sh\ngit rebase [startpoint] [endpoint] --onto [branchname]\n```\n\n# Ref\nhttps://zhuanlan.zhihu.com/p/75499871\nhttps://www.jianshu.com/p/4a8f4af4e803","source":"_posts/5-git.md","raw":"---\nlayout: title\ntitle: git常用操作\ndate: 2022-10-17 14:48:01\ntags: git,code\n---\n\n## Merge\ngit merge --abort\n\n\n## 显示多个分支的共同commit\n```\n# 显示多个commit依次合并后的base\ngit merge-base $branch1 $branch2 \n\n# 显示多个commit的共同base\ngit show-branch --merge-base $branch1 $branch2 \n```\n\n## cherry-pick\n\n- 转移单个提交\n```\ngit cherry-pick <commitHash>/<branch>\n```\n- 转移多次提交\n```\ngit cherry-pick <HashA> <HashB>\ngit cherry-pick A..B # 不含A\ngit cherry-pick A^..B # 含A\n```\n## rebase\n\n```sh\ngit rebase [startpoint] [endpoint] --onto [branchname]\n```\n\n# Ref\nhttps://zhuanlan.zhihu.com/p/75499871\nhttps://www.jianshu.com/p/4a8f4af4e803","slug":"5-git","published":1,"updated":"2022-10-17T08:22:43.504Z","comments":1,"photos":[],"link":"","_id":"cl9xoa92k0006rgnhe0965n9a","content":"<h2 id=\"Merge\"><a href=\"#Merge\" class=\"headerlink\" title=\"Merge\"></a>Merge</h2><p>git merge –abort</p>\n<h2 id=\"显示多个分支的共同commit\"><a href=\"#显示多个分支的共同commit\" class=\"headerlink\" title=\"显示多个分支的共同commit\"></a>显示多个分支的共同commit</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 显示多个commit依次合并后的base</span><br><span class=\"line\">git merge-base $branch1 $branch2 </span><br><span class=\"line\"></span><br><span class=\"line\"># 显示多个commit的共同base</span><br><span class=\"line\">git show-branch --merge-base $branch1 $branch2 </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"cherry-pick\"><a href=\"#cherry-pick\" class=\"headerlink\" title=\"cherry-pick\"></a>cherry-pick</h2><ul>\n<li>转移单个提交<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cherry-pick &lt;commitHash&gt;/&lt;branch&gt;</span><br></pre></td></tr></table></figure></li>\n<li>转移多次提交<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cherry-pick &lt;HashA&gt; &lt;HashB&gt;</span><br><span class=\"line\">git cherry-pick A..B # 不含A</span><br><span class=\"line\">git cherry-pick A^..B # 含A</span><br></pre></td></tr></table></figure>\n<h2 id=\"rebase\"><a href=\"#rebase\" class=\"headerlink\" title=\"rebase\"></a>rebase</h2></li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase [startpoint] [endpoint] --onto [branchname]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Ref\"><a href=\"#Ref\" class=\"headerlink\" title=\"Ref\"></a>Ref</h1><p><a href=\"https://zhuanlan.zhihu.com/p/75499871\">https://zhuanlan.zhihu.com/p/75499871</a><br><a href=\"https://www.jianshu.com/p/4a8f4af4e803\">https://www.jianshu.com/p/4a8f4af4e803</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Merge\"><a href=\"#Merge\" class=\"headerlink\" title=\"Merge\"></a>Merge</h2><p>git merge –abort</p>\n<h2 id=\"显示多个分支的共同commit\"><a href=\"#显示多个分支的共同commit\" class=\"headerlink\" title=\"显示多个分支的共同commit\"></a>显示多个分支的共同commit</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 显示多个commit依次合并后的base</span><br><span class=\"line\">git merge-base $branch1 $branch2 </span><br><span class=\"line\"></span><br><span class=\"line\"># 显示多个commit的共同base</span><br><span class=\"line\">git show-branch --merge-base $branch1 $branch2 </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"cherry-pick\"><a href=\"#cherry-pick\" class=\"headerlink\" title=\"cherry-pick\"></a>cherry-pick</h2><ul>\n<li>转移单个提交<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cherry-pick &lt;commitHash&gt;/&lt;branch&gt;</span><br></pre></td></tr></table></figure></li>\n<li>转移多次提交<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cherry-pick &lt;HashA&gt; &lt;HashB&gt;</span><br><span class=\"line\">git cherry-pick A..B # 不含A</span><br><span class=\"line\">git cherry-pick A^..B # 含A</span><br></pre></td></tr></table></figure>\n<h2 id=\"rebase\"><a href=\"#rebase\" class=\"headerlink\" title=\"rebase\"></a>rebase</h2></li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase [startpoint] [endpoint] --onto [branchname]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Ref\"><a href=\"#Ref\" class=\"headerlink\" title=\"Ref\"></a>Ref</h1><p><a href=\"https://zhuanlan.zhihu.com/p/75499871\">https://zhuanlan.zhihu.com/p/75499871</a><br><a href=\"https://www.jianshu.com/p/4a8f4af4e803\">https://www.jianshu.com/p/4a8f4af4e803</a></p>\n"},{"title":"android","date":"2022-10-30T08:54:12.000Z","_content":"\n[TOC]\n\n## 3.init进程\n## 4. JNI与NDK\n4.1 Android 与 JNI\n4.2 JNI的基本原理\n4.3 调用JNI函数\n4.4 在C程序中运行Java类\n4.5 直接注册JNI本地函数\n4.6 使用Android NDK开发\n## 5. Zygote P137\n5.1 Zygote是什么\n5.2 由app_process运行ZygoteInit class\n\nZygote由Java编写, 不能直接由init启动。需要由app_process进程生成dalvik虚拟机，在虚拟机上状态运行ZygoteInit类。\n\n5.2.1 生成AppRuntime对象\nAppRuntime --> AndroidRuntime\n\n`app_process [java-options] cmd-dir start-class-name [options]`\n- java-options 传给虚拟机的选项，必须以-开始\n- cmd-dir 所需要运行的进程所在的目录\n- start-class-name 在虚拟机中运行的类的名称, 在加载到虚拟机后调用类的main\n- \\[options\\] 传递给类的选项\n\n```sh\n/system/bin/app_process -Xzygote /system/bin --zygote --start-system-server\n```\n\n5.2.2 调用AppRuntime对象\n\n5.2.3 创建Dalvik虚拟机\n\n5.2.4 运行ZygoteInit类\n\n5.3 ZygoteInit类的功能\n\n5.3.1 绑定/dev/socket/zygote套接字\n\n5.2.3 加载应用程序Framework中的类与平台资源\n\n5.3.3 运行SystemServer\n\n\n## 6. Android服务概要\n## 7. Android Binder IPC\n## 8. Android Service Framework\n## 9. 本地系统服务 Native System Service\n## 10. Java服务框架 Java Service Framework\n## 11. Java系统服务运行分析\n\n\n\n\n","source":"_posts/6-android.md","raw":"---\ntitle: android\ndate: 2022-10-30 16:54:12\ntags:\n---\n\n[TOC]\n\n## 3.init进程\n## 4. JNI与NDK\n4.1 Android 与 JNI\n4.2 JNI的基本原理\n4.3 调用JNI函数\n4.4 在C程序中运行Java类\n4.5 直接注册JNI本地函数\n4.6 使用Android NDK开发\n## 5. Zygote P137\n5.1 Zygote是什么\n5.2 由app_process运行ZygoteInit class\n\nZygote由Java编写, 不能直接由init启动。需要由app_process进程生成dalvik虚拟机，在虚拟机上状态运行ZygoteInit类。\n\n5.2.1 生成AppRuntime对象\nAppRuntime --> AndroidRuntime\n\n`app_process [java-options] cmd-dir start-class-name [options]`\n- java-options 传给虚拟机的选项，必须以-开始\n- cmd-dir 所需要运行的进程所在的目录\n- start-class-name 在虚拟机中运行的类的名称, 在加载到虚拟机后调用类的main\n- \\[options\\] 传递给类的选项\n\n```sh\n/system/bin/app_process -Xzygote /system/bin --zygote --start-system-server\n```\n\n5.2.2 调用AppRuntime对象\n\n5.2.3 创建Dalvik虚拟机\n\n5.2.4 运行ZygoteInit类\n\n5.3 ZygoteInit类的功能\n\n5.3.1 绑定/dev/socket/zygote套接字\n\n5.2.3 加载应用程序Framework中的类与平台资源\n\n5.3.3 运行SystemServer\n\n\n## 6. Android服务概要\n## 7. Android Binder IPC\n## 8. Android Service Framework\n## 9. 本地系统服务 Native System Service\n## 10. Java服务框架 Java Service Framework\n## 11. Java系统服务运行分析\n\n\n\n\n","slug":"6-android","published":1,"updated":"2022-11-12T10:25:02.095Z","_id":"cl9xoa92l0007rgnhb2lb97te","comments":1,"layout":"post","photos":[],"link":"","content":"<p>[TOC]</p>\n<h2 id=\"3-init进程\"><a href=\"#3-init进程\" class=\"headerlink\" title=\"3.init进程\"></a>3.init进程</h2><h2 id=\"4-JNI与NDK\"><a href=\"#4-JNI与NDK\" class=\"headerlink\" title=\"4. JNI与NDK\"></a>4. JNI与NDK</h2><p>4.1 Android 与 JNI<br>4.2 JNI的基本原理<br>4.3 调用JNI函数<br>4.4 在C程序中运行Java类<br>4.5 直接注册JNI本地函数<br>4.6 使用Android NDK开发</p>\n<h2 id=\"5-Zygote-P137\"><a href=\"#5-Zygote-P137\" class=\"headerlink\" title=\"5. Zygote P137\"></a>5. Zygote P137</h2><p>5.1 Zygote是什么<br>5.2 由app_process运行ZygoteInit class</p>\n<p>Zygote由Java编写, 不能直接由init启动。需要由app_process进程生成dalvik虚拟机，在虚拟机上状态运行ZygoteInit类。</p>\n<p>5.2.1 生成AppRuntime对象<br>AppRuntime –&gt; AndroidRuntime</p>\n<p><code>app_process [java-options] cmd-dir start-class-name [options]</code></p>\n<ul>\n<li>java-options 传给虚拟机的选项，必须以-开始</li>\n<li>cmd-dir 所需要运行的进程所在的目录</li>\n<li>start-class-name 在虚拟机中运行的类的名称, 在加载到虚拟机后调用类的main</li>\n<li>[options] 传递给类的选项</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/system/bin/app_process -Xzygote /system/bin --zygote --start-system-server</span><br></pre></td></tr></table></figure>\n\n<p>5.2.2 调用AppRuntime对象</p>\n<p>5.2.3 创建Dalvik虚拟机</p>\n<p>5.2.4 运行ZygoteInit类</p>\n<p>5.3 ZygoteInit类的功能</p>\n<p>5.3.1 绑定&#x2F;dev&#x2F;socket&#x2F;zygote套接字</p>\n<p>5.2.3 加载应用程序Framework中的类与平台资源</p>\n<p>5.3.3 运行SystemServer</p>\n<h2 id=\"6-Android服务概要\"><a href=\"#6-Android服务概要\" class=\"headerlink\" title=\"6. Android服务概要\"></a>6. Android服务概要</h2><h2 id=\"7-Android-Binder-IPC\"><a href=\"#7-Android-Binder-IPC\" class=\"headerlink\" title=\"7. Android Binder IPC\"></a>7. Android Binder IPC</h2><h2 id=\"8-Android-Service-Framework\"><a href=\"#8-Android-Service-Framework\" class=\"headerlink\" title=\"8. Android Service Framework\"></a>8. Android Service Framework</h2><h2 id=\"9-本地系统服务-Native-System-Service\"><a href=\"#9-本地系统服务-Native-System-Service\" class=\"headerlink\" title=\"9. 本地系统服务 Native System Service\"></a>9. 本地系统服务 Native System Service</h2><h2 id=\"10-Java服务框架-Java-Service-Framework\"><a href=\"#10-Java服务框架-Java-Service-Framework\" class=\"headerlink\" title=\"10. Java服务框架 Java Service Framework\"></a>10. Java服务框架 Java Service Framework</h2><h2 id=\"11-Java系统服务运行分析\"><a href=\"#11-Java系统服务运行分析\" class=\"headerlink\" title=\"11. Java系统服务运行分析\"></a>11. Java系统服务运行分析</h2>","site":{"data":{}},"excerpt":"","more":"<p>[TOC]</p>\n<h2 id=\"3-init进程\"><a href=\"#3-init进程\" class=\"headerlink\" title=\"3.init进程\"></a>3.init进程</h2><h2 id=\"4-JNI与NDK\"><a href=\"#4-JNI与NDK\" class=\"headerlink\" title=\"4. JNI与NDK\"></a>4. JNI与NDK</h2><p>4.1 Android 与 JNI<br>4.2 JNI的基本原理<br>4.3 调用JNI函数<br>4.4 在C程序中运行Java类<br>4.5 直接注册JNI本地函数<br>4.6 使用Android NDK开发</p>\n<h2 id=\"5-Zygote-P137\"><a href=\"#5-Zygote-P137\" class=\"headerlink\" title=\"5. Zygote P137\"></a>5. Zygote P137</h2><p>5.1 Zygote是什么<br>5.2 由app_process运行ZygoteInit class</p>\n<p>Zygote由Java编写, 不能直接由init启动。需要由app_process进程生成dalvik虚拟机，在虚拟机上状态运行ZygoteInit类。</p>\n<p>5.2.1 生成AppRuntime对象<br>AppRuntime –&gt; AndroidRuntime</p>\n<p><code>app_process [java-options] cmd-dir start-class-name [options]</code></p>\n<ul>\n<li>java-options 传给虚拟机的选项，必须以-开始</li>\n<li>cmd-dir 所需要运行的进程所在的目录</li>\n<li>start-class-name 在虚拟机中运行的类的名称, 在加载到虚拟机后调用类的main</li>\n<li>[options] 传递给类的选项</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/system/bin/app_process -Xzygote /system/bin --zygote --start-system-server</span><br></pre></td></tr></table></figure>\n\n<p>5.2.2 调用AppRuntime对象</p>\n<p>5.2.3 创建Dalvik虚拟机</p>\n<p>5.2.4 运行ZygoteInit类</p>\n<p>5.3 ZygoteInit类的功能</p>\n<p>5.3.1 绑定&#x2F;dev&#x2F;socket&#x2F;zygote套接字</p>\n<p>5.2.3 加载应用程序Framework中的类与平台资源</p>\n<p>5.3.3 运行SystemServer</p>\n<h2 id=\"6-Android服务概要\"><a href=\"#6-Android服务概要\" class=\"headerlink\" title=\"6. Android服务概要\"></a>6. Android服务概要</h2><h2 id=\"7-Android-Binder-IPC\"><a href=\"#7-Android-Binder-IPC\" class=\"headerlink\" title=\"7. Android Binder IPC\"></a>7. Android Binder IPC</h2><h2 id=\"8-Android-Service-Framework\"><a href=\"#8-Android-Service-Framework\" class=\"headerlink\" title=\"8. Android Service Framework\"></a>8. Android Service Framework</h2><h2 id=\"9-本地系统服务-Native-System-Service\"><a href=\"#9-本地系统服务-Native-System-Service\" class=\"headerlink\" title=\"9. 本地系统服务 Native System Service\"></a>9. 本地系统服务 Native System Service</h2><h2 id=\"10-Java服务框架-Java-Service-Framework\"><a href=\"#10-Java服务框架-Java-Service-Framework\" class=\"headerlink\" title=\"10. Java服务框架 Java Service Framework\"></a>10. Java服务框架 Java Service Framework</h2><h2 id=\"11-Java系统服务运行分析\"><a href=\"#11-Java系统服务运行分析\" class=\"headerlink\" title=\"11. Java系统服务运行分析\"></a>11. Java系统服务运行分析</h2>"},{"title":"page-load","date":"2022-11-01T03:21:39.000Z","_content":"\n\n- preload\n提升资源加载的优先级.\n```html\n<link rel=\"preload\" as=\"script\" href=\"./main.js\">\n```\n\n- prefetch\n用于加载未来页面会用到的资源, 并且告诉浏览器在空闲的时候下载.\n```html\n<link rel=\"prefetch\" as=\"script\" href=\"https://cdn.bootcss.com/jquery/2.1.4/jquery.min.js\">\n```\n\n- preconnect\n预建立连接\n\n- dns-prefetch\n预解析dns\n```html\n<link rel=\"dns-prefetch\" href=\"https://cdn.bootcss.com\">\n```\n\n\n\nhttps://blog.51cto.com/u_15089765/2600770?articleABtest=1\n\n","source":"_posts/7-page_load.md","raw":"---\ntitle: page-load\ndate: 2022-11-01 11:21:39\ntags:\n---\n\n\n- preload\n提升资源加载的优先级.\n```html\n<link rel=\"preload\" as=\"script\" href=\"./main.js\">\n```\n\n- prefetch\n用于加载未来页面会用到的资源, 并且告诉浏览器在空闲的时候下载.\n```html\n<link rel=\"prefetch\" as=\"script\" href=\"https://cdn.bootcss.com/jquery/2.1.4/jquery.min.js\">\n```\n\n- preconnect\n预建立连接\n\n- dns-prefetch\n预解析dns\n```html\n<link rel=\"dns-prefetch\" href=\"https://cdn.bootcss.com\">\n```\n\n\n\nhttps://blog.51cto.com/u_15089765/2600770?articleABtest=1\n\n","slug":"7-page_load","published":1,"updated":"2022-11-01T03:44:51.947Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9xoa92l0009rgnh4y9dfi9z","content":"<ul>\n<li><p>preload<br>提升资源加载的优先级.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;preload&quot;</span> <span class=\"attr\">as</span>=<span class=\"string\">&quot;script&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;./main.js&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>prefetch<br>用于加载未来页面会用到的资源, 并且告诉浏览器在空闲的时候下载.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;prefetch&quot;</span> <span class=\"attr\">as</span>=<span class=\"string\">&quot;script&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://cdn.bootcss.com/jquery/2.1.4/jquery.min.js&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>preconnect<br>预建立连接</p>\n</li>\n<li><p>dns-prefetch<br>预解析dns</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;dns-prefetch&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://cdn.bootcss.com&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><a href=\"https://blog.51cto.com/u_15089765/2600770?articleABtest=1\">https://blog.51cto.com/u_15089765/2600770?articleABtest=1</a></p>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><p>preload<br>提升资源加载的优先级.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;preload&quot;</span> <span class=\"attr\">as</span>=<span class=\"string\">&quot;script&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;./main.js&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>prefetch<br>用于加载未来页面会用到的资源, 并且告诉浏览器在空闲的时候下载.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;prefetch&quot;</span> <span class=\"attr\">as</span>=<span class=\"string\">&quot;script&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://cdn.bootcss.com/jquery/2.1.4/jquery.min.js&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>preconnect<br>预建立连接</p>\n</li>\n<li><p>dns-prefetch<br>预解析dns</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;dns-prefetch&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://cdn.bootcss.com&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><a href=\"https://blog.51cto.com/u_15089765/2600770?articleABtest=1\">https://blog.51cto.com/u_15089765/2600770?articleABtest=1</a></p>\n"},{"title":"typescript","date":"2022-11-03T09:33:52.000Z","_content":"\n## 基础类型\n\n- any\n- number\n- string\n- boolean\n- 数组\n- 元祖\n- 枚举\n- void\n- null\nnull表示 什么都没有, 是一个只有一个值的特殊类型。表示一个空对象的引用。\n- undefined\nundefined是一个没有设置值的变量。\n- never\n\n## 变量声明\n`var [变量名] : [类型] = 值`\n\n```typescript\nvar uname:string = \"Runoob\";\n```\n\n### 类型断言 (Type Assertion)\n`<类型>值`\n`值 as 类型`\n\n```ts\nvar str = '1'\nvar str2:number = <number> <any> str\nconsole.log(str2)\n```\n\n## 运算符\n\n### 算术运算符\n```\n+ - * / % ++ -- \n```\n### 关系运算符\n```\n== != > < >= <= \n```\n### 逻辑运算符\n`&& || !`\n\n### 位运算符\n`& | - ^ << >> >>>`\n### 赋值运算符\n`= += -= *= /=`\n### 三元运算符\n`? :`\n### 类型运算符\n`typeof`\n`instanceof`\n\n## 条件语句\n```\nif\nif else\nif ... else if ... else ...\nswitch \n```\n## 循环\n```typescript\n// 1\nfor(init; condition; increment) {\n  statement;\n}\n\n// 2\nfor(val in list) {\n\n}\n\n// 3\nlet arr = [1, \"string\", false];\n\nfor(let entry of someArray) {\n  console.log(entry); // 1, \"string\", false\n}\n\n// 4\nlet list = [4, 5, 6];\nlist.foreach((val, idx, arr) => {\n  // ...\n});\n\n// 5\nlist.every((val, idx, arr) => {\n\n  return true; // Continue\n})\n\n// 6\nwhile(cond) {\n  statement;\n}\n\ndo {\n  // ...\n}\nwhile(cond);\n\n```\n\n## 函数\n```ts\nfunction name() {\n\n}\n\nfuncton () {\n\n}\n\n// 函数返回值\nfunction name() : return_type {\n\n}\n\n// eg\nfunction greet() : string {\n\n}\n\n// 带参数\nfunction name(x: number, y: number) : number {\n\n}\n\n// 可选参数\nfunction buildName(firstName: string, lastName?: string) {\n  if(lastName) {\n\n  }\n\n}\n\n// 默认参数\nfunction calculate(price: number, rate: number = 0.50) {\n\n}\n\n// 剩余参数\nfunction buildName(firstName: string, ...restOfName: string[]) {\n  return firstName + \" \" + restOfName.join(\" \");\n}\n\n// 匿名函数\nvar msg = function() {\n  return \"hello world!\";\n}\n\n// 匿名函数自调用\n(function() {\n  var x = 'hello!';\n  console.log(x);\n})();\n\n\n// 构造 函数\nvar res = new Function([arg1, arg2], functionBody);\n\n/// eg:\nvar myFunction = new Function(\"a\", \"b\", \"return a+b;\")\n\n\n// lambda\n([param1, param2, ...paramN]) => statement;\n\nvar foo = (x: number) => 10 + x\n\n``` \n\n## Typescript Number\n\n```\nMAX_VALUE\nMIN_VALUE\nNaN\nNEGATIVE_INFINITY\nPOSITIVE_INFINITY\nprototype\nconstructor\n\n```\n## String\n## Array\n## Map\n## 元组\n## 联合类型\n## 接口\n```ts\ninterface IPerson {\n  firstName: string,\n  lastName: string,\n  sayHi: ()=>string\n}\n\nvar customer: IPerson = {\n  firstName: \"Tom\",\n  lastName: \"Hanks\",\n  sayHi: ():string => {return \"Hi there\";}\n}\n\n\nvar employer:IPerson = {\n  firstName:\"Jim\",\n  lastName:\"Balkes\",\n  sayHi: ():string => { return \"Hello!\"}\n}\n\n\ninterface RunOptions {\n  program: string;\n  commandLine: string[]|string|()=>string);\n}\n\nvar options:RunOptions = {program:\"test1\", commandLine: \"Hello\"};\n\n// 限制数组的索引值为number\ninterface namelist {\n  [index:number]: string\n}\nvar list2:namelist = [\"Google\", \"Runoob\", \"TaoTao\"];\n\n// 接口继承\nChild_interface_name extends super_interface_name;\n\nChild_interface_name extends super_interface1_name,super_interface2_name,super_interface3_name;\n\n\n// 单继承实例\ninterface Perosn {\n  age: number\n}\n\ninterface Musician extends Person {\n  instrument: string\n}\n\nvar drummer = <Musician>{};\ndrummer.age = 27;\ndrummer.instrument = \"Drums\";\n\n\n\ninterface IParent1 {\n  v1: number\n}\ninterface Iparent2 {\n  v2: number\n}\n\ninterface Child extends IParent1, IParent2 { }\nvar Iobj:Child = {v1:12, v2:23}\n```\n\n## 类\n```ts\nclass Car {\n  engine:string;\n\n  constructor(engine:string) {\n    this.engine = engine;\n  }\n\n  disp():void {\n    console.log(\"engine: \" + this.engine);\n  }\n}\n\nvar obj = new Car(\"BMW\");\n\nobj.disp();\n\n// 类继承\nclass Shape {\n  Area:number\n\n  constructor(a:number) {\n    this.Area = a;\n  }\n}\n\nclass Circle extends Shape {\n  disp():void {\n    console.log(\"Circle Area: \" + this.Area);\n  }\n}\n\nvar obj = new Circle(223);\nobj.disp();\n\n// ts 不支持多继承\n\n// 支持方法重写，调用父类用super\n\n\n// static用于定义类的数据成员(属性/方法)\nclass StaticMem {\n  static num:number\n\n  static disp():void {\n    console.log(\"Num: \" + StaticMem.num);\n  }\n}\n\n\n// instanceof\nclass Person {}\nvar obj = new Person()\nvar isPerson = obj instanceof Person;\nconsole.log(\"是吗?\" + isPerson);\n\n\n// 访问控制符\n//  public/protected/private\nclass Encapsulate {\n  str1:string = \"hello\";\n  private str2:string = \"world\"\n}\n\n// var obj = new Encapsulate();\n```\n\n类和接口\n```ts\ninterface ILoan {\n  interest: number\n}\n\nclass AgriLoan implemnts ILoan {\n  interest: number\n  rebate: number\n\n  constructor(interest:number,rebate:number) {\n    this.interest=interest\n    this.rebate=rebate\n  }\n}\n\n```\n\n## 对象\n\n```ts\nvar obj = {\n  key1:\"value1\",\n  key3: function() {\n\n  },\n  key4:[\"a\"]\n}\n\n// Duck Typing\n\ninterface IPoint {\n  x:number\n  y:number\n}\n\nfunction addPoints(p1:IPoint, p2:IPoint):IPoint {\n  var x = p1.x + p2.x\n  var y = p1.y + p2.y\n  return {x:x, y:y}\n}\n\n```\n\n## Typescript namespace\n\n```ts\nnamespace nsa {\n  export interface ISomeInterfaceName { }\n  export class SomeClassName { }\n}\n\nnsa.SomeClassName\n\n// 如果命名空间在一个单独ts文件中，可以使用///引用他\n/// <reference path=\"SomeFileName.ts\">\n\n```\n\n## Typescript module\n\n```ts\nexport interface SomeInterface {\n\n}\n```\n\n```ts\nimport someInterfaceRef = require(\"./SomeInterface\");\n```\n\n## 声明文件\n\nxx.d.ts\n\n```ts\ndeclare var jQuery: (selector: string) => any;\n\njQuery(\"#foo\");\n```\n\n## ref\n菜鸟教程 https://www.runoob.com/typescript/ts-interface.html","source":"_posts/8-typescript.md","raw":"---\ntitle: typescript\ndate: 2022-11-03 17:33:52\ntags: web\n---\n\n## 基础类型\n\n- any\n- number\n- string\n- boolean\n- 数组\n- 元祖\n- 枚举\n- void\n- null\nnull表示 什么都没有, 是一个只有一个值的特殊类型。表示一个空对象的引用。\n- undefined\nundefined是一个没有设置值的变量。\n- never\n\n## 变量声明\n`var [变量名] : [类型] = 值`\n\n```typescript\nvar uname:string = \"Runoob\";\n```\n\n### 类型断言 (Type Assertion)\n`<类型>值`\n`值 as 类型`\n\n```ts\nvar str = '1'\nvar str2:number = <number> <any> str\nconsole.log(str2)\n```\n\n## 运算符\n\n### 算术运算符\n```\n+ - * / % ++ -- \n```\n### 关系运算符\n```\n== != > < >= <= \n```\n### 逻辑运算符\n`&& || !`\n\n### 位运算符\n`& | - ^ << >> >>>`\n### 赋值运算符\n`= += -= *= /=`\n### 三元运算符\n`? :`\n### 类型运算符\n`typeof`\n`instanceof`\n\n## 条件语句\n```\nif\nif else\nif ... else if ... else ...\nswitch \n```\n## 循环\n```typescript\n// 1\nfor(init; condition; increment) {\n  statement;\n}\n\n// 2\nfor(val in list) {\n\n}\n\n// 3\nlet arr = [1, \"string\", false];\n\nfor(let entry of someArray) {\n  console.log(entry); // 1, \"string\", false\n}\n\n// 4\nlet list = [4, 5, 6];\nlist.foreach((val, idx, arr) => {\n  // ...\n});\n\n// 5\nlist.every((val, idx, arr) => {\n\n  return true; // Continue\n})\n\n// 6\nwhile(cond) {\n  statement;\n}\n\ndo {\n  // ...\n}\nwhile(cond);\n\n```\n\n## 函数\n```ts\nfunction name() {\n\n}\n\nfuncton () {\n\n}\n\n// 函数返回值\nfunction name() : return_type {\n\n}\n\n// eg\nfunction greet() : string {\n\n}\n\n// 带参数\nfunction name(x: number, y: number) : number {\n\n}\n\n// 可选参数\nfunction buildName(firstName: string, lastName?: string) {\n  if(lastName) {\n\n  }\n\n}\n\n// 默认参数\nfunction calculate(price: number, rate: number = 0.50) {\n\n}\n\n// 剩余参数\nfunction buildName(firstName: string, ...restOfName: string[]) {\n  return firstName + \" \" + restOfName.join(\" \");\n}\n\n// 匿名函数\nvar msg = function() {\n  return \"hello world!\";\n}\n\n// 匿名函数自调用\n(function() {\n  var x = 'hello!';\n  console.log(x);\n})();\n\n\n// 构造 函数\nvar res = new Function([arg1, arg2], functionBody);\n\n/// eg:\nvar myFunction = new Function(\"a\", \"b\", \"return a+b;\")\n\n\n// lambda\n([param1, param2, ...paramN]) => statement;\n\nvar foo = (x: number) => 10 + x\n\n``` \n\n## Typescript Number\n\n```\nMAX_VALUE\nMIN_VALUE\nNaN\nNEGATIVE_INFINITY\nPOSITIVE_INFINITY\nprototype\nconstructor\n\n```\n## String\n## Array\n## Map\n## 元组\n## 联合类型\n## 接口\n```ts\ninterface IPerson {\n  firstName: string,\n  lastName: string,\n  sayHi: ()=>string\n}\n\nvar customer: IPerson = {\n  firstName: \"Tom\",\n  lastName: \"Hanks\",\n  sayHi: ():string => {return \"Hi there\";}\n}\n\n\nvar employer:IPerson = {\n  firstName:\"Jim\",\n  lastName:\"Balkes\",\n  sayHi: ():string => { return \"Hello!\"}\n}\n\n\ninterface RunOptions {\n  program: string;\n  commandLine: string[]|string|()=>string);\n}\n\nvar options:RunOptions = {program:\"test1\", commandLine: \"Hello\"};\n\n// 限制数组的索引值为number\ninterface namelist {\n  [index:number]: string\n}\nvar list2:namelist = [\"Google\", \"Runoob\", \"TaoTao\"];\n\n// 接口继承\nChild_interface_name extends super_interface_name;\n\nChild_interface_name extends super_interface1_name,super_interface2_name,super_interface3_name;\n\n\n// 单继承实例\ninterface Perosn {\n  age: number\n}\n\ninterface Musician extends Person {\n  instrument: string\n}\n\nvar drummer = <Musician>{};\ndrummer.age = 27;\ndrummer.instrument = \"Drums\";\n\n\n\ninterface IParent1 {\n  v1: number\n}\ninterface Iparent2 {\n  v2: number\n}\n\ninterface Child extends IParent1, IParent2 { }\nvar Iobj:Child = {v1:12, v2:23}\n```\n\n## 类\n```ts\nclass Car {\n  engine:string;\n\n  constructor(engine:string) {\n    this.engine = engine;\n  }\n\n  disp():void {\n    console.log(\"engine: \" + this.engine);\n  }\n}\n\nvar obj = new Car(\"BMW\");\n\nobj.disp();\n\n// 类继承\nclass Shape {\n  Area:number\n\n  constructor(a:number) {\n    this.Area = a;\n  }\n}\n\nclass Circle extends Shape {\n  disp():void {\n    console.log(\"Circle Area: \" + this.Area);\n  }\n}\n\nvar obj = new Circle(223);\nobj.disp();\n\n// ts 不支持多继承\n\n// 支持方法重写，调用父类用super\n\n\n// static用于定义类的数据成员(属性/方法)\nclass StaticMem {\n  static num:number\n\n  static disp():void {\n    console.log(\"Num: \" + StaticMem.num);\n  }\n}\n\n\n// instanceof\nclass Person {}\nvar obj = new Person()\nvar isPerson = obj instanceof Person;\nconsole.log(\"是吗?\" + isPerson);\n\n\n// 访问控制符\n//  public/protected/private\nclass Encapsulate {\n  str1:string = \"hello\";\n  private str2:string = \"world\"\n}\n\n// var obj = new Encapsulate();\n```\n\n类和接口\n```ts\ninterface ILoan {\n  interest: number\n}\n\nclass AgriLoan implemnts ILoan {\n  interest: number\n  rebate: number\n\n  constructor(interest:number,rebate:number) {\n    this.interest=interest\n    this.rebate=rebate\n  }\n}\n\n```\n\n## 对象\n\n```ts\nvar obj = {\n  key1:\"value1\",\n  key3: function() {\n\n  },\n  key4:[\"a\"]\n}\n\n// Duck Typing\n\ninterface IPoint {\n  x:number\n  y:number\n}\n\nfunction addPoints(p1:IPoint, p2:IPoint):IPoint {\n  var x = p1.x + p2.x\n  var y = p1.y + p2.y\n  return {x:x, y:y}\n}\n\n```\n\n## Typescript namespace\n\n```ts\nnamespace nsa {\n  export interface ISomeInterfaceName { }\n  export class SomeClassName { }\n}\n\nnsa.SomeClassName\n\n// 如果命名空间在一个单独ts文件中，可以使用///引用他\n/// <reference path=\"SomeFileName.ts\">\n\n```\n\n## Typescript module\n\n```ts\nexport interface SomeInterface {\n\n}\n```\n\n```ts\nimport someInterfaceRef = require(\"./SomeInterface\");\n```\n\n## 声明文件\n\nxx.d.ts\n\n```ts\ndeclare var jQuery: (selector: string) => any;\n\njQuery(\"#foo\");\n```\n\n## ref\n菜鸟教程 https://www.runoob.com/typescript/ts-interface.html","slug":"8-typescript","published":1,"updated":"2022-11-05T07:26:02.261Z","_id":"cla0vezyw0000nbnhdhbiex3a","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"基础类型\"><a href=\"#基础类型\" class=\"headerlink\" title=\"基础类型\"></a>基础类型</h2><ul>\n<li>any</li>\n<li>number</li>\n<li>string</li>\n<li>boolean</li>\n<li>数组</li>\n<li>元祖</li>\n<li>枚举</li>\n<li>void</li>\n<li>null<br>null表示 什么都没有, 是一个只有一个值的特殊类型。表示一个空对象的引用。</li>\n<li>undefined<br>undefined是一个没有设置值的变量。</li>\n<li>never</li>\n</ul>\n<h2 id=\"变量声明\"><a href=\"#变量声明\" class=\"headerlink\" title=\"变量声明\"></a>变量声明</h2><p><code>var [变量名] : [类型] = 值</code></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"attr\">uname</span>:<span class=\"built_in\">string</span> = <span class=\"string\">&quot;Runoob&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"类型断言-Type-Assertion\"><a href=\"#类型断言-Type-Assertion\" class=\"headerlink\" title=\"类型断言 (Type Assertion)\"></a>类型断言 (Type Assertion)</h3><p><code>&lt;类型&gt;值</code><br><code>值 as 类型</code></p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;1&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"attr\">str2</span>:<span class=\"built_in\">number</span> = &lt;<span class=\"built_in\">number</span>&gt; &lt;<span class=\"built_in\">any</span>&gt; str</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str2)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><h3 id=\"算术运算符\"><a href=\"#算术运算符\" class=\"headerlink\" title=\"算术运算符\"></a>算术运算符</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ - * / % ++ -- </span><br></pre></td></tr></table></figure>\n<h3 id=\"关系运算符\"><a href=\"#关系运算符\" class=\"headerlink\" title=\"关系运算符\"></a>关系运算符</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">== != &gt; &lt; &gt;= &lt;= </span><br></pre></td></tr></table></figure>\n<h3 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h3><p><code>&amp;&amp; || !</code></p>\n<h3 id=\"位运算符\"><a href=\"#位运算符\" class=\"headerlink\" title=\"位运算符\"></a>位运算符</h3><p><code>&amp; | - ^ &lt;&lt; &gt;&gt; &gt;&gt;&gt;</code></p>\n<h3 id=\"赋值运算符\"><a href=\"#赋值运算符\" class=\"headerlink\" title=\"赋值运算符\"></a>赋值运算符</h3><p><code>= += -= *= /=</code></p>\n<h3 id=\"三元运算符\"><a href=\"#三元运算符\" class=\"headerlink\" title=\"三元运算符\"></a>三元运算符</h3><p><code>? :</code></p>\n<h3 id=\"类型运算符\"><a href=\"#类型运算符\" class=\"headerlink\" title=\"类型运算符\"></a>类型运算符</h3><p><code>typeof</code><br><code>instanceof</code></p>\n<h2 id=\"条件语句\"><a href=\"#条件语句\" class=\"headerlink\" title=\"条件语句\"></a>条件语句</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if</span><br><span class=\"line\">if else</span><br><span class=\"line\">if ... else if ... else ...</span><br><span class=\"line\">switch </span><br></pre></td></tr></table></figure>\n<h2 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(init; condition; increment) &#123;</span><br><span class=\"line\">  statement;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(val <span class=\"keyword\">in</span> list) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 3</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"string\">&quot;string&quot;</span>, <span class=\"literal\">false</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> entry <span class=\"keyword\">of</span> someArray) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(entry); <span class=\"comment\">// 1, &quot;string&quot;, false</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 4</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> list = [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>];</span><br><span class=\"line\">list.<span class=\"title function_\">foreach</span>(<span class=\"function\">(<span class=\"params\">val, idx, arr</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 5</span></span><br><span class=\"line\">list.<span class=\"title function_\">every</span>(<span class=\"function\">(<span class=\"params\">val, idx, arr</span>) =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>; <span class=\"comment\">// Continue</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 6</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(cond) &#123;</span><br><span class=\"line\">  statement;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(cond);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">name</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">functon () &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数返回值</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">name</span>(<span class=\"params\"></span>) : return_type &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// eg</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">greet</span>(<span class=\"params\"></span>) : <span class=\"built_in\">string</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 带参数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">name</span>(<span class=\"params\">x: <span class=\"built_in\">number</span>, y: <span class=\"built_in\">number</span></span>) : <span class=\"built_in\">number</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 可选参数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">buildName</span>(<span class=\"params\">firstName: <span class=\"built_in\">string</span>, lastName?: <span class=\"built_in\">string</span></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(lastName) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 默认参数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">calculate</span>(<span class=\"params\">price: <span class=\"built_in\">number</span>, rate: <span class=\"built_in\">number</span> = <span class=\"number\">0.50</span></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 剩余参数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">buildName</span>(<span class=\"params\">firstName: <span class=\"built_in\">string</span>, ...restOfName: <span class=\"built_in\">string</span>[]</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> firstName + <span class=\"string\">&quot; &quot;</span> + restOfName.<span class=\"title function_\">join</span>(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 匿名函数</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> msg = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&quot;hello world!&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 匿名函数自调用</span></span><br><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> x = <span class=\"string\">&#x27;hello!&#x27;</span>;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x);</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 构造 函数</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = <span class=\"keyword\">new</span> <span class=\"title class_\">Function</span>([arg1, arg2], functionBody);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// eg:</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> myFunction = <span class=\"keyword\">new</span> <span class=\"title class_\">Function</span>(<span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>, <span class=\"string\">&quot;return a+b;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// lambda</span></span><br><span class=\"line\">([param1, param2, ...paramN]) =&gt; statement;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title function_\">foo</span> = (<span class=\"params\">x: <span class=\"built_in\">number</span></span>) =&gt; <span class=\"number\">10</span> + x</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Typescript-Number\"><a href=\"#Typescript-Number\" class=\"headerlink\" title=\"Typescript Number\"></a>Typescript Number</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MAX_VALUE</span><br><span class=\"line\">MIN_VALUE</span><br><span class=\"line\">NaN</span><br><span class=\"line\">NEGATIVE_INFINITY</span><br><span class=\"line\">POSITIVE_INFINITY</span><br><span class=\"line\">prototype</span><br><span class=\"line\">constructor</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"String\"><a href=\"#String\" class=\"headerlink\" title=\"String\"></a>String</h2><h2 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h2><h2 id=\"Map\"><a href=\"#Map\" class=\"headerlink\" title=\"Map\"></a>Map</h2><h2 id=\"元组\"><a href=\"#元组\" class=\"headerlink\" title=\"元组\"></a>元组</h2><h2 id=\"联合类型\"><a href=\"#联合类型\" class=\"headerlink\" title=\"联合类型\"></a>联合类型</h2><h2 id=\"接口\"><a href=\"#接口\" class=\"headerlink\" title=\"接口\"></a>接口</h2><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">IPerson</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">firstName</span>: <span class=\"built_in\">string</span>,</span><br><span class=\"line\">  <span class=\"attr\">lastName</span>: <span class=\"built_in\">string</span>,</span><br><span class=\"line\">  <span class=\"attr\">sayHi</span>: <span class=\"function\">()=&gt;</span><span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"attr\">customer</span>: <span class=\"title class_\">IPerson</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">firstName</span>: <span class=\"string\">&quot;Tom&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">lastName</span>: <span class=\"string\">&quot;Hanks&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">sayHi</span>: ():<span class=\"function\"><span class=\"params\">string</span> =&gt;</span> &#123;<span class=\"keyword\">return</span> <span class=\"string\">&quot;Hi there&quot;</span>;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"attr\">employer</span>:<span class=\"title class_\">IPerson</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">firstName</span>:<span class=\"string\">&quot;Jim&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">lastName</span>:<span class=\"string\">&quot;Balkes&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">sayHi</span>: ():<span class=\"function\"><span class=\"params\">string</span> =&gt;</span> &#123; <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello!&quot;</span>&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">RunOptions</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">program</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">  <span class=\"attr\">commandLine</span>: <span class=\"built_in\">string</span>[]|<span class=\"built_in\">string</span>|<span class=\"function\">()=&gt;</span><span class=\"built_in\">string</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"attr\">options</span>:<span class=\"title class_\">RunOptions</span> = &#123;<span class=\"attr\">program</span>:<span class=\"string\">&quot;test1&quot;</span>, <span class=\"attr\">commandLine</span>: <span class=\"string\">&quot;Hello&quot;</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 限制数组的索引值为number</span></span><br><span class=\"line\"><span class=\"keyword\">interface</span> namelist &#123;</span><br><span class=\"line\">  [<span class=\"attr\">index</span>:<span class=\"built_in\">number</span>]: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"attr\">list2</span>:namelist = [<span class=\"string\">&quot;Google&quot;</span>, <span class=\"string\">&quot;Runoob&quot;</span>, <span class=\"string\">&quot;TaoTao&quot;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 接口继承</span></span><br><span class=\"line\"><span class=\"title class_\">Child</span>_interface_name <span class=\"keyword\">extends</span> super_interface_name;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Child</span>_interface_name <span class=\"keyword\">extends</span> super_interface1_name,super_interface2_name,super_interface3_name;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 单继承实例</span></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Perosn</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"built_in\">number</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Musician</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">instrument</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> drummer = &lt;<span class=\"title class_\">Musician</span>&gt;&#123;&#125;;</span><br><span class=\"line\">drummer.<span class=\"property\">age</span> = <span class=\"number\">27</span>;</span><br><span class=\"line\">drummer.<span class=\"property\">instrument</span> = <span class=\"string\">&quot;Drums&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">IParent1</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">v1</span>: <span class=\"built_in\">number</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Iparent2</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">v2</span>: <span class=\"built_in\">number</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Child</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">IParent1</span>, <span class=\"title class_\">IParent2</span> &#123; &#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Iobj</span>:<span class=\"title class_\">Child</span> = &#123;<span class=\"attr\">v1</span>:<span class=\"number\">12</span>, <span class=\"attr\">v2</span>:<span class=\"number\">23</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"类\"><a href=\"#类\" class=\"headerlink\" title=\"类\"></a>类</h2><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">engine</span>:<span class=\"built_in\">string</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">engine:<span class=\"built_in\">string</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">engine</span> = engine;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">disp</span>():<span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;engine: &quot;</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">engine</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = <span class=\"keyword\">new</span> <span class=\"title class_\">Car</span>(<span class=\"string\">&quot;BMW&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">obj.<span class=\"title function_\">disp</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 类继承</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Shape</span> &#123;</span><br><span class=\"line\">  <span class=\"title class_\">Area</span>:<span class=\"built_in\">number</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">a:<span class=\"built_in\">number</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">Area</span> = a;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Circle</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Shape</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">disp</span>():<span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Circle Area: &quot;</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">Area</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = <span class=\"keyword\">new</span> <span class=\"title class_\">Circle</span>(<span class=\"number\">223</span>);</span><br><span class=\"line\">obj.<span class=\"title function_\">disp</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ts 不支持多继承</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 支持方法重写，调用父类用super</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// static用于定义类的数据成员(属性/方法)</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">StaticMem</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"attr\">num</span>:<span class=\"built_in\">number</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"title function_\">disp</span>():<span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Num: &quot;</span> + <span class=\"title class_\">StaticMem</span>.<span class=\"property\">num</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// instanceof</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>()</span><br><span class=\"line\"><span class=\"keyword\">var</span> isPerson = obj <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Person</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;是吗?&quot;</span> + isPerson);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 访问控制符</span></span><br><span class=\"line\"><span class=\"comment\">//  public/protected/private</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Encapsulate</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">str1</span>:<span class=\"built_in\">string</span> = <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"attr\">str2</span>:<span class=\"built_in\">string</span> = <span class=\"string\">&quot;world&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// var obj = new Encapsulate();</span></span><br></pre></td></tr></table></figure>\n\n<p>类和接口</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">ILoan</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">interest</span>: <span class=\"built_in\">number</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">AgriLoan</span> implemnts <span class=\"title class_\">ILoan</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">interest</span>: <span class=\"built_in\">number</span></span><br><span class=\"line\">  <span class=\"attr\">rebate</span>: <span class=\"built_in\">number</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">interest:<span class=\"built_in\">number</span>,rebate:<span class=\"built_in\">number</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">interest</span>=interest</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">rebate</span>=rebate</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"对象\"><a href=\"#对象\" class=\"headerlink\" title=\"对象\"></a>对象</h2><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">key1</span>:<span class=\"string\">&quot;value1&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">key3</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">key4</span>:[<span class=\"string\">&quot;a&quot;</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Duck Typing</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">IPoint</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">x</span>:<span class=\"built_in\">number</span></span><br><span class=\"line\">  <span class=\"attr\">y</span>:<span class=\"built_in\">number</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">addPoints</span>(<span class=\"params\">p1:IPoint, p2:IPoint</span>):<span class=\"title class_\">IPoint</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> x = p1.<span class=\"property\">x</span> + p2.<span class=\"property\">x</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> y = p1.<span class=\"property\">y</span> + p2.<span class=\"property\">y</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;<span class=\"attr\">x</span>:x, <span class=\"attr\">y</span>:y&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Typescript-namespace\"><a href=\"#Typescript-namespace\" class=\"headerlink\" title=\"Typescript namespace\"></a>Typescript namespace</h2><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> nsa &#123;</span><br><span class=\"line\">  <span class=\"keyword\">export</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">ISomeInterfaceName</span> &#123; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SomeClassName</span> &#123; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">nsa.<span class=\"property\">SomeClassName</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 如果命名空间在一个单独ts文件中，可以使用///引用他</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;reference path=&quot;SomeFileName.ts&quot;&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Typescript-module\"><a href=\"#Typescript-module\" class=\"headerlink\" title=\"Typescript module\"></a>Typescript module</h2><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">SomeInterface</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> someInterfaceRef = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;./SomeInterface&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"声明文件\"><a href=\"#声明文件\" class=\"headerlink\" title=\"声明文件\"></a>声明文件</h2><p>xx.d.ts</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"keyword\">var</span> <span class=\"attr\">jQuery</span>: <span class=\"function\">(<span class=\"params\">selector: <span class=\"built_in\">string</span></span>) =&gt;</span> <span class=\"built_in\">any</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">jQuery</span>(<span class=\"string\">&quot;#foo&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ref\"><a href=\"#ref\" class=\"headerlink\" title=\"ref\"></a>ref</h2><p>菜鸟教程 <a href=\"https://www.runoob.com/typescript/ts-interface.html\">https://www.runoob.com/typescript/ts-interface.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"基础类型\"><a href=\"#基础类型\" class=\"headerlink\" title=\"基础类型\"></a>基础类型</h2><ul>\n<li>any</li>\n<li>number</li>\n<li>string</li>\n<li>boolean</li>\n<li>数组</li>\n<li>元祖</li>\n<li>枚举</li>\n<li>void</li>\n<li>null<br>null表示 什么都没有, 是一个只有一个值的特殊类型。表示一个空对象的引用。</li>\n<li>undefined<br>undefined是一个没有设置值的变量。</li>\n<li>never</li>\n</ul>\n<h2 id=\"变量声明\"><a href=\"#变量声明\" class=\"headerlink\" title=\"变量声明\"></a>变量声明</h2><p><code>var [变量名] : [类型] = 值</code></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"attr\">uname</span>:<span class=\"built_in\">string</span> = <span class=\"string\">&quot;Runoob&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"类型断言-Type-Assertion\"><a href=\"#类型断言-Type-Assertion\" class=\"headerlink\" title=\"类型断言 (Type Assertion)\"></a>类型断言 (Type Assertion)</h3><p><code>&lt;类型&gt;值</code><br><code>值 as 类型</code></p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;1&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"attr\">str2</span>:<span class=\"built_in\">number</span> = &lt;<span class=\"built_in\">number</span>&gt; &lt;<span class=\"built_in\">any</span>&gt; str</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str2)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><h3 id=\"算术运算符\"><a href=\"#算术运算符\" class=\"headerlink\" title=\"算术运算符\"></a>算术运算符</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ - * / % ++ -- </span><br></pre></td></tr></table></figure>\n<h3 id=\"关系运算符\"><a href=\"#关系运算符\" class=\"headerlink\" title=\"关系运算符\"></a>关系运算符</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">== != &gt; &lt; &gt;= &lt;= </span><br></pre></td></tr></table></figure>\n<h3 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h3><p><code>&amp;&amp; || !</code></p>\n<h3 id=\"位运算符\"><a href=\"#位运算符\" class=\"headerlink\" title=\"位运算符\"></a>位运算符</h3><p><code>&amp; | - ^ &lt;&lt; &gt;&gt; &gt;&gt;&gt;</code></p>\n<h3 id=\"赋值运算符\"><a href=\"#赋值运算符\" class=\"headerlink\" title=\"赋值运算符\"></a>赋值运算符</h3><p><code>= += -= *= /=</code></p>\n<h3 id=\"三元运算符\"><a href=\"#三元运算符\" class=\"headerlink\" title=\"三元运算符\"></a>三元运算符</h3><p><code>? :</code></p>\n<h3 id=\"类型运算符\"><a href=\"#类型运算符\" class=\"headerlink\" title=\"类型运算符\"></a>类型运算符</h3><p><code>typeof</code><br><code>instanceof</code></p>\n<h2 id=\"条件语句\"><a href=\"#条件语句\" class=\"headerlink\" title=\"条件语句\"></a>条件语句</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if</span><br><span class=\"line\">if else</span><br><span class=\"line\">if ... else if ... else ...</span><br><span class=\"line\">switch </span><br></pre></td></tr></table></figure>\n<h2 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(init; condition; increment) &#123;</span><br><span class=\"line\">  statement;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(val <span class=\"keyword\">in</span> list) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 3</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"string\">&quot;string&quot;</span>, <span class=\"literal\">false</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> entry <span class=\"keyword\">of</span> someArray) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(entry); <span class=\"comment\">// 1, &quot;string&quot;, false</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 4</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> list = [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>];</span><br><span class=\"line\">list.<span class=\"title function_\">foreach</span>(<span class=\"function\">(<span class=\"params\">val, idx, arr</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 5</span></span><br><span class=\"line\">list.<span class=\"title function_\">every</span>(<span class=\"function\">(<span class=\"params\">val, idx, arr</span>) =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>; <span class=\"comment\">// Continue</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 6</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(cond) &#123;</span><br><span class=\"line\">  statement;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(cond);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">name</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">functon () &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数返回值</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">name</span>(<span class=\"params\"></span>) : return_type &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// eg</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">greet</span>(<span class=\"params\"></span>) : <span class=\"built_in\">string</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 带参数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">name</span>(<span class=\"params\">x: <span class=\"built_in\">number</span>, y: <span class=\"built_in\">number</span></span>) : <span class=\"built_in\">number</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 可选参数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">buildName</span>(<span class=\"params\">firstName: <span class=\"built_in\">string</span>, lastName?: <span class=\"built_in\">string</span></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(lastName) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 默认参数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">calculate</span>(<span class=\"params\">price: <span class=\"built_in\">number</span>, rate: <span class=\"built_in\">number</span> = <span class=\"number\">0.50</span></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 剩余参数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">buildName</span>(<span class=\"params\">firstName: <span class=\"built_in\">string</span>, ...restOfName: <span class=\"built_in\">string</span>[]</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> firstName + <span class=\"string\">&quot; &quot;</span> + restOfName.<span class=\"title function_\">join</span>(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 匿名函数</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> msg = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&quot;hello world!&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 匿名函数自调用</span></span><br><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> x = <span class=\"string\">&#x27;hello!&#x27;</span>;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x);</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 构造 函数</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = <span class=\"keyword\">new</span> <span class=\"title class_\">Function</span>([arg1, arg2], functionBody);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// eg:</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> myFunction = <span class=\"keyword\">new</span> <span class=\"title class_\">Function</span>(<span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>, <span class=\"string\">&quot;return a+b;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// lambda</span></span><br><span class=\"line\">([param1, param2, ...paramN]) =&gt; statement;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title function_\">foo</span> = (<span class=\"params\">x: <span class=\"built_in\">number</span></span>) =&gt; <span class=\"number\">10</span> + x</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Typescript-Number\"><a href=\"#Typescript-Number\" class=\"headerlink\" title=\"Typescript Number\"></a>Typescript Number</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MAX_VALUE</span><br><span class=\"line\">MIN_VALUE</span><br><span class=\"line\">NaN</span><br><span class=\"line\">NEGATIVE_INFINITY</span><br><span class=\"line\">POSITIVE_INFINITY</span><br><span class=\"line\">prototype</span><br><span class=\"line\">constructor</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"String\"><a href=\"#String\" class=\"headerlink\" title=\"String\"></a>String</h2><h2 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h2><h2 id=\"Map\"><a href=\"#Map\" class=\"headerlink\" title=\"Map\"></a>Map</h2><h2 id=\"元组\"><a href=\"#元组\" class=\"headerlink\" title=\"元组\"></a>元组</h2><h2 id=\"联合类型\"><a href=\"#联合类型\" class=\"headerlink\" title=\"联合类型\"></a>联合类型</h2><h2 id=\"接口\"><a href=\"#接口\" class=\"headerlink\" title=\"接口\"></a>接口</h2><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">IPerson</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">firstName</span>: <span class=\"built_in\">string</span>,</span><br><span class=\"line\">  <span class=\"attr\">lastName</span>: <span class=\"built_in\">string</span>,</span><br><span class=\"line\">  <span class=\"attr\">sayHi</span>: <span class=\"function\">()=&gt;</span><span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"attr\">customer</span>: <span class=\"title class_\">IPerson</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">firstName</span>: <span class=\"string\">&quot;Tom&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">lastName</span>: <span class=\"string\">&quot;Hanks&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">sayHi</span>: ():<span class=\"function\"><span class=\"params\">string</span> =&gt;</span> &#123;<span class=\"keyword\">return</span> <span class=\"string\">&quot;Hi there&quot;</span>;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"attr\">employer</span>:<span class=\"title class_\">IPerson</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">firstName</span>:<span class=\"string\">&quot;Jim&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">lastName</span>:<span class=\"string\">&quot;Balkes&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">sayHi</span>: ():<span class=\"function\"><span class=\"params\">string</span> =&gt;</span> &#123; <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello!&quot;</span>&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">RunOptions</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">program</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">  <span class=\"attr\">commandLine</span>: <span class=\"built_in\">string</span>[]|<span class=\"built_in\">string</span>|<span class=\"function\">()=&gt;</span><span class=\"built_in\">string</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"attr\">options</span>:<span class=\"title class_\">RunOptions</span> = &#123;<span class=\"attr\">program</span>:<span class=\"string\">&quot;test1&quot;</span>, <span class=\"attr\">commandLine</span>: <span class=\"string\">&quot;Hello&quot;</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 限制数组的索引值为number</span></span><br><span class=\"line\"><span class=\"keyword\">interface</span> namelist &#123;</span><br><span class=\"line\">  [<span class=\"attr\">index</span>:<span class=\"built_in\">number</span>]: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"attr\">list2</span>:namelist = [<span class=\"string\">&quot;Google&quot;</span>, <span class=\"string\">&quot;Runoob&quot;</span>, <span class=\"string\">&quot;TaoTao&quot;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 接口继承</span></span><br><span class=\"line\"><span class=\"title class_\">Child</span>_interface_name <span class=\"keyword\">extends</span> super_interface_name;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Child</span>_interface_name <span class=\"keyword\">extends</span> super_interface1_name,super_interface2_name,super_interface3_name;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 单继承实例</span></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Perosn</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"built_in\">number</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Musician</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">instrument</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> drummer = &lt;<span class=\"title class_\">Musician</span>&gt;&#123;&#125;;</span><br><span class=\"line\">drummer.<span class=\"property\">age</span> = <span class=\"number\">27</span>;</span><br><span class=\"line\">drummer.<span class=\"property\">instrument</span> = <span class=\"string\">&quot;Drums&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">IParent1</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">v1</span>: <span class=\"built_in\">number</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Iparent2</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">v2</span>: <span class=\"built_in\">number</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Child</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">IParent1</span>, <span class=\"title class_\">IParent2</span> &#123; &#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Iobj</span>:<span class=\"title class_\">Child</span> = &#123;<span class=\"attr\">v1</span>:<span class=\"number\">12</span>, <span class=\"attr\">v2</span>:<span class=\"number\">23</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"类\"><a href=\"#类\" class=\"headerlink\" title=\"类\"></a>类</h2><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">engine</span>:<span class=\"built_in\">string</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">engine:<span class=\"built_in\">string</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">engine</span> = engine;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">disp</span>():<span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;engine: &quot;</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">engine</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = <span class=\"keyword\">new</span> <span class=\"title class_\">Car</span>(<span class=\"string\">&quot;BMW&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">obj.<span class=\"title function_\">disp</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 类继承</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Shape</span> &#123;</span><br><span class=\"line\">  <span class=\"title class_\">Area</span>:<span class=\"built_in\">number</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">a:<span class=\"built_in\">number</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">Area</span> = a;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Circle</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Shape</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">disp</span>():<span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Circle Area: &quot;</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">Area</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = <span class=\"keyword\">new</span> <span class=\"title class_\">Circle</span>(<span class=\"number\">223</span>);</span><br><span class=\"line\">obj.<span class=\"title function_\">disp</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ts 不支持多继承</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 支持方法重写，调用父类用super</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// static用于定义类的数据成员(属性/方法)</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">StaticMem</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"attr\">num</span>:<span class=\"built_in\">number</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"title function_\">disp</span>():<span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Num: &quot;</span> + <span class=\"title class_\">StaticMem</span>.<span class=\"property\">num</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// instanceof</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>()</span><br><span class=\"line\"><span class=\"keyword\">var</span> isPerson = obj <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Person</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;是吗?&quot;</span> + isPerson);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 访问控制符</span></span><br><span class=\"line\"><span class=\"comment\">//  public/protected/private</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Encapsulate</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">str1</span>:<span class=\"built_in\">string</span> = <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"attr\">str2</span>:<span class=\"built_in\">string</span> = <span class=\"string\">&quot;world&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// var obj = new Encapsulate();</span></span><br></pre></td></tr></table></figure>\n\n<p>类和接口</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">ILoan</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">interest</span>: <span class=\"built_in\">number</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">AgriLoan</span> implemnts <span class=\"title class_\">ILoan</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">interest</span>: <span class=\"built_in\">number</span></span><br><span class=\"line\">  <span class=\"attr\">rebate</span>: <span class=\"built_in\">number</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">interest:<span class=\"built_in\">number</span>,rebate:<span class=\"built_in\">number</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">interest</span>=interest</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">rebate</span>=rebate</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"对象\"><a href=\"#对象\" class=\"headerlink\" title=\"对象\"></a>对象</h2><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">key1</span>:<span class=\"string\">&quot;value1&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">key3</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">key4</span>:[<span class=\"string\">&quot;a&quot;</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Duck Typing</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">IPoint</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">x</span>:<span class=\"built_in\">number</span></span><br><span class=\"line\">  <span class=\"attr\">y</span>:<span class=\"built_in\">number</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">addPoints</span>(<span class=\"params\">p1:IPoint, p2:IPoint</span>):<span class=\"title class_\">IPoint</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> x = p1.<span class=\"property\">x</span> + p2.<span class=\"property\">x</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> y = p1.<span class=\"property\">y</span> + p2.<span class=\"property\">y</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;<span class=\"attr\">x</span>:x, <span class=\"attr\">y</span>:y&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Typescript-namespace\"><a href=\"#Typescript-namespace\" class=\"headerlink\" title=\"Typescript namespace\"></a>Typescript namespace</h2><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> nsa &#123;</span><br><span class=\"line\">  <span class=\"keyword\">export</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">ISomeInterfaceName</span> &#123; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SomeClassName</span> &#123; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">nsa.<span class=\"property\">SomeClassName</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 如果命名空间在一个单独ts文件中，可以使用///引用他</span></span><br><span class=\"line\"><span class=\"comment\">/// &lt;reference path=&quot;SomeFileName.ts&quot;&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Typescript-module\"><a href=\"#Typescript-module\" class=\"headerlink\" title=\"Typescript module\"></a>Typescript module</h2><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">SomeInterface</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> someInterfaceRef = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;./SomeInterface&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"声明文件\"><a href=\"#声明文件\" class=\"headerlink\" title=\"声明文件\"></a>声明文件</h2><p>xx.d.ts</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"keyword\">var</span> <span class=\"attr\">jQuery</span>: <span class=\"function\">(<span class=\"params\">selector: <span class=\"built_in\">string</span></span>) =&gt;</span> <span class=\"built_in\">any</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">jQuery</span>(<span class=\"string\">&quot;#foo&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ref\"><a href=\"#ref\" class=\"headerlink\" title=\"ref\"></a>ref</h2><p>菜鸟教程 <a href=\"https://www.runoob.com/typescript/ts-interface.html\">https://www.runoob.com/typescript/ts-interface.html</a></p>\n"},{"title":"Xaas","date":"2022-11-05T08:11:15.000Z","_content":"\nIaas: Infrastructure as a Service\nPaas: Platform as a Service\nSaas: Software as a Service\n\nBaas: Backend as a Service (后端即服务)\nFaas: Function as a Service (函数即服务)\n\nDaas: Data as a Service\nNaas: Network as a Service","source":"_posts/10-xaas.md","raw":"---\ntitle: Xaas\ndate: 2022-11-05 16:11:15\ntags:\n---\n\nIaas: Infrastructure as a Service\nPaas: Platform as a Service\nSaas: Software as a Service\n\nBaas: Backend as a Service (后端即服务)\nFaas: Function as a Service (函数即服务)\n\nDaas: Data as a Service\nNaas: Network as a Service","slug":"10-xaas","published":1,"updated":"2022-11-05T08:16:07.194Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla3nir7800001tnhcddf2os4","content":"<p>Iaas: Infrastructure as a Service<br>Paas: Platform as a Service<br>Saas: Software as a Service</p>\n<p>Baas: Backend as a Service (后端即服务)<br>Faas: Function as a Service (函数即服务)</p>\n<p>Daas: Data as a Service<br>Naas: Network as a Service</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Iaas: Infrastructure as a Service<br>Paas: Platform as a Service<br>Saas: Software as a Service</p>\n<p>Baas: Backend as a Service (后端即服务)<br>Faas: Function as a Service (函数即服务)</p>\n<p>Daas: Data as a Service<br>Naas: Network as a Service</p>\n"},{"title":"javascript格式","date":"2022-11-05T07:27:47.000Z","_content":"\n## CJS\nCommonJS\n```js\n// importing\nconst doSth = require('./doSth.js');\n\n// exporting\nmodule.exports = function doSth(n) {\n\n}\n```\n- 经常出现于node开发\n- 可以从node_modules或者本地引入模块。eg: `const someModule = require(\"./some/local/file\");`\n- cjs不能在浏览器里工作。如果需要在浏览器工作需要转码和打包.\n\n\n## AMD\n异步模块定义\n格式一般如下\n```js\ndefine(['dep1', 'dep2'], function(dep1, dep2) {\n  return function () {};\n});\n```\n\n```js\ndefine(function (require) {\n  var dep1 = require('dep1');\n  var dep2 = require('dep2');\n\n  return function() {}\n})\n```\n\n- AMD是异步引入模块\n- AMD是给前端用的\n- 不如CJS直观\n\n## UMD\nUniversal Module Definition\n\n```js\n(function (root, factory) {\n  if(typeof define === 'function' && define.amd) {\n    define([\"jquery\", \"underscore\"], factory);\n  } else if (typeof exports === \"object\") {\n    module.exports = factory(require(\"jquery\"), require(\"underscore\"));\n  } else {\n    root.Requester = factory(root.$, root._);\n  }\n}(this, function ($, _) {\n  // this is where I defined my module implementation\n  var Requester = { /* ... */  };\n  return Requester;\n})\n```\n\n- 前后端通用\n- umd更像是配置多模块系统的配置\n- umd通常是rollup,webpack的候补选择.\n\n\n## ESM\nES Module\n","source":"_posts/9-javascript.md","raw":"---\ntitle: javascript格式\ndate: 2022-11-05 15:27:47\ntags:\n---\n\n## CJS\nCommonJS\n```js\n// importing\nconst doSth = require('./doSth.js');\n\n// exporting\nmodule.exports = function doSth(n) {\n\n}\n```\n- 经常出现于node开发\n- 可以从node_modules或者本地引入模块。eg: `const someModule = require(\"./some/local/file\");`\n- cjs不能在浏览器里工作。如果需要在浏览器工作需要转码和打包.\n\n\n## AMD\n异步模块定义\n格式一般如下\n```js\ndefine(['dep1', 'dep2'], function(dep1, dep2) {\n  return function () {};\n});\n```\n\n```js\ndefine(function (require) {\n  var dep1 = require('dep1');\n  var dep2 = require('dep2');\n\n  return function() {}\n})\n```\n\n- AMD是异步引入模块\n- AMD是给前端用的\n- 不如CJS直观\n\n## UMD\nUniversal Module Definition\n\n```js\n(function (root, factory) {\n  if(typeof define === 'function' && define.amd) {\n    define([\"jquery\", \"underscore\"], factory);\n  } else if (typeof exports === \"object\") {\n    module.exports = factory(require(\"jquery\"), require(\"underscore\"));\n  } else {\n    root.Requester = factory(root.$, root._);\n  }\n}(this, function ($, _) {\n  // this is where I defined my module implementation\n  var Requester = { /* ... */  };\n  return Requester;\n})\n```\n\n- 前后端通用\n- umd更像是配置多模块系统的配置\n- umd通常是rollup,webpack的候补选择.\n\n\n## ESM\nES Module\n","slug":"9-javascript","published":1,"updated":"2022-11-05T08:30:27.778Z","_id":"cla3nir7c00011tnhfa278uj7","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"CJS\"><a href=\"#CJS\" class=\"headerlink\" title=\"CJS\"></a>CJS</h2><p>CommonJS</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// importing</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> doSth = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./doSth.js&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// exporting</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">function</span> <span class=\"title function_\">doSth</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>经常出现于node开发</li>\n<li>可以从node_modules或者本地引入模块。eg: <code>const someModule = require(&quot;./some/local/file&quot;);</code></li>\n<li>cjs不能在浏览器里工作。如果需要在浏览器工作需要转码和打包.</li>\n</ul>\n<h2 id=\"AMD\"><a href=\"#AMD\" class=\"headerlink\" title=\"AMD\"></a>AMD</h2><p>异步模块定义<br>格式一般如下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">define</span>([<span class=\"string\">&#x27;dep1&#x27;</span>, <span class=\"string\">&#x27;dep2&#x27;</span>], <span class=\"keyword\">function</span>(<span class=\"params\">dep1, dep2</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">define</span>(<span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"built_in\">require</span></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> dep1 = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;dep1&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> dep2 = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;dep2&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>AMD是异步引入模块</li>\n<li>AMD是给前端用的</li>\n<li>不如CJS直观</li>\n</ul>\n<h2 id=\"UMD\"><a href=\"#UMD\" class=\"headerlink\" title=\"UMD\"></a>UMD</h2><p>Universal Module Definition</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span> (<span class=\"params\">root, factory</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> define === <span class=\"string\">&#x27;function&#x27;</span> &amp;&amp; define.<span class=\"property\">amd</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">define</span>([<span class=\"string\">&quot;jquery&quot;</span>, <span class=\"string\">&quot;underscore&quot;</span>], factory);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"built_in\">exports</span> === <span class=\"string\">&quot;object&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">factory</span>(<span class=\"built_in\">require</span>(<span class=\"string\">&quot;jquery&quot;</span>), <span class=\"built_in\">require</span>(<span class=\"string\">&quot;underscore&quot;</span>));</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    root.<span class=\"property\">Requester</span> = <span class=\"title function_\">factory</span>(root.<span class=\"property\">$</span>, root.<span class=\"property\">_</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;(<span class=\"variable language_\">this</span>, <span class=\"keyword\">function</span> (<span class=\"params\">$, _</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// this is where I defined my module implementation</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> <span class=\"title class_\">Requester</span> = &#123; <span class=\"comment\">/* ... */</span>  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title class_\">Requester</span>;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>前后端通用</li>\n<li>umd更像是配置多模块系统的配置</li>\n<li>umd通常是rollup,webpack的候补选择.</li>\n</ul>\n<h2 id=\"ESM\"><a href=\"#ESM\" class=\"headerlink\" title=\"ESM\"></a>ESM</h2><p>ES Module</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"CJS\"><a href=\"#CJS\" class=\"headerlink\" title=\"CJS\"></a>CJS</h2><p>CommonJS</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// importing</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> doSth = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./doSth.js&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// exporting</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">function</span> <span class=\"title function_\">doSth</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>经常出现于node开发</li>\n<li>可以从node_modules或者本地引入模块。eg: <code>const someModule = require(&quot;./some/local/file&quot;);</code></li>\n<li>cjs不能在浏览器里工作。如果需要在浏览器工作需要转码和打包.</li>\n</ul>\n<h2 id=\"AMD\"><a href=\"#AMD\" class=\"headerlink\" title=\"AMD\"></a>AMD</h2><p>异步模块定义<br>格式一般如下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">define</span>([<span class=\"string\">&#x27;dep1&#x27;</span>, <span class=\"string\">&#x27;dep2&#x27;</span>], <span class=\"keyword\">function</span>(<span class=\"params\">dep1, dep2</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">define</span>(<span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"built_in\">require</span></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> dep1 = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;dep1&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> dep2 = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;dep2&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>AMD是异步引入模块</li>\n<li>AMD是给前端用的</li>\n<li>不如CJS直观</li>\n</ul>\n<h2 id=\"UMD\"><a href=\"#UMD\" class=\"headerlink\" title=\"UMD\"></a>UMD</h2><p>Universal Module Definition</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span> (<span class=\"params\">root, factory</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> define === <span class=\"string\">&#x27;function&#x27;</span> &amp;&amp; define.<span class=\"property\">amd</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">define</span>([<span class=\"string\">&quot;jquery&quot;</span>, <span class=\"string\">&quot;underscore&quot;</span>], factory);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"built_in\">exports</span> === <span class=\"string\">&quot;object&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">factory</span>(<span class=\"built_in\">require</span>(<span class=\"string\">&quot;jquery&quot;</span>), <span class=\"built_in\">require</span>(<span class=\"string\">&quot;underscore&quot;</span>));</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    root.<span class=\"property\">Requester</span> = <span class=\"title function_\">factory</span>(root.<span class=\"property\">$</span>, root.<span class=\"property\">_</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;(<span class=\"variable language_\">this</span>, <span class=\"keyword\">function</span> (<span class=\"params\">$, _</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// this is where I defined my module implementation</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> <span class=\"title class_\">Requester</span> = &#123; <span class=\"comment\">/* ... */</span>  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title class_\">Requester</span>;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>前后端通用</li>\n<li>umd更像是配置多模块系统的配置</li>\n<li>umd通常是rollup,webpack的候补选择.</li>\n</ul>\n<h2 id=\"ESM\"><a href=\"#ESM\" class=\"headerlink\" title=\"ESM\"></a>ESM</h2><p>ES Module</p>\n"},{"title":"docker基本操作","date":"2022-11-05T10:16:54.000Z","_content":"\n\n`docker exec -it name /bin/bash`","source":"_posts/11-docker.md","raw":"---\ntitle: docker基本操作\ndate: 2022-11-05 18:16:54\ntags:\n---\n\n\n`docker exec -it name /bin/bash`","slug":"11-docker","published":1,"updated":"2022-11-05T10:17:46.338Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cla6eb7f2000071nh69k0097x","content":"<p><code>docker exec -it name /bin/bash</code></p>\n","site":{"data":{}},"excerpt":"","more":"<p><code>docker exec -it name /bin/bash</code></p>\n"},{"title":"android partitions","date":"2022-11-12T12:00:01.000Z","_content":"\n```bash\nwalleye:/bin # parted /dev/block/sda\nGNU Parted 3.4\nUsing /dev/block/sda\nWelcome to GNU Parted! Type 'help' to view a list of commands.\n(parted) p\nModel: SAMSUNG KLUCG4J1ED-B0C1 (scsi)\nDisk /dev/block/sda: 63.8GB\nSector size (logical/physical): 4096B/4096B\nPartition Table: gpt\nDisk Flags:\n\nNumber  Start   End     Size    File system  Name          Flags\n 1      24.6kB  65.5kB  41.0kB               padding0      msftdata\n 2      65.5kB  590kB   524kB                lockbooter_a\n 3      590kB   1114kB  524kB                rpm_a\n 4      1114kB  3211kB  2097kB               tz_a\n 5      3211kB  3736kB  524kB                hyp_a\n 6      3736kB  4260kB  524kB                pmic_a\n 7      4260kB  88.1MB  83.9MB               modem_a       msftdata\n 8      88.1MB  89.2MB  1049kB               abl_a\n 9      89.2MB  123MB   33.6MB               boot_a\n10      123MB   156MB   33.6MB               hosd_a\n11      156MB   157MB   524kB                keymaster_a\n12      157MB   157MB   524kB                cmnlib_a\n13      157MB   158MB   524kB                cmnlib64_a\n14      158MB   158MB   262kB                apdp_a\n15      158MB   158MB   262kB                msadp_a\n16      158MB   159MB   131kB                devcfg_a\n17      159MB   159MB   131kB                storsec_a\n18      159MB   159MB   65.5kB               vbmeta_a\n19      159MB   162MB   3146kB               trusty_a\n20      162MB   686MB   524MB   ext2         vendor_a      msftdata\n21      686MB   695MB   8389kB               dtbo_a\n22      695MB   3379MB  2684MB  ext2         system_a\n23      3379MB  3379MB  524kB                lockbooter_b\n24      3379MB  3380MB  524kB                rpm_b\n25      3380MB  3382MB  2097kB               tz_b\n26      3382MB  3383MB  524kB                hyp_b\n27      3383MB  3383MB  524kB                pmic_b\n28      3383MB  3467MB  83.9MB               modem_b\n29      3467MB  3468MB  1049kB               abl_b\n30      3468MB  3502MB  33.6MB               boot_b\n31      3502MB  3535MB  33.6MB               hosd_b\n32      3535MB  3536MB  524kB                keymaster_b\n33      3536MB  3536MB  524kB                cmnlib_b\n34      3536MB  3537MB  524kB                cmnlib64_b\n35      3537MB  3537MB  262kB                apdp_b\n36      3537MB  3537MB  262kB                msadp_b\n37      3537MB  3537MB  131kB                devcfg_b\n38      3537MB  3538MB  131kB                storsec_b\n39      3538MB  3538MB  65.5kB               vbmeta_b\n40      3538MB  3541MB  3146kB               trusty_b\n41      3541MB  4065MB  524MB   ext2         vendor_b\n42      4065MB  4073MB  8389kB               dtbo_b\n43      4073MB  6758MB  2684MB  ext2         system_b\n44      6758MB  6761MB  3473kB               padding1      msftdata\n45      6761MB  63.8GB  57.1GB  ext4         userdata\n\n(parted)\nwalleye:/bin #\nwalleye:/bin # parted /dev/block/sdb\nGNU Parted 3.4\nUsing /dev/block/sdb\nWelcome to GNU Parted! Type 'help' to view a list of commands.\n(parted) p\nModel: SAMSUNG KLUCG4J1ED-B0C1 (scsi)\nDisk /dev/block/sdb: 4194kB\nSector size (logical/physical): 4096B/4096B\nPartition Table: gpt\nDisk Flags:\n\nNumber  Start   End     Size    File system  Name   Flags\n 1      24.6kB  4174kB  4149kB               xbl_a\n\n(parted)\nwalleye:/bin # parted /dev/block/sdc\nGNU Parted 3.4\nUsing /dev/block/sdc\nWelcome to GNU Parted! Type 'help' to view a list of commands.\n(parted) p\nModel: SAMSUNG KLUCG4J1ED-B0C1 (scsi)\nDisk /dev/block/sdc: 4194kB\nSector size (logical/physical): 4096B/4096B\nPartition Table: gpt\nDisk Flags:\n\nNumber  Start   End     Size    File system  Name   Flags\n 1      24.6kB  4174kB  4149kB               xbl_b\n\n(parted)\nwalleye:/bin # parted /dev/block/sdd\nGNU Parted 3.4\nUsing /dev/block/sdd\nWelcome to GNU Parted! Type 'help' to view a list of commands.\n(parted) p\nModel: SAMSUNG KLUCG4J1ED-B0C1 (scsi)\nDisk /dev/block/sdd: 101MB\nSector size (logical/physical): 4096B/4096B\nPartition Table: gpt\nDisk Flags:\n\nNumber  Start   End     Size    File system  Name      Flags\n 1      24.6kB  1073kB  1049kB               misc\n 2      1073kB  1081kB  8192B                ssd\n 3      1081kB  34.6MB  33.6MB  ext4         persist\n 4      34.6MB  35.2MB  524kB                frp\n 5      35.2MB  35.2MB  4096B                cdt\n 6      35.2MB  36.2MB  1049kB               ddr\n 7      36.2MB  36.3MB  131kB                sec\n 8      36.3MB  37.4MB  1049kB               dip\n 9      37.4MB  37.4MB  4096B                dpo\n10      37.4MB  71.6MB  34.2MB               splash\n11      71.6MB  71.6MB  4096B                limits\n12      71.6MB  72.7MB  1049kB               toolsfv\n13      72.7MB  81.1MB  8389kB               logfs\n14      81.1MB  83.2MB  2097kB               sti\n15      83.2MB  85.3MB  2097kB               modemst1\n16      85.3MB  87.4MB  2097kB               modemst2\n17      87.4MB  88.4MB  1049kB               fsc\n18      88.4MB  101MB   12.2MB               reserve3  msftdata\n\n(parted)\nwalleye:/bin # parted /dev/block/sde\nGNU Parted 3.4\nUsing /dev/block/sde\nWelcome to GNU Parted! Type 'help' to view a list of commands.\n(parted) p\nModel: SAMSUNG KLUCG4J1ED-B0C1 (scsi)\nDisk /dev/block/sde: 37.7MB\nSector size (logical/physical): 4096B/4096B\nPartition Table: gpt\nDisk Flags:\n\nNumber  Start   End     Size    File system  Name      Flags\n 1      24.6kB  6316kB  6291kB               ramdump\n 2      6316kB  10.5MB  4194kB               pg1fs\n 3      10.5MB  12.6MB  2097kB               pg2fs\n 4      12.6MB  29.4MB  16.8MB  ext4         metadata  msftdata\n 5      29.4MB  37.7MB  8344kB               reserve4  msftdata\n\n(parted)\nwalleye:/bin # parted /dev/block/sdf\nGNU Parted 3.4\nUsing /dev/block/sdf\nWelcome to GNU Parted! Type 'help' to view a list of commands.\n(parted) p\nModel: SAMSUNG KLUCG4J1ED-B0C1 (scsi)\nDisk /dev/block/sdf: 8389kB\nSector size (logical/physical): 4096B/4096B\nPartition Table: gpt\nDisk Flags:\n\nNumber  Start   End     Size    File system  Name        Flags\n 1      24.6kB  41.0kB  16.4kB               board_info\n 2      41.0kB  303kB   262kB                mfg\n 3      303kB   1876kB  1573kB               fsg\n 4      1876kB  1880kB  4096B                devinfo\n 5      1880kB  8368kB  6488kB               reserve5    msftdata\n\n```","source":"_posts/12-android-partitions.md","raw":"---\ntitle: android partitions\ndate: 2022-11-12 20:00:01\ntags:\n---\n\n```bash\nwalleye:/bin # parted /dev/block/sda\nGNU Parted 3.4\nUsing /dev/block/sda\nWelcome to GNU Parted! Type 'help' to view a list of commands.\n(parted) p\nModel: SAMSUNG KLUCG4J1ED-B0C1 (scsi)\nDisk /dev/block/sda: 63.8GB\nSector size (logical/physical): 4096B/4096B\nPartition Table: gpt\nDisk Flags:\n\nNumber  Start   End     Size    File system  Name          Flags\n 1      24.6kB  65.5kB  41.0kB               padding0      msftdata\n 2      65.5kB  590kB   524kB                lockbooter_a\n 3      590kB   1114kB  524kB                rpm_a\n 4      1114kB  3211kB  2097kB               tz_a\n 5      3211kB  3736kB  524kB                hyp_a\n 6      3736kB  4260kB  524kB                pmic_a\n 7      4260kB  88.1MB  83.9MB               modem_a       msftdata\n 8      88.1MB  89.2MB  1049kB               abl_a\n 9      89.2MB  123MB   33.6MB               boot_a\n10      123MB   156MB   33.6MB               hosd_a\n11      156MB   157MB   524kB                keymaster_a\n12      157MB   157MB   524kB                cmnlib_a\n13      157MB   158MB   524kB                cmnlib64_a\n14      158MB   158MB   262kB                apdp_a\n15      158MB   158MB   262kB                msadp_a\n16      158MB   159MB   131kB                devcfg_a\n17      159MB   159MB   131kB                storsec_a\n18      159MB   159MB   65.5kB               vbmeta_a\n19      159MB   162MB   3146kB               trusty_a\n20      162MB   686MB   524MB   ext2         vendor_a      msftdata\n21      686MB   695MB   8389kB               dtbo_a\n22      695MB   3379MB  2684MB  ext2         system_a\n23      3379MB  3379MB  524kB                lockbooter_b\n24      3379MB  3380MB  524kB                rpm_b\n25      3380MB  3382MB  2097kB               tz_b\n26      3382MB  3383MB  524kB                hyp_b\n27      3383MB  3383MB  524kB                pmic_b\n28      3383MB  3467MB  83.9MB               modem_b\n29      3467MB  3468MB  1049kB               abl_b\n30      3468MB  3502MB  33.6MB               boot_b\n31      3502MB  3535MB  33.6MB               hosd_b\n32      3535MB  3536MB  524kB                keymaster_b\n33      3536MB  3536MB  524kB                cmnlib_b\n34      3536MB  3537MB  524kB                cmnlib64_b\n35      3537MB  3537MB  262kB                apdp_b\n36      3537MB  3537MB  262kB                msadp_b\n37      3537MB  3537MB  131kB                devcfg_b\n38      3537MB  3538MB  131kB                storsec_b\n39      3538MB  3538MB  65.5kB               vbmeta_b\n40      3538MB  3541MB  3146kB               trusty_b\n41      3541MB  4065MB  524MB   ext2         vendor_b\n42      4065MB  4073MB  8389kB               dtbo_b\n43      4073MB  6758MB  2684MB  ext2         system_b\n44      6758MB  6761MB  3473kB               padding1      msftdata\n45      6761MB  63.8GB  57.1GB  ext4         userdata\n\n(parted)\nwalleye:/bin #\nwalleye:/bin # parted /dev/block/sdb\nGNU Parted 3.4\nUsing /dev/block/sdb\nWelcome to GNU Parted! Type 'help' to view a list of commands.\n(parted) p\nModel: SAMSUNG KLUCG4J1ED-B0C1 (scsi)\nDisk /dev/block/sdb: 4194kB\nSector size (logical/physical): 4096B/4096B\nPartition Table: gpt\nDisk Flags:\n\nNumber  Start   End     Size    File system  Name   Flags\n 1      24.6kB  4174kB  4149kB               xbl_a\n\n(parted)\nwalleye:/bin # parted /dev/block/sdc\nGNU Parted 3.4\nUsing /dev/block/sdc\nWelcome to GNU Parted! Type 'help' to view a list of commands.\n(parted) p\nModel: SAMSUNG KLUCG4J1ED-B0C1 (scsi)\nDisk /dev/block/sdc: 4194kB\nSector size (logical/physical): 4096B/4096B\nPartition Table: gpt\nDisk Flags:\n\nNumber  Start   End     Size    File system  Name   Flags\n 1      24.6kB  4174kB  4149kB               xbl_b\n\n(parted)\nwalleye:/bin # parted /dev/block/sdd\nGNU Parted 3.4\nUsing /dev/block/sdd\nWelcome to GNU Parted! Type 'help' to view a list of commands.\n(parted) p\nModel: SAMSUNG KLUCG4J1ED-B0C1 (scsi)\nDisk /dev/block/sdd: 101MB\nSector size (logical/physical): 4096B/4096B\nPartition Table: gpt\nDisk Flags:\n\nNumber  Start   End     Size    File system  Name      Flags\n 1      24.6kB  1073kB  1049kB               misc\n 2      1073kB  1081kB  8192B                ssd\n 3      1081kB  34.6MB  33.6MB  ext4         persist\n 4      34.6MB  35.2MB  524kB                frp\n 5      35.2MB  35.2MB  4096B                cdt\n 6      35.2MB  36.2MB  1049kB               ddr\n 7      36.2MB  36.3MB  131kB                sec\n 8      36.3MB  37.4MB  1049kB               dip\n 9      37.4MB  37.4MB  4096B                dpo\n10      37.4MB  71.6MB  34.2MB               splash\n11      71.6MB  71.6MB  4096B                limits\n12      71.6MB  72.7MB  1049kB               toolsfv\n13      72.7MB  81.1MB  8389kB               logfs\n14      81.1MB  83.2MB  2097kB               sti\n15      83.2MB  85.3MB  2097kB               modemst1\n16      85.3MB  87.4MB  2097kB               modemst2\n17      87.4MB  88.4MB  1049kB               fsc\n18      88.4MB  101MB   12.2MB               reserve3  msftdata\n\n(parted)\nwalleye:/bin # parted /dev/block/sde\nGNU Parted 3.4\nUsing /dev/block/sde\nWelcome to GNU Parted! Type 'help' to view a list of commands.\n(parted) p\nModel: SAMSUNG KLUCG4J1ED-B0C1 (scsi)\nDisk /dev/block/sde: 37.7MB\nSector size (logical/physical): 4096B/4096B\nPartition Table: gpt\nDisk Flags:\n\nNumber  Start   End     Size    File system  Name      Flags\n 1      24.6kB  6316kB  6291kB               ramdump\n 2      6316kB  10.5MB  4194kB               pg1fs\n 3      10.5MB  12.6MB  2097kB               pg2fs\n 4      12.6MB  29.4MB  16.8MB  ext4         metadata  msftdata\n 5      29.4MB  37.7MB  8344kB               reserve4  msftdata\n\n(parted)\nwalleye:/bin # parted /dev/block/sdf\nGNU Parted 3.4\nUsing /dev/block/sdf\nWelcome to GNU Parted! Type 'help' to view a list of commands.\n(parted) p\nModel: SAMSUNG KLUCG4J1ED-B0C1 (scsi)\nDisk /dev/block/sdf: 8389kB\nSector size (logical/physical): 4096B/4096B\nPartition Table: gpt\nDisk Flags:\n\nNumber  Start   End     Size    File system  Name        Flags\n 1      24.6kB  41.0kB  16.4kB               board_info\n 2      41.0kB  303kB   262kB                mfg\n 3      303kB   1876kB  1573kB               fsg\n 4      1876kB  1880kB  4096B                devinfo\n 5      1880kB  8368kB  6488kB               reserve5    msftdata\n\n```","slug":"12-android-partitions","published":1,"updated":"2022-11-12T12:03:04.107Z","_id":"cladvm21p0000zznhgnlqaec9","comments":1,"layout":"post","photos":[],"link":"","content":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">walleye:/bin <span class=\"comment\"># parted /dev/block/sda</span></span><br><span class=\"line\">GNU Parted 3.4</span><br><span class=\"line\">Using /dev/block/sda</span><br><span class=\"line\">Welcome to GNU Parted! Type <span class=\"string\">&#x27;help&#x27;</span> to view a list of commands.</span><br><span class=\"line\">(parted) p</span><br><span class=\"line\">Model: SAMSUNG KLUCG4J1ED-B0C1 (scsi)</span><br><span class=\"line\">Disk /dev/block/sda: 63.8GB</span><br><span class=\"line\">Sector size (logical/physical): 4096B/4096B</span><br><span class=\"line\">Partition Table: gpt</span><br><span class=\"line\">Disk Flags:</span><br><span class=\"line\"></span><br><span class=\"line\">Number  Start   End     Size    File system  Name          Flags</span><br><span class=\"line\"> 1      24.6kB  65.5kB  41.0kB               padding0      msftdata</span><br><span class=\"line\"> 2      65.5kB  590kB   524kB                lockbooter_a</span><br><span class=\"line\"> 3      590kB   1114kB  524kB                rpm_a</span><br><span class=\"line\"> 4      1114kB  3211kB  2097kB               tz_a</span><br><span class=\"line\"> 5      3211kB  3736kB  524kB                hyp_a</span><br><span class=\"line\"> 6      3736kB  4260kB  524kB                pmic_a</span><br><span class=\"line\"> 7      4260kB  88.1MB  83.9MB               modem_a       msftdata</span><br><span class=\"line\"> 8      88.1MB  89.2MB  1049kB               abl_a</span><br><span class=\"line\"> 9      89.2MB  123MB   33.6MB               boot_a</span><br><span class=\"line\">10      123MB   156MB   33.6MB               hosd_a</span><br><span class=\"line\">11      156MB   157MB   524kB                keymaster_a</span><br><span class=\"line\">12      157MB   157MB   524kB                cmnlib_a</span><br><span class=\"line\">13      157MB   158MB   524kB                cmnlib64_a</span><br><span class=\"line\">14      158MB   158MB   262kB                apdp_a</span><br><span class=\"line\">15      158MB   158MB   262kB                msadp_a</span><br><span class=\"line\">16      158MB   159MB   131kB                devcfg_a</span><br><span class=\"line\">17      159MB   159MB   131kB                storsec_a</span><br><span class=\"line\">18      159MB   159MB   65.5kB               vbmeta_a</span><br><span class=\"line\">19      159MB   162MB   3146kB               trusty_a</span><br><span class=\"line\">20      162MB   686MB   524MB   ext2         vendor_a      msftdata</span><br><span class=\"line\">21      686MB   695MB   8389kB               dtbo_a</span><br><span class=\"line\">22      695MB   3379MB  2684MB  ext2         system_a</span><br><span class=\"line\">23      3379MB  3379MB  524kB                lockbooter_b</span><br><span class=\"line\">24      3379MB  3380MB  524kB                rpm_b</span><br><span class=\"line\">25      3380MB  3382MB  2097kB               tz_b</span><br><span class=\"line\">26      3382MB  3383MB  524kB                hyp_b</span><br><span class=\"line\">27      3383MB  3383MB  524kB                pmic_b</span><br><span class=\"line\">28      3383MB  3467MB  83.9MB               modem_b</span><br><span class=\"line\">29      3467MB  3468MB  1049kB               abl_b</span><br><span class=\"line\">30      3468MB  3502MB  33.6MB               boot_b</span><br><span class=\"line\">31      3502MB  3535MB  33.6MB               hosd_b</span><br><span class=\"line\">32      3535MB  3536MB  524kB                keymaster_b</span><br><span class=\"line\">33      3536MB  3536MB  524kB                cmnlib_b</span><br><span class=\"line\">34      3536MB  3537MB  524kB                cmnlib64_b</span><br><span class=\"line\">35      3537MB  3537MB  262kB                apdp_b</span><br><span class=\"line\">36      3537MB  3537MB  262kB                msadp_b</span><br><span class=\"line\">37      3537MB  3537MB  131kB                devcfg_b</span><br><span class=\"line\">38      3537MB  3538MB  131kB                storsec_b</span><br><span class=\"line\">39      3538MB  3538MB  65.5kB               vbmeta_b</span><br><span class=\"line\">40      3538MB  3541MB  3146kB               trusty_b</span><br><span class=\"line\">41      3541MB  4065MB  524MB   ext2         vendor_b</span><br><span class=\"line\">42      4065MB  4073MB  8389kB               dtbo_b</span><br><span class=\"line\">43      4073MB  6758MB  2684MB  ext2         system_b</span><br><span class=\"line\">44      6758MB  6761MB  3473kB               padding1      msftdata</span><br><span class=\"line\">45      6761MB  63.8GB  57.1GB  ext4         userdata</span><br><span class=\"line\"></span><br><span class=\"line\">(parted)</span><br><span class=\"line\">walleye:/bin <span class=\"comment\">#</span></span><br><span class=\"line\">walleye:/bin <span class=\"comment\"># parted /dev/block/sdb</span></span><br><span class=\"line\">GNU Parted 3.4</span><br><span class=\"line\">Using /dev/block/sdb</span><br><span class=\"line\">Welcome to GNU Parted! Type <span class=\"string\">&#x27;help&#x27;</span> to view a list of commands.</span><br><span class=\"line\">(parted) p</span><br><span class=\"line\">Model: SAMSUNG KLUCG4J1ED-B0C1 (scsi)</span><br><span class=\"line\">Disk /dev/block/sdb: 4194kB</span><br><span class=\"line\">Sector size (logical/physical): 4096B/4096B</span><br><span class=\"line\">Partition Table: gpt</span><br><span class=\"line\">Disk Flags:</span><br><span class=\"line\"></span><br><span class=\"line\">Number  Start   End     Size    File system  Name   Flags</span><br><span class=\"line\"> 1      24.6kB  4174kB  4149kB               xbl_a</span><br><span class=\"line\"></span><br><span class=\"line\">(parted)</span><br><span class=\"line\">walleye:/bin <span class=\"comment\"># parted /dev/block/sdc</span></span><br><span class=\"line\">GNU Parted 3.4</span><br><span class=\"line\">Using /dev/block/sdc</span><br><span class=\"line\">Welcome to GNU Parted! Type <span class=\"string\">&#x27;help&#x27;</span> to view a list of commands.</span><br><span class=\"line\">(parted) p</span><br><span class=\"line\">Model: SAMSUNG KLUCG4J1ED-B0C1 (scsi)</span><br><span class=\"line\">Disk /dev/block/sdc: 4194kB</span><br><span class=\"line\">Sector size (logical/physical): 4096B/4096B</span><br><span class=\"line\">Partition Table: gpt</span><br><span class=\"line\">Disk Flags:</span><br><span class=\"line\"></span><br><span class=\"line\">Number  Start   End     Size    File system  Name   Flags</span><br><span class=\"line\"> 1      24.6kB  4174kB  4149kB               xbl_b</span><br><span class=\"line\"></span><br><span class=\"line\">(parted)</span><br><span class=\"line\">walleye:/bin <span class=\"comment\"># parted /dev/block/sdd</span></span><br><span class=\"line\">GNU Parted 3.4</span><br><span class=\"line\">Using /dev/block/sdd</span><br><span class=\"line\">Welcome to GNU Parted! Type <span class=\"string\">&#x27;help&#x27;</span> to view a list of commands.</span><br><span class=\"line\">(parted) p</span><br><span class=\"line\">Model: SAMSUNG KLUCG4J1ED-B0C1 (scsi)</span><br><span class=\"line\">Disk /dev/block/sdd: 101MB</span><br><span class=\"line\">Sector size (logical/physical): 4096B/4096B</span><br><span class=\"line\">Partition Table: gpt</span><br><span class=\"line\">Disk Flags:</span><br><span class=\"line\"></span><br><span class=\"line\">Number  Start   End     Size    File system  Name      Flags</span><br><span class=\"line\"> 1      24.6kB  1073kB  1049kB               misc</span><br><span class=\"line\"> 2      1073kB  1081kB  8192B                ssd</span><br><span class=\"line\"> 3      1081kB  34.6MB  33.6MB  ext4         persist</span><br><span class=\"line\"> 4      34.6MB  35.2MB  524kB                frp</span><br><span class=\"line\"> 5      35.2MB  35.2MB  4096B                cdt</span><br><span class=\"line\"> 6      35.2MB  36.2MB  1049kB               ddr</span><br><span class=\"line\"> 7      36.2MB  36.3MB  131kB                sec</span><br><span class=\"line\"> 8      36.3MB  37.4MB  1049kB               dip</span><br><span class=\"line\"> 9      37.4MB  37.4MB  4096B                dpo</span><br><span class=\"line\">10      37.4MB  71.6MB  34.2MB               splash</span><br><span class=\"line\">11      71.6MB  71.6MB  4096B                limits</span><br><span class=\"line\">12      71.6MB  72.7MB  1049kB               toolsfv</span><br><span class=\"line\">13      72.7MB  81.1MB  8389kB               logfs</span><br><span class=\"line\">14      81.1MB  83.2MB  2097kB               sti</span><br><span class=\"line\">15      83.2MB  85.3MB  2097kB               modemst1</span><br><span class=\"line\">16      85.3MB  87.4MB  2097kB               modemst2</span><br><span class=\"line\">17      87.4MB  88.4MB  1049kB               fsc</span><br><span class=\"line\">18      88.4MB  101MB   12.2MB               reserve3  msftdata</span><br><span class=\"line\"></span><br><span class=\"line\">(parted)</span><br><span class=\"line\">walleye:/bin <span class=\"comment\"># parted /dev/block/sde</span></span><br><span class=\"line\">GNU Parted 3.4</span><br><span class=\"line\">Using /dev/block/sde</span><br><span class=\"line\">Welcome to GNU Parted! Type <span class=\"string\">&#x27;help&#x27;</span> to view a list of commands.</span><br><span class=\"line\">(parted) p</span><br><span class=\"line\">Model: SAMSUNG KLUCG4J1ED-B0C1 (scsi)</span><br><span class=\"line\">Disk /dev/block/sde: 37.7MB</span><br><span class=\"line\">Sector size (logical/physical): 4096B/4096B</span><br><span class=\"line\">Partition Table: gpt</span><br><span class=\"line\">Disk Flags:</span><br><span class=\"line\"></span><br><span class=\"line\">Number  Start   End     Size    File system  Name      Flags</span><br><span class=\"line\"> 1      24.6kB  6316kB  6291kB               ramdump</span><br><span class=\"line\"> 2      6316kB  10.5MB  4194kB               pg1fs</span><br><span class=\"line\"> 3      10.5MB  12.6MB  2097kB               pg2fs</span><br><span class=\"line\"> 4      12.6MB  29.4MB  16.8MB  ext4         metadata  msftdata</span><br><span class=\"line\"> 5      29.4MB  37.7MB  8344kB               reserve4  msftdata</span><br><span class=\"line\"></span><br><span class=\"line\">(parted)</span><br><span class=\"line\">walleye:/bin <span class=\"comment\"># parted /dev/block/sdf</span></span><br><span class=\"line\">GNU Parted 3.4</span><br><span class=\"line\">Using /dev/block/sdf</span><br><span class=\"line\">Welcome to GNU Parted! Type <span class=\"string\">&#x27;help&#x27;</span> to view a list of commands.</span><br><span class=\"line\">(parted) p</span><br><span class=\"line\">Model: SAMSUNG KLUCG4J1ED-B0C1 (scsi)</span><br><span class=\"line\">Disk /dev/block/sdf: 8389kB</span><br><span class=\"line\">Sector size (logical/physical): 4096B/4096B</span><br><span class=\"line\">Partition Table: gpt</span><br><span class=\"line\">Disk Flags:</span><br><span class=\"line\"></span><br><span class=\"line\">Number  Start   End     Size    File system  Name        Flags</span><br><span class=\"line\"> 1      24.6kB  41.0kB  16.4kB               board_info</span><br><span class=\"line\"> 2      41.0kB  303kB   262kB                mfg</span><br><span class=\"line\"> 3      303kB   1876kB  1573kB               fsg</span><br><span class=\"line\"> 4      1876kB  1880kB  4096B                devinfo</span><br><span class=\"line\"> 5      1880kB  8368kB  6488kB               reserve5    msftdata</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">walleye:/bin <span class=\"comment\"># parted /dev/block/sda</span></span><br><span class=\"line\">GNU Parted 3.4</span><br><span class=\"line\">Using /dev/block/sda</span><br><span class=\"line\">Welcome to GNU Parted! Type <span class=\"string\">&#x27;help&#x27;</span> to view a list of commands.</span><br><span class=\"line\">(parted) p</span><br><span class=\"line\">Model: SAMSUNG KLUCG4J1ED-B0C1 (scsi)</span><br><span class=\"line\">Disk /dev/block/sda: 63.8GB</span><br><span class=\"line\">Sector size (logical/physical): 4096B/4096B</span><br><span class=\"line\">Partition Table: gpt</span><br><span class=\"line\">Disk Flags:</span><br><span class=\"line\"></span><br><span class=\"line\">Number  Start   End     Size    File system  Name          Flags</span><br><span class=\"line\"> 1      24.6kB  65.5kB  41.0kB               padding0      msftdata</span><br><span class=\"line\"> 2      65.5kB  590kB   524kB                lockbooter_a</span><br><span class=\"line\"> 3      590kB   1114kB  524kB                rpm_a</span><br><span class=\"line\"> 4      1114kB  3211kB  2097kB               tz_a</span><br><span class=\"line\"> 5      3211kB  3736kB  524kB                hyp_a</span><br><span class=\"line\"> 6      3736kB  4260kB  524kB                pmic_a</span><br><span class=\"line\"> 7      4260kB  88.1MB  83.9MB               modem_a       msftdata</span><br><span class=\"line\"> 8      88.1MB  89.2MB  1049kB               abl_a</span><br><span class=\"line\"> 9      89.2MB  123MB   33.6MB               boot_a</span><br><span class=\"line\">10      123MB   156MB   33.6MB               hosd_a</span><br><span class=\"line\">11      156MB   157MB   524kB                keymaster_a</span><br><span class=\"line\">12      157MB   157MB   524kB                cmnlib_a</span><br><span class=\"line\">13      157MB   158MB   524kB                cmnlib64_a</span><br><span class=\"line\">14      158MB   158MB   262kB                apdp_a</span><br><span class=\"line\">15      158MB   158MB   262kB                msadp_a</span><br><span class=\"line\">16      158MB   159MB   131kB                devcfg_a</span><br><span class=\"line\">17      159MB   159MB   131kB                storsec_a</span><br><span class=\"line\">18      159MB   159MB   65.5kB               vbmeta_a</span><br><span class=\"line\">19      159MB   162MB   3146kB               trusty_a</span><br><span class=\"line\">20      162MB   686MB   524MB   ext2         vendor_a      msftdata</span><br><span class=\"line\">21      686MB   695MB   8389kB               dtbo_a</span><br><span class=\"line\">22      695MB   3379MB  2684MB  ext2         system_a</span><br><span class=\"line\">23      3379MB  3379MB  524kB                lockbooter_b</span><br><span class=\"line\">24      3379MB  3380MB  524kB                rpm_b</span><br><span class=\"line\">25      3380MB  3382MB  2097kB               tz_b</span><br><span class=\"line\">26      3382MB  3383MB  524kB                hyp_b</span><br><span class=\"line\">27      3383MB  3383MB  524kB                pmic_b</span><br><span class=\"line\">28      3383MB  3467MB  83.9MB               modem_b</span><br><span class=\"line\">29      3467MB  3468MB  1049kB               abl_b</span><br><span class=\"line\">30      3468MB  3502MB  33.6MB               boot_b</span><br><span class=\"line\">31      3502MB  3535MB  33.6MB               hosd_b</span><br><span class=\"line\">32      3535MB  3536MB  524kB                keymaster_b</span><br><span class=\"line\">33      3536MB  3536MB  524kB                cmnlib_b</span><br><span class=\"line\">34      3536MB  3537MB  524kB                cmnlib64_b</span><br><span class=\"line\">35      3537MB  3537MB  262kB                apdp_b</span><br><span class=\"line\">36      3537MB  3537MB  262kB                msadp_b</span><br><span class=\"line\">37      3537MB  3537MB  131kB                devcfg_b</span><br><span class=\"line\">38      3537MB  3538MB  131kB                storsec_b</span><br><span class=\"line\">39      3538MB  3538MB  65.5kB               vbmeta_b</span><br><span class=\"line\">40      3538MB  3541MB  3146kB               trusty_b</span><br><span class=\"line\">41      3541MB  4065MB  524MB   ext2         vendor_b</span><br><span class=\"line\">42      4065MB  4073MB  8389kB               dtbo_b</span><br><span class=\"line\">43      4073MB  6758MB  2684MB  ext2         system_b</span><br><span class=\"line\">44      6758MB  6761MB  3473kB               padding1      msftdata</span><br><span class=\"line\">45      6761MB  63.8GB  57.1GB  ext4         userdata</span><br><span class=\"line\"></span><br><span class=\"line\">(parted)</span><br><span class=\"line\">walleye:/bin <span class=\"comment\">#</span></span><br><span class=\"line\">walleye:/bin <span class=\"comment\"># parted /dev/block/sdb</span></span><br><span class=\"line\">GNU Parted 3.4</span><br><span class=\"line\">Using /dev/block/sdb</span><br><span class=\"line\">Welcome to GNU Parted! Type <span class=\"string\">&#x27;help&#x27;</span> to view a list of commands.</span><br><span class=\"line\">(parted) p</span><br><span class=\"line\">Model: SAMSUNG KLUCG4J1ED-B0C1 (scsi)</span><br><span class=\"line\">Disk /dev/block/sdb: 4194kB</span><br><span class=\"line\">Sector size (logical/physical): 4096B/4096B</span><br><span class=\"line\">Partition Table: gpt</span><br><span class=\"line\">Disk Flags:</span><br><span class=\"line\"></span><br><span class=\"line\">Number  Start   End     Size    File system  Name   Flags</span><br><span class=\"line\"> 1      24.6kB  4174kB  4149kB               xbl_a</span><br><span class=\"line\"></span><br><span class=\"line\">(parted)</span><br><span class=\"line\">walleye:/bin <span class=\"comment\"># parted /dev/block/sdc</span></span><br><span class=\"line\">GNU Parted 3.4</span><br><span class=\"line\">Using /dev/block/sdc</span><br><span class=\"line\">Welcome to GNU Parted! Type <span class=\"string\">&#x27;help&#x27;</span> to view a list of commands.</span><br><span class=\"line\">(parted) p</span><br><span class=\"line\">Model: SAMSUNG KLUCG4J1ED-B0C1 (scsi)</span><br><span class=\"line\">Disk /dev/block/sdc: 4194kB</span><br><span class=\"line\">Sector size (logical/physical): 4096B/4096B</span><br><span class=\"line\">Partition Table: gpt</span><br><span class=\"line\">Disk Flags:</span><br><span class=\"line\"></span><br><span class=\"line\">Number  Start   End     Size    File system  Name   Flags</span><br><span class=\"line\"> 1      24.6kB  4174kB  4149kB               xbl_b</span><br><span class=\"line\"></span><br><span class=\"line\">(parted)</span><br><span class=\"line\">walleye:/bin <span class=\"comment\"># parted /dev/block/sdd</span></span><br><span class=\"line\">GNU Parted 3.4</span><br><span class=\"line\">Using /dev/block/sdd</span><br><span class=\"line\">Welcome to GNU Parted! Type <span class=\"string\">&#x27;help&#x27;</span> to view a list of commands.</span><br><span class=\"line\">(parted) p</span><br><span class=\"line\">Model: SAMSUNG KLUCG4J1ED-B0C1 (scsi)</span><br><span class=\"line\">Disk /dev/block/sdd: 101MB</span><br><span class=\"line\">Sector size (logical/physical): 4096B/4096B</span><br><span class=\"line\">Partition Table: gpt</span><br><span class=\"line\">Disk Flags:</span><br><span class=\"line\"></span><br><span class=\"line\">Number  Start   End     Size    File system  Name      Flags</span><br><span class=\"line\"> 1      24.6kB  1073kB  1049kB               misc</span><br><span class=\"line\"> 2      1073kB  1081kB  8192B                ssd</span><br><span class=\"line\"> 3      1081kB  34.6MB  33.6MB  ext4         persist</span><br><span class=\"line\"> 4      34.6MB  35.2MB  524kB                frp</span><br><span class=\"line\"> 5      35.2MB  35.2MB  4096B                cdt</span><br><span class=\"line\"> 6      35.2MB  36.2MB  1049kB               ddr</span><br><span class=\"line\"> 7      36.2MB  36.3MB  131kB                sec</span><br><span class=\"line\"> 8      36.3MB  37.4MB  1049kB               dip</span><br><span class=\"line\"> 9      37.4MB  37.4MB  4096B                dpo</span><br><span class=\"line\">10      37.4MB  71.6MB  34.2MB               splash</span><br><span class=\"line\">11      71.6MB  71.6MB  4096B                limits</span><br><span class=\"line\">12      71.6MB  72.7MB  1049kB               toolsfv</span><br><span class=\"line\">13      72.7MB  81.1MB  8389kB               logfs</span><br><span class=\"line\">14      81.1MB  83.2MB  2097kB               sti</span><br><span class=\"line\">15      83.2MB  85.3MB  2097kB               modemst1</span><br><span class=\"line\">16      85.3MB  87.4MB  2097kB               modemst2</span><br><span class=\"line\">17      87.4MB  88.4MB  1049kB               fsc</span><br><span class=\"line\">18      88.4MB  101MB   12.2MB               reserve3  msftdata</span><br><span class=\"line\"></span><br><span class=\"line\">(parted)</span><br><span class=\"line\">walleye:/bin <span class=\"comment\"># parted /dev/block/sde</span></span><br><span class=\"line\">GNU Parted 3.4</span><br><span class=\"line\">Using /dev/block/sde</span><br><span class=\"line\">Welcome to GNU Parted! Type <span class=\"string\">&#x27;help&#x27;</span> to view a list of commands.</span><br><span class=\"line\">(parted) p</span><br><span class=\"line\">Model: SAMSUNG KLUCG4J1ED-B0C1 (scsi)</span><br><span class=\"line\">Disk /dev/block/sde: 37.7MB</span><br><span class=\"line\">Sector size (logical/physical): 4096B/4096B</span><br><span class=\"line\">Partition Table: gpt</span><br><span class=\"line\">Disk Flags:</span><br><span class=\"line\"></span><br><span class=\"line\">Number  Start   End     Size    File system  Name      Flags</span><br><span class=\"line\"> 1      24.6kB  6316kB  6291kB               ramdump</span><br><span class=\"line\"> 2      6316kB  10.5MB  4194kB               pg1fs</span><br><span class=\"line\"> 3      10.5MB  12.6MB  2097kB               pg2fs</span><br><span class=\"line\"> 4      12.6MB  29.4MB  16.8MB  ext4         metadata  msftdata</span><br><span class=\"line\"> 5      29.4MB  37.7MB  8344kB               reserve4  msftdata</span><br><span class=\"line\"></span><br><span class=\"line\">(parted)</span><br><span class=\"line\">walleye:/bin <span class=\"comment\"># parted /dev/block/sdf</span></span><br><span class=\"line\">GNU Parted 3.4</span><br><span class=\"line\">Using /dev/block/sdf</span><br><span class=\"line\">Welcome to GNU Parted! Type <span class=\"string\">&#x27;help&#x27;</span> to view a list of commands.</span><br><span class=\"line\">(parted) p</span><br><span class=\"line\">Model: SAMSUNG KLUCG4J1ED-B0C1 (scsi)</span><br><span class=\"line\">Disk /dev/block/sdf: 8389kB</span><br><span class=\"line\">Sector size (logical/physical): 4096B/4096B</span><br><span class=\"line\">Partition Table: gpt</span><br><span class=\"line\">Disk Flags:</span><br><span class=\"line\"></span><br><span class=\"line\">Number  Start   End     Size    File system  Name        Flags</span><br><span class=\"line\"> 1      24.6kB  41.0kB  16.4kB               board_info</span><br><span class=\"line\"> 2      41.0kB  303kB   262kB                mfg</span><br><span class=\"line\"> 3      303kB   1876kB  1573kB               fsg</span><br><span class=\"line\"> 4      1876kB  1880kB  4096B                devinfo</span><br><span class=\"line\"> 5      1880kB  8368kB  6488kB               reserve5    msftdata</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"us-travel-1-basic-knowledge","date":"2022-12-03T02:49:12.000Z","_content":"\n### 美国的地址\n\n标准地址格式:\n地址1: Street Address\n地址2: Apt/Suite/Other\n城市, 州, 邮编\n\neg:\n- 2445 Augustine Dr, Santa Clara, CA 95054\n- 1 Infinite Loop, Cupertino CA 95014\n- 1101 S Main St, APT 203, Milpitas CA 95035\n\n\n\n","source":"_posts/us-travel-1-basic-knowledge.md","raw":"---\ntitle: us-travel-1-basic-knowledge\ndate: 2022-12-02 18:49:12\ntags:\n---\n\n### 美国的地址\n\n标准地址格式:\n地址1: Street Address\n地址2: Apt/Suite/Other\n城市, 州, 邮编\n\neg:\n- 2445 Augustine Dr, Santa Clara, CA 95054\n- 1 Infinite Loop, Cupertino CA 95014\n- 1101 S Main St, APT 203, Milpitas CA 95035\n\n\n\n","slug":"us-travel-1-basic-knowledge","published":1,"updated":"2022-12-03T07:48:45.666Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clb7mvhgy0000v2nhdi2gdaxk","content":"<h3 id=\"美国的地址\"><a href=\"#美国的地址\" class=\"headerlink\" title=\"美国的地址\"></a>美国的地址</h3><p>标准地址格式:<br>地址1: Street Address<br>地址2: Apt&#x2F;Suite&#x2F;Other<br>城市, 州, 邮编</p>\n<p>eg:</p>\n<ul>\n<li>2445 Augustine Dr, Santa Clara, CA 95054</li>\n<li>1 Infinite Loop, Cupertino CA 95014</li>\n<li>1101 S Main St, APT 203, Milpitas CA 95035</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"美国的地址\"><a href=\"#美国的地址\" class=\"headerlink\" title=\"美国的地址\"></a>美国的地址</h3><p>标准地址格式:<br>地址1: Street Address<br>地址2: Apt&#x2F;Suite&#x2F;Other<br>城市, 州, 邮编</p>\n<p>eg:</p>\n<ul>\n<li>2445 Augustine Dr, Santa Clara, CA 95054</li>\n<li>1 Infinite Loop, Cupertino CA 95014</li>\n<li>1101 S Main St, APT 203, Milpitas CA 95035</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cl9xoa92e0000rgnh3rtqardg","tag_id":"cl9cib5780001vunh4g5q7m96","_id":"cl9xoa92i0002rgnhedosbp3z"},{"post_id":"cl9xoa92i0003rgnhb65t62i2","tag_id":"cl9f3fo3a00027knha404f4ch","_id":"cl9xoa92k0005rgnhcfrnefyr"},{"post_id":"cl9xoa92k0006rgnhe0965n9a","tag_id":"cl9cic13w000031nh6c2whdwa","_id":"cl9xoa92l0008rgnh2prc6v8z"},{"post_id":"cla0vezyw0000nbnhdhbiex3a","tag_id":"cla2g0ncy000018nhd0nkexsd","_id":"cla2g0nd1000118nh44utghdx"}],"Tag":[{"name":"杂念","_id":"cl9cib5780001vunh4g5q7m96"},{"name":"git,code","_id":"cl9cic13w000031nh6c2whdwa"},{"name":"archlinux","_id":"cl9f3fo3a00027knha404f4ch"},{"name":"web","_id":"cla2g0ncy000018nhd0nkexsd"}]}}