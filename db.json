{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/hexo-theme-next-7.8.0/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/Test.md","hash":"7793a704c1247b63a8ffb66993d39901583e363f","modified":1665994774685},{"_id":"source/_posts/git-usage.md","hash":"80ce9457bdce5379e48277d5eb5d8550b144a397","modified":1665994963504},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1665994774686},{"_id":"themes/hexo-theme-next-7.8.0/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1665994774686},{"_id":"themes/hexo-theme-next-7.8.0/.gitignore","hash":"7b68ca7a46104cf9aa84ec0541a4856ab1836eca","modified":1665994774689},{"_id":"themes/hexo-theme-next-7.8.0/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1665994774687},{"_id":"themes/hexo-theme-next-7.8.0/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1665994774687},{"_id":"themes/hexo-theme-next-7.8.0/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1665994774690},{"_id":"themes/hexo-theme-next-7.8.0/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1665994774690},{"_id":"themes/hexo-theme-next-7.8.0/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1665994774690},{"_id":"themes/hexo-theme-next-7.8.0/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1665994774713},{"_id":"themes/hexo-theme-next-7.8.0/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1665994774690},{"_id":"themes/hexo-theme-next-7.8.0/_config.yml","hash":"b60b177f9cb53bf055d537409e03c3c4daafa50a","modified":1665994774691},{"_id":"themes/hexo-theme-next-7.8.0/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1665994774691},{"_id":"themes/hexo-theme-next-7.8.0/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1665994774687},{"_id":"themes/hexo-theme-next-7.8.0/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1665994774688},{"_id":"themes/hexo-theme-next-7.8.0/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1665994774688},{"_id":"themes/hexo-theme-next-7.8.0/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1665994774687},{"_id":"themes/hexo-theme-next-7.8.0/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1665994774695},{"_id":"themes/hexo-theme-next-7.8.0/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1665994774688},{"_id":"themes/hexo-theme-next-7.8.0/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1665994774688},{"_id":"themes/hexo-theme-next-7.8.0/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1665994774689},{"_id":"themes/hexo-theme-next-7.8.0/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1665994774689},{"_id":"themes/hexo-theme-next-7.8.0/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1665994774689},{"_id":"themes/hexo-theme-next-7.8.0/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1665994774689},{"_id":"themes/hexo-theme-next-7.8.0/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1665994774689},{"_id":"themes/hexo-theme-next-7.8.0/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1665994774691},{"_id":"themes/hexo-theme-next-7.8.0/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1665994774692},{"_id":"themes/hexo-theme-next-7.8.0/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1665994774691},{"_id":"themes/hexo-theme-next-7.8.0/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1665994774692},{"_id":"themes/hexo-theme-next-7.8.0/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1665994774692},{"_id":"themes/hexo-theme-next-7.8.0/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1665994774692},{"_id":"themes/hexo-theme-next-7.8.0/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1665994774692},{"_id":"themes/hexo-theme-next-7.8.0/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1665994774692},{"_id":"themes/hexo-theme-next-7.8.0/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1665994774695},{"_id":"themes/hexo-theme-next-7.8.0/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1665994774695},{"_id":"themes/hexo-theme-next-7.8.0/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1665994774692},{"_id":"themes/hexo-theme-next-7.8.0/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1665994774695},{"_id":"themes/hexo-theme-next-7.8.0/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1665994774696},{"_id":"themes/hexo-theme-next-7.8.0/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1665994774696},{"_id":"themes/hexo-theme-next-7.8.0/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1665994774695},{"_id":"themes/hexo-theme-next-7.8.0/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1665994774696},{"_id":"themes/hexo-theme-next-7.8.0/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1665994774696},{"_id":"themes/hexo-theme-next-7.8.0/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1665994774697},{"_id":"themes/hexo-theme-next-7.8.0/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1665994774696},{"_id":"themes/hexo-theme-next-7.8.0/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1665994774697},{"_id":"themes/hexo-theme-next-7.8.0/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1665994774697},{"_id":"themes/hexo-theme-next-7.8.0/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1665994774697},{"_id":"themes/hexo-theme-next-7.8.0/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1665994774697},{"_id":"themes/hexo-theme-next-7.8.0/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1665994774697},{"_id":"themes/hexo-theme-next-7.8.0/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1665994774697},{"_id":"themes/hexo-theme-next-7.8.0/languages/tr.yml","hash":"fe793f4c2608e3f85f0b872fd0ac1fb93e6155e2","modified":1665994774698},{"_id":"themes/hexo-theme-next-7.8.0/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1665994774698},{"_id":"themes/hexo-theme-next-7.8.0/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1665994774698},{"_id":"themes/hexo-theme-next-7.8.0/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1665994774698},{"_id":"themes/hexo-theme-next-7.8.0/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1665994774698},{"_id":"themes/hexo-theme-next-7.8.0/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1665994774698},{"_id":"themes/hexo-theme-next-7.8.0/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1665994774699},{"_id":"themes/hexo-theme-next-7.8.0/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1665994774712},{"_id":"themes/hexo-theme-next-7.8.0/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1665994774712},{"_id":"themes/hexo-theme-next-7.8.0/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1665994774712},{"_id":"themes/hexo-theme-next-7.8.0/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1665994774712},{"_id":"themes/hexo-theme-next-7.8.0/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1665994774712},{"_id":"themes/hexo-theme-next-7.8.0/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1665994774717},{"_id":"themes/hexo-theme-next-7.8.0/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1665994774712},{"_id":"themes/hexo-theme-next-7.8.0/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1665994774687},{"_id":"themes/hexo-theme-next-7.8.0/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1665994774688},{"_id":"themes/hexo-theme-next-7.8.0/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1665994774688},{"_id":"themes/hexo-theme-next-7.8.0/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1665994774687},{"_id":"themes/hexo-theme-next-7.8.0/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1665994774693},{"_id":"themes/hexo-theme-next-7.8.0/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1665994774693},{"_id":"themes/hexo-theme-next-7.8.0/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1665994774693},{"_id":"themes/hexo-theme-next-7.8.0/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1665994774693},{"_id":"themes/hexo-theme-next-7.8.0/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1665994774693},{"_id":"themes/hexo-theme-next-7.8.0/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1665994774694},{"_id":"themes/hexo-theme-next-7.8.0/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1665994774694},{"_id":"themes/hexo-theme-next-7.8.0/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1665994774694},{"_id":"themes/hexo-theme-next-7.8.0/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1665994774694},{"_id":"themes/hexo-theme-next-7.8.0/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1665994774694},{"_id":"themes/hexo-theme-next-7.8.0/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1665994774695},{"_id":"themes/hexo-theme-next-7.8.0/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1665994774694},{"_id":"themes/hexo-theme-next-7.8.0/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1665994774695},{"_id":"themes/hexo-theme-next-7.8.0/layout/_macro/post-collapse.swig","hash":"c4ec5822d644ddcedf2401837e6f6e6d3b63fbcd","modified":1665994774699},{"_id":"themes/hexo-theme-next-7.8.0/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1665994774699},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/footer.swig","hash":"af2d688f688923080aaf8f20be33cfda629797ea","modified":1665994774700},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1665994774700},{"_id":"themes/hexo-theme-next-7.8.0/layout/_macro/post.swig","hash":"71e4dc5a56cbc403d9785526f7719d824f4c8911","modified":1665994774699},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1665994774704},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1665994774702},{"_id":"themes/hexo-theme-next-7.8.0/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1665994774704},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1665994774701},{"_id":"themes/hexo-theme-next-7.8.0/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1665994774706},{"_id":"themes/hexo-theme-next-7.8.0/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1665994774706},{"_id":"themes/hexo-theme-next-7.8.0/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1665994774705},{"_id":"themes/hexo-theme-next-7.8.0/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1665994774704},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/baidu-push.swig","hash":"8627c8c8b031ecee16c522433b66fa4d6979b8ea","modified":1665994774707},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1665994774709},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1665994774709},{"_id":"themes/hexo-theme-next-7.8.0/scripts/events/index.js","hash":"bf5e93f9209d111a014a7a6a17e86c05be552d13","modified":1665994774713},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1665994774709},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1665994774715},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1665994774716},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1665994774716},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/post.js","hash":"d86849559ae54a4098aef4e2ab9dc8f99a1d186c","modified":1665994774716},{"_id":"themes/hexo-theme-next-7.8.0/scripts/helpers/engine.js","hash":"22d77bd511fc7c1bbd12339d65004ed5bfb0713c","modified":1665994774716},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1665994774716},{"_id":"themes/hexo-theme-next-7.8.0/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1665994774717},{"_id":"themes/hexo-theme-next-7.8.0/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1665994774717},{"_id":"themes/hexo-theme-next-7.8.0/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1665994774717},{"_id":"themes/hexo-theme-next-7.8.0/scripts/tags/button.js","hash":"946dd7beede408d1f090d5e9774d74763828b97c","modified":1665994774717},{"_id":"themes/hexo-theme-next-7.8.0/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1665994774718},{"_id":"themes/hexo-theme-next-7.8.0/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1665994774718},{"_id":"themes/hexo-theme-next-7.8.0/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1665994774718},{"_id":"themes/hexo-theme-next-7.8.0/scripts/tags/center-quote.js","hash":"0f133f27b61e8351cfd0959ba8a1b8551a9a8cc6","modified":1665994774718},{"_id":"themes/hexo-theme-next-7.8.0/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1665994774718},{"_id":"themes/hexo-theme-next-7.8.0/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1665994774719},{"_id":"themes/hexo-theme-next-7.8.0/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1665994774719},{"_id":"themes/hexo-theme-next-7.8.0/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1665994774719},{"_id":"themes/hexo-theme-next-7.8.0/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1665994774719},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_colors.styl","hash":"19c836f367977fb712b9868f3281ff5d757a8d5c","modified":1665994774720},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_mixins.styl","hash":"b79ff3debd5709397b122292fc7e551ae9d40782","modified":1665994774733},{"_id":"themes/hexo-theme-next-7.8.0/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1665994774738},{"_id":"themes/hexo-theme-next-7.8.0/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1665994774738},{"_id":"themes/hexo-theme-next-7.8.0/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1665994774738},{"_id":"themes/hexo-theme-next-7.8.0/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1665994774739},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1665994774739},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1665994774739},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1665994774739},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1665994774739},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1665994774740},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1665994774740},{"_id":"themes/hexo-theme-next-7.8.0/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1665994774740},{"_id":"themes/hexo-theme-next-7.8.0/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1665994774740},{"_id":"themes/hexo-theme-next-7.8.0/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1665994774740},{"_id":"themes/hexo-theme-next-7.8.0/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1665994774740},{"_id":"themes/hexo-theme-next-7.8.0/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1665994774741},{"_id":"themes/hexo-theme-next-7.8.0/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1665994774741},{"_id":"themes/hexo-theme-next-7.8.0/source/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1665994774741},{"_id":"themes/hexo-theme-next-7.8.0/source/js/algolia-search.js","hash":"23cc3c013185eb97ef347c3b4c92d928f2f3398f","modified":1665994774741},{"_id":"themes/hexo-theme-next-7.8.0/source/js/local-search.js","hash":"b42bd1c883ce91db8632d96e0f0e062cb6b73adc","modified":1665994774741},{"_id":"themes/hexo-theme-next-7.8.0/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1665994774742},{"_id":"themes/hexo-theme-next-7.8.0/source/js/next-boot.js","hash":"a22eeb6048ddd6b9224c8a671cbcfa303a2f7a1a","modified":1665994774742},{"_id":"themes/hexo-theme-next-7.8.0/source/js/utils.js","hash":"95c5d37aa06521675afcf8619cfc5dbba3d2e18a","modified":1665994774743},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1665994774700},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1665994774743},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1665994774701},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/header/menu-item.swig","hash":"12aeb9ee0d1d49d347f82a91e6bab568e1b59037","modified":1665994774701},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/header/menu.swig","hash":"958e097790551c9520426a1233add03515034f35","modified":1665994774701},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1665994774701},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1665994774700},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/head/head.swig","hash":"1ea12d4b9490d9065ebf1b8739b90ce5defd6398","modified":1665994774700},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1665994774702},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1665994774702},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/post/post-copyright.swig","hash":"94d54b0c65d504f772af1e62424952e092b6c21d","modified":1665994774702},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/post/post-followme.swig","hash":"12cd9adb0c33adc484201f9e8a4e64ccf3011bae","modified":1665994774702},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1665994774703},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1665994774703},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1665994774703},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1665994774703},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1665994774704},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1665994774703},{"_id":"themes/hexo-theme-next-7.8.0/layout/_partials/sidebar/site-overview.swig","hash":"ec20ff43845723e0ac2a245047c7a7e5aead6e88","modified":1665994774704},{"_id":"themes/hexo-theme-next-7.8.0/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1665994774705},{"_id":"themes/hexo-theme-next-7.8.0/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1665994774705},{"_id":"themes/hexo-theme-next-7.8.0/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1665994774705},{"_id":"themes/hexo-theme-next-7.8.0/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1665994774705},{"_id":"themes/hexo-theme-next-7.8.0/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1665994774706},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1665994774706},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1665994774706},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1665994774706},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1665994774707},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1665994774707},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1665994774707},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1665994774707},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1665994774708},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1665994774708},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1665994774708},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1665994774708},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1665994774708},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1665994774709},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1665994774709},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1665994774710},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1665994774709},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d7258d02bcf0dac6c0fd8377c0909ddecb09d1d4","modified":1665994774710},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1665994774710},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1665994774710},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1665994774711},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1665994774710},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1665994774711},{"_id":"themes/hexo-theme-next-7.8.0/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1665994774713},{"_id":"themes/hexo-theme-next-7.8.0/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1665994774713},{"_id":"themes/hexo-theme-next-7.8.0/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1665994774713},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1665994774711},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/comment/changyan.js","hash":"1f20213af8da3127701e6bb9da995e5c91be2051","modified":1665994774714},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1665994774714},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/comment/disqus.js","hash":"19cbd24880d0fbbd4d5698cd54da598f03b942da","modified":1665994774714},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/comment/common.js","hash":"0803d4f4d3d02c24417c163ad0b27b60fda79250","modified":1665994774714},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1665994774714},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1665994774711},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1665994774715},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1665994774715},{"_id":"themes/hexo-theme-next-7.8.0/scripts/filters/comment/valine.js","hash":"6a72b5928cdab9526a288177991e4b2aedd028cf","modified":1665994774715},{"_id":"themes/hexo-theme-next-7.8.0/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1665994774711},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1665994774737},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1665994774737},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1665994774737},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_variables/Pisces.styl","hash":"799fdf4f258a51d45d1e2b02fb59b337e46b5b3c","modified":1665994774738},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1665994774743},{"_id":"themes/hexo-theme-next-7.8.0/source/js/schemes/pisces.js","hash":"3d9d3c14b77044d66be1898a9a934696e9127c82","modified":1665994774742},{"_id":"themes/hexo-theme-next-7.8.0/source/js/schemes/muse.js","hash":"47c4f60eb7f7dc3303e84914b611dc34827069e1","modified":1665994774742},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_variables/base.styl","hash":"dae390efcb5da9c021ad7f25fe2d39ff36938cc6","modified":1665994774738},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1665994774743},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1665994774744},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1665994774744},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1665994774743},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1665994774720},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1665994774720},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1665994774748},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1665994774720},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1665994774724},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1665994774748},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1665994774727},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1665994774727},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/base.styl","hash":"220da37051ed5dac9cf7bd126451f6aba4f94d21","modified":1665994774729},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1665994774729},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1665994774729},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1665994774731},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1665994774731},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/tables.styl","hash":"b3bea92eef0e1fe2e7e294dac2184d16b5b8d666","modified":1665994774731},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1665994774731},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1665994774734},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1665994774733},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1665994774733},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1665994774734},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1665994774734},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1665994774734},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1665994774735},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1665994774735},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Muse/_menu.styl","hash":"5e644b1303ab6dcd1b65ee0fd6b91309b04ce64d","modified":1665994774735},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1665994774735},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1665994774735},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1665994774735},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1665994774736},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1665994774736},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1665994774736},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Pisces/_sidebar.styl","hash":"e4f958677a75de87ee1caf7e22ba46a0602f22dd","modified":1665994774736},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Pisces/_sub-menu.styl","hash":"82025c3ad7af12e532e2e81be98deb0a74ff23ac","modified":1665994774737},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Pisces/_menu.styl","hash":"ccb71d732b12acd02ac26ed6bbda4861d027857d","modified":1665994774736},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1665994774737},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1665994774744},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1665994774745},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1665994774745},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1665994774721},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1665994774720},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1665994774721},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/pages/schedule.styl","hash":"c1daeb60c23945f745703ac2c3f4bf99d0ea3d95","modified":1665994774721},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/pages/tag-cloud.styl","hash":"7ddb7453bf9b85b01bff136e9d10a7f06baac9e8","modified":1665994774721},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1665994774722},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1665994774722},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-collapse.styl","hash":"89f76380091f1be49936c69bac02e984dae5ff87","modified":1665994774721},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1665994774722},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-nav.styl","hash":"796eb941ba0ca03fd5ca6d15a1f6a56afd9aa174","modified":1665994774723},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1665994774722},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1665994774722},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-header.styl","hash":"66211794e4ed47e779ca81150cef588e0b4f2fc5","modified":1665994774723},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1665994774723},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-reward.styl","hash":"eca4d80dd0df1c3b1bc06bd39e6a4bd6c56198df","modified":1665994774723},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1665994774723},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1665994774723},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1665994774724},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1665994774724},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1665994774724},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1665994774724},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1665994774725},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1665994774725},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/header/bookmark.styl","hash":"e02b1097a72a7d2ddc45ea8d53aa6d77c25ac407","modified":1665994774725},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1665994774725},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1665994774726},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1665994774726},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1665994774726},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/header/menu.styl","hash":"555762730f1f31451113e8fdc84ec438ea738d90","modified":1665994774726},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1665994774726},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1665994774726},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1665994774727},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1665994774727},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1665994774727},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"a237c290e8934d1a8cbbf22b3f30503d9663021d","modified":1665994774728},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1665994774728},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1665994774728},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1665994774728},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1665994774728},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1665994774730},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1665994774729},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1665994774729},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1665994774730},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"7213e3d0ad7c95717ecd4e701d6ee9248ef2bf9f","modified":1665994774732},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1665994774730},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1665994774732},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1665994774730},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/tags/note.styl","hash":"9b3cce30c58e57b59e45d3f668a71a4129d3a8e4","modified":1665994774732},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1665994774732},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1665994774732},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1665994774733},{"_id":"themes/hexo-theme-next-7.8.0/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1665994774733},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1665994774747},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1665994774747},{"_id":"themes/hexo-theme-next-7.8.0/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1665994774746},{"_id":"public/2022/10/17/hello-world/index.html","hash":"40ce37b5e4578b5f25a203d6cc5d238af3f360e9","modified":1665994875241},{"_id":"public/2022/10/17/git-usage/index.html","hash":"413ac949f9ca1ff9d6754b5550a8c51d8b44931d","modified":1666709287873},{"_id":"public/2022/05/05/Test/index.html","hash":"b0ebdc9424066d4f42f9ab2d6e72f1cb006776c7","modified":1666542525151},{"_id":"public/archives/index.html","hash":"8ae77a16139594e1423668663c97911f603d5148","modified":1666709287873},{"_id":"public/archives/2022/index.html","hash":"5bb53e491db69cf2cd6e4c1634452e01fe2309e2","modified":1666709287873},{"_id":"public/archives/2022/05/index.html","hash":"dd793a26d2ed1ff1e811b52faf64ca654e0dbeb3","modified":1666542525151},{"_id":"public/archives/2022/10/index.html","hash":"ff721836afefd3c251cfd8da9941ebc49e2d9ae4","modified":1666709287873},{"_id":"public/index.html","hash":"2d8523bd31613f0c6d95cf000041e2bd59d6c434","modified":1666709287873},{"_id":"public/tags/杂念/index.html","hash":"87b9bf774d5eec38910c42ccad80b7c69c99ec8e","modified":1666542525151},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1665994833819},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1665994833819},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1665994833819},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1665994833819},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1665994833819},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1665994833819},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1665994833819},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1665994833819},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1665994833819},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1665994833819},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1665994833819},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1665994833819},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1665994833819},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1665994833819},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1665994833819},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1665994833819},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1665994833819},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1665994833819},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1665994833819},{"_id":"public/js/algolia-search.js","hash":"23cc3c013185eb97ef347c3b4c92d928f2f3398f","modified":1665994833819},{"_id":"public/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1665994833819},{"_id":"public/js/local-search.js","hash":"b42bd1c883ce91db8632d96e0f0e062cb6b73adc","modified":1665994833819},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1665994833819},{"_id":"public/js/next-boot.js","hash":"a22eeb6048ddd6b9224c8a671cbcfa303a2f7a1a","modified":1665994833819},{"_id":"public/js/utils.js","hash":"95c5d37aa06521675afcf8619cfc5dbba3d2e18a","modified":1665994833819},{"_id":"public/js/schemes/muse.js","hash":"47c4f60eb7f7dc3303e84914b611dc34827069e1","modified":1665994833819},{"_id":"public/js/schemes/pisces.js","hash":"3d9d3c14b77044d66be1898a9a934696e9127c82","modified":1665994833819},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1665994833819},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1665994833819},{"_id":"public/css/main.css","hash":"69a8568ce5433b02da5e126063ca18e646fbaba9","modified":1665994833819},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1665994833819},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1665994833819},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1665994833819},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1665994833819},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1665994833819},{"_id":"public/tags/git-code/index.html","hash":"b11175e8aecc669b37cd9e515673f4429f2b232b","modified":1666542525151},{"_id":"source/_posts/dwm.md","hash":"20b09feffa06d86b47dede1ab4a27af68999c940","modified":1666096671310},{"_id":"source/_posts/折腾arch.md","hash":"85ab91e1eae3e43d7d3d0de6ec7284610d719b90","modified":1666095580877},{"_id":"public/2022/10/18/dwm/index.html","hash":"36b0ed35a20bf3bdd1b938448370ae2fbce9c500","modified":1666709287873},{"_id":"public/2022/10/17/折腾arch/index.html","hash":"8ecedbb79c16d1c399a3cb88eb4e93900ade84bf","modified":1666542525151},{"_id":"public/tags/archlinux/index.html","hash":"77b3c11af663713a066dbd84a2716631051797b6","modified":1666709287873},{"_id":"source/_posts/cpp.md","hash":"a7a198d3ba3624efe75f0924114b3eb982a6995a","modified":1666516154382},{"_id":"public/2022/10/20/cpp/index.html","hash":"3dfb75236f4eb366159bbb0a90c25e0834defc53","modified":1666542525151},{"_id":"source/_posts/tunnel.md","hash":"967d70632af98083ed270dca5494561c4ef45604","modified":1666708524600},{"_id":"source/.DS_Store","hash":"b48c4f7d61a5928be717d4bd654481ff1eab36ee","modified":1666521714790},{"_id":"source/_posts/prepare-aosp-read.md","hash":"2ff2b7fb174825764e340f286edcef5dac1666bd","modified":1666521668306},{"_id":"public/2022/10/24/tunnel/index.html","hash":"2138625ceca8749d4cd5b3af53d82119a1c36db5","modified":1666708542942},{"_id":"public/2022/10/23/prepare-aosp-read/index.html","hash":"525e61009059bdcd231539b4291daa51b8fe46d7","modified":1666542525151},{"_id":"source/_posts/arch.md","hash":"85ab91e1eae3e43d7d3d0de6ec7284610d719b90","modified":1666095580877},{"_id":"public/2022/10/17/arch/index.html","hash":"9b822c8d910ded7c72b5373c8168bae20ec2690f","modified":1666709287873}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Test","date":"2022-05-04T17:18:40.000Z","_content":"\n## Test ##\nJust a test..\n\n----\n算算自己从大学来，断断续续搞了好多年技术，博客总是写了删，删了写。想想还是要厚积薄发，望自己多积累，多学习吧。","source":"_posts/Test.md","raw":"---\ntitle: Test\ndate: 2022-05-05 01:18:40\ntags: 杂念\n---\n\n## Test ##\nJust a test..\n\n----\n算算自己从大学来，断断续续搞了好多年技术，博客总是写了删，删了写。想想还是要厚积薄发，望自己多积累，多学习吧。","slug":"Test","published":1,"updated":"2022-10-17T08:19:34.685Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9cib5720000vunh78i43t12","content":"<h2 id=\"Test\"><a href=\"#Test\" class=\"headerlink\" title=\"Test\"></a>Test</h2><p>Just a test..</p>\n<hr>\n<p>算算自己从大学来，断断续续搞了好多年技术，博客总是写了删，删了写。想想还是要厚积薄发，望自己多积累，多学习吧。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Test\"><a href=\"#Test\" class=\"headerlink\" title=\"Test\"></a>Test</h2><p>Just a test..</p>\n<hr>\n<p>算算自己从大学来，断断续续搞了好多年技术，博客总是写了删，删了写。想想还是要厚积薄发，望自己多积累，多学习吧。</p>\n"},{"layout":"title","title":"git常用操作","date":"2022-10-17T06:48:01.000Z","_content":"\n## Merge\ngit merge --abort\n\n\n## 显示多个分支的共同commit\n```\n# 显示多个commit依次合并后的base\ngit merge-base $branch1 $branch2 \n\n# 显示多个commit的共同base\ngit show-branch --merge-base $branch1 $branch2 \n```\n\n## cherry-pick\n\n- 转移单个提交\n```\ngit cherry-pick <commitHash>/<branch>\n```\n- 转移多次提交\n```\ngit cherry-pick <HashA> <HashB>\ngit cherry-pick A..B # 不含A\ngit cherry-pick A^..B # 含A\n```\n## rebase\n\n```sh\ngit rebase [startpoint] [endpoint] --onto [branchname]\n```\n\n# Ref\nhttps://zhuanlan.zhihu.com/p/75499871\nhttps://www.jianshu.com/p/4a8f4af4e803","source":"_posts/git-usage.md","raw":"---\nlayout: title\ntitle: git常用操作\ndate: 2022-10-17 14:48:01\ntags: git,code\n---\n\n## Merge\ngit merge --abort\n\n\n## 显示多个分支的共同commit\n```\n# 显示多个commit依次合并后的base\ngit merge-base $branch1 $branch2 \n\n# 显示多个commit的共同base\ngit show-branch --merge-base $branch1 $branch2 \n```\n\n## cherry-pick\n\n- 转移单个提交\n```\ngit cherry-pick <commitHash>/<branch>\n```\n- 转移多次提交\n```\ngit cherry-pick <HashA> <HashB>\ngit cherry-pick A..B # 不含A\ngit cherry-pick A^..B # 含A\n```\n## rebase\n\n```sh\ngit rebase [startpoint] [endpoint] --onto [branchname]\n```\n\n# Ref\nhttps://zhuanlan.zhihu.com/p/75499871\nhttps://www.jianshu.com/p/4a8f4af4e803","slug":"git-usage","published":1,"updated":"2022-10-17T08:22:43.504Z","_id":"cl9cib57c0004vunh19dd9m89","comments":1,"photos":[],"link":"","content":"<h2 id=\"Merge\"><a href=\"#Merge\" class=\"headerlink\" title=\"Merge\"></a>Merge</h2><p>git merge –abort</p>\n<h2 id=\"显示多个分支的共同commit\"><a href=\"#显示多个分支的共同commit\" class=\"headerlink\" title=\"显示多个分支的共同commit\"></a>显示多个分支的共同commit</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 显示多个commit依次合并后的base</span><br><span class=\"line\">git merge-base $branch1 $branch2 </span><br><span class=\"line\"></span><br><span class=\"line\"># 显示多个commit的共同base</span><br><span class=\"line\">git show-branch --merge-base $branch1 $branch2 </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"cherry-pick\"><a href=\"#cherry-pick\" class=\"headerlink\" title=\"cherry-pick\"></a>cherry-pick</h2><ul>\n<li>转移单个提交<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cherry-pick &lt;commitHash&gt;/&lt;branch&gt;</span><br></pre></td></tr></table></figure></li>\n<li>转移多次提交<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cherry-pick &lt;HashA&gt; &lt;HashB&gt;</span><br><span class=\"line\">git cherry-pick A..B # 不含A</span><br><span class=\"line\">git cherry-pick A^..B # 含A</span><br></pre></td></tr></table></figure>\n<h2 id=\"rebase\"><a href=\"#rebase\" class=\"headerlink\" title=\"rebase\"></a>rebase</h2></li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase [startpoint] [endpoint] --onto [branchname]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Ref\"><a href=\"#Ref\" class=\"headerlink\" title=\"Ref\"></a>Ref</h1><p><a href=\"https://zhuanlan.zhihu.com/p/75499871\">https://zhuanlan.zhihu.com/p/75499871</a><br><a href=\"https://www.jianshu.com/p/4a8f4af4e803\">https://www.jianshu.com/p/4a8f4af4e803</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Merge\"><a href=\"#Merge\" class=\"headerlink\" title=\"Merge\"></a>Merge</h2><p>git merge –abort</p>\n<h2 id=\"显示多个分支的共同commit\"><a href=\"#显示多个分支的共同commit\" class=\"headerlink\" title=\"显示多个分支的共同commit\"></a>显示多个分支的共同commit</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 显示多个commit依次合并后的base</span><br><span class=\"line\">git merge-base $branch1 $branch2 </span><br><span class=\"line\"></span><br><span class=\"line\"># 显示多个commit的共同base</span><br><span class=\"line\">git show-branch --merge-base $branch1 $branch2 </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"cherry-pick\"><a href=\"#cherry-pick\" class=\"headerlink\" title=\"cherry-pick\"></a>cherry-pick</h2><ul>\n<li>转移单个提交<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cherry-pick &lt;commitHash&gt;/&lt;branch&gt;</span><br></pre></td></tr></table></figure></li>\n<li>转移多次提交<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cherry-pick &lt;HashA&gt; &lt;HashB&gt;</span><br><span class=\"line\">git cherry-pick A..B # 不含A</span><br><span class=\"line\">git cherry-pick A^..B # 含A</span><br></pre></td></tr></table></figure>\n<h2 id=\"rebase\"><a href=\"#rebase\" class=\"headerlink\" title=\"rebase\"></a>rebase</h2></li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase [startpoint] [endpoint] --onto [branchname]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Ref\"><a href=\"#Ref\" class=\"headerlink\" title=\"Ref\"></a>Ref</h1><p><a href=\"https://zhuanlan.zhihu.com/p/75499871\">https://zhuanlan.zhihu.com/p/75499871</a><br><a href=\"https://www.jianshu.com/p/4a8f4af4e803\">https://www.jianshu.com/p/4a8f4af4e803</a></p>\n"},{"title":"dwm","date":"2022-10-18T12:23:36.000Z","_content":"\nalt + shift + enter 打开新窗口\nalt + shift + c     关闭\nalt + D             横向排列\nait + I             竖向排列\nalt + Enter         窗口位置互换\nalt + num           切换标签页\nalt + shift + num   移动窗口至某标签页\nalt + T             平铺\nalt + M             单窗口模式\nalt + F             浮动模式\n\n在窗口间切换\nalt + J\nalt + K\n\n改变窗口的长度/比例\nalt + H\nalt + L\n\n窗口模式切换\nalt + space\nalt + shift + space\n\n\nRef:\ndwm快捷键 https://blog.csdn.net/qq_36390239/article/details/112990746\nhttps://blog.csdn.net/qq_34548075/article/details/106941934\n\n","source":"_posts/dwm.md","raw":"---\ntitle: dwm\ndate: 2022-10-18 20:23:36\ntags:\n---\n\nalt + shift + enter 打开新窗口\nalt + shift + c     关闭\nalt + D             横向排列\nait + I             竖向排列\nalt + Enter         窗口位置互换\nalt + num           切换标签页\nalt + shift + num   移动窗口至某标签页\nalt + T             平铺\nalt + M             单窗口模式\nalt + F             浮动模式\n\n在窗口间切换\nalt + J\nalt + K\n\n改变窗口的长度/比例\nalt + H\nalt + L\n\n窗口模式切换\nalt + space\nalt + shift + space\n\n\nRef:\ndwm快捷键 https://blog.csdn.net/qq_36390239/article/details/112990746\nhttps://blog.csdn.net/qq_34548075/article/details/106941934\n\n","slug":"dwm","published":1,"updated":"2022-10-18T12:37:51.310Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9f3fo3400007knhbjx60qgf","content":"<p>alt + shift + enter 打开新窗口<br>alt + shift + c     关闭<br>alt + D             横向排列<br>ait + I             竖向排列<br>alt + Enter         窗口位置互换<br>alt + num           切换标签页<br>alt + shift + num   移动窗口至某标签页<br>alt + T             平铺<br>alt + M             单窗口模式<br>alt + F             浮动模式</p>\n<p>在窗口间切换<br>alt + J<br>alt + K</p>\n<p>改变窗口的长度&#x2F;比例<br>alt + H<br>alt + L</p>\n<p>窗口模式切换<br>alt + space<br>alt + shift + space</p>\n<p>Ref:<br>dwm快捷键 <a href=\"https://blog.csdn.net/qq_36390239/article/details/112990746\">https://blog.csdn.net/qq_36390239/article/details/112990746</a><br><a href=\"https://blog.csdn.net/qq_34548075/article/details/106941934\">https://blog.csdn.net/qq_34548075/article/details/106941934</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>alt + shift + enter 打开新窗口<br>alt + shift + c     关闭<br>alt + D             横向排列<br>ait + I             竖向排列<br>alt + Enter         窗口位置互换<br>alt + num           切换标签页<br>alt + shift + num   移动窗口至某标签页<br>alt + T             平铺<br>alt + M             单窗口模式<br>alt + F             浮动模式</p>\n<p>在窗口间切换<br>alt + J<br>alt + K</p>\n<p>改变窗口的长度&#x2F;比例<br>alt + H<br>alt + L</p>\n<p>窗口模式切换<br>alt + space<br>alt + shift + space</p>\n<p>Ref:<br>dwm快捷键 <a href=\"https://blog.csdn.net/qq_36390239/article/details/112990746\">https://blog.csdn.net/qq_36390239/article/details/112990746</a><br><a href=\"https://blog.csdn.net/qq_34548075/article/details/106941934\">https://blog.csdn.net/qq_34548075/article/details/106941934</a></p>\n"},{"title":"c++ 11","date":"2022-10-20T09:39:14.000Z","_content":"\n\n## 2. 保证稳定性与兼容性\n### c++11\n通过内存模型、线程、原子操作等来支持本地并行编程(Native Concurrency)。\n通过统一初始化表达式、auto、declytype、移动语义等来统一对泛型编程的支持。 \n通过 constexpr、POD(概念)等更好地支持系统编程。\n通过内联命名空间、继承构造函数和右值引用等，以更好地支持库的构建。\n\n### _Pragma\n\n```c\n#pragma\n\n_Pragma(\"once)\n```\n\n### 变长参数定义以及__VA_ARGS_\n```c\n#define PR(...) printf(__VA_ARGS__) \n```\n\n### long long\n- ll (long long) %lld\n- ull (unsigned long long) %llu\n\nlimits.h\nLLONG_MIN\nLLONG_MAX\nULLONG_MIN\n\n### 静态断言 + static_assert\n\n静态断言\n编译时期断言\n```c++\ntemplate <typename t, typename u> int bit_copy(t& a, u& b) {\n  static_assert(sizeof(b) == sizeof(a), \"the parameters of bit_coppy must have same width.\");\n\n  // TODO\n}\n```\n\n\n### noexcept\n```c++\nvoid BlockThrow() noexcept { Throw(); }\n```\nnoexcept 会直接调用`std::terminate`中断程序的执行,阻止异常传播.\n即声明不抛出异常的函数\n\n```c++\ntemplate <class T>\nvoid fun() noexcept(noexcept(T())) {}\n```\n\n\n\neg:\n```c++\ntemplate<class T> class A {\n  public:\n    static constexpr T min() noexcept { return T(); }\n    static constexpr T max() noexcept { return T(); }\n    static constexpr T lowest() noexcept { return T(); }\n}\n```\n\nc++11中类的析构函数默认也是noexcept(true)的.\n\n\n### 2.7 快速初始化成员变量\nC++11 允许使用= {} 进行就地的非静态成员变量初始化。\n\n```c++\nstruct init{ int a = 1; double b {1.2}; }\n```\n\n初始化列表 后作用与 非静态成员, 即 初始化列表的效果总是优先于就地初始化的。\n\n\n### 2.8 非静态成员的sizeof\nc++11 中对非静态成员变量使用sizeof操作是合法的。\n```c++\n#include<iostream>\nusing namespace std;\n\nstruct People {\n  public:\n    int hand;\n}\n\nint main() {\n  cout << sizeof(People::hand) << endl;\n}\n```\n\n\n### 2.9 friend\n\n### 2.10 final/override\n`final`关键字使派生类不可覆盖它所修饰的虚函数.\n\n如果派生类的虚函数声明时, 使用了`override`描述符, 那么该函数必须重载其基类中的同名函数，否则代码将无法通过编译。\n\n\n### 2.11 模板函数的默认模板参数\n\n### 2.12 外部模板\n\n### 2.13 局部和匿名类型作模板实参\n\n## 3 通用为本, 专用为末\n### 3.1 继承构造函数\n\n子类可以通过使用using声明来声明继承基类的构造函数.\n\n```c++\n#include <iostream>\nusing namespace std;\n\nstruct A {\n  A(int i) {}\n}\n\nstruct B : A {\n  using A::A;\n\n  int d {0};\n}\n\nint main() {\n  B b(365);\n}\n```\n\n### 3.2 委派构造函数\n\n在C++11中，委派构造函数，就是指委派函数将构造的任务委派给了目标构造函数来完成的这样一种类构造的方式.\n```c++\nclass Info {\npublic:\n  Info() : Info(1, 'a') {}\n  Info(int i) : Info(i, 'a') {}\n  Info(char e) : Info(1, e) {}\n\nprivate:\n  Info(int i, char e): type(i), name(e) {}\n  int type;\n  char name;\n}\n```\n\n### 3.3 右值引用；移动语义和完美转发\n\n3.3.1 指针成员与拷贝构造\n涉及到指针要使用深拷贝.\n\n3.3.2 移动语义\n移动构造函数\n\n```c++\n#include <iostream>\nusing namespace std;\n\nclass HasPtrMem {\npublic:\n  HasPtrMem():d(new int(3)) {}\n  HasPtrMem(const HasPtrMem &h):d(new int(*h.d)) {}\n\n  HasPtrMem(HasPtrMem && h) : d(h.d) { // 移动构造函数\n    h.d = nullptr;\n  }\n\n  ~HasPtrMem() {\n    delete d;\n  }\n\n  int *d\n}\n```\n\n3.3.3 左值\\右值 与 右值引用\n\n可以取地址的、有名字的就是左值.\n不可以取地址的，没有名字的就是右值.\n\nc++11 中, 右值分为两种, 将亡值(xvalue, eXpiring Value), 纯右值(prvalue, Pure Rvalue)\n\n```c++\nT && a = ReturnRvalue();\nT b = ReturnRvalue();\n```\n右值引用是不能绑定到任何左值的\n```c++\nint c;\nint && d = c; // X 编译失败\n```\n\n出现这样的状况的原因是，在常量左值引用在 C++98 标准中开始就是个“万能”的引用 类型。它可以接受非常量左值、常量左值、右值对其进行初始化。而且在使用右值对其初始 化的时候，常量左值引用还可以像右值引用一样将右值的生命期延长。不过相比于右值引用 所引用的右值，常量左值所引用的右值在它的“余生”中只能是只读的。相对地，非常量左 值只能接受非常量左值对其进行初始化。\n\n```c++\nconst bool & judge = true;\nconst bool judge2 = true;\n```\n\n常量左值引用可以减少对象开销.\n\n\n3.3.4 std::move 强制转化为右值\n\n\n3.3.5 移动语义的一些其他问题\nmove_if_noexcept(x)\n如果x是noexcept的, 则为move语义，否则为copy语义.\n\n3.3.6 完美转发 P85\n\n```c++\nvoid IrunCodeActually(int t) {}\n\ntemplate <typename T>\nvoid IamForwarding(T && t) {\n  IrunCodeActually(static_cast<T &&>(t));\n}\n```\n\n\n```c++\n#include <iostream>\nusing namespace std;\n\nvoid RunCode(int && m) {}\nvoid RunCode(int & m) {}\nvoid RunCode(const int && m) {}\nvoid RunCode(const int & m) {}\n\ntemplate <typename T>\nvoid PerfectForward(T && t) { RunCode(forward<T>(t)); }\n\nint main() {\n  int a = 1;\n  int b = 2;\n  const int c = 3;\n  const int d = 4;\n\n  PerfectForward(a);\n  PerfectForward(move(b));\n  PerfectForward(c);\n  PerfectForward(move(d));\n}\n```\n\n\n3.4 显示转换操作符\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 4 新手易学，老兵易用\n\n## 5 提高类型安全\n\n## 6 提高性能及操作硬件的能力\n\n## 7 为改变思考方式而改变\n\n## 8 融入实际应用","source":"_posts/cpp.md","raw":"---\ntitle: c++ 11\ndate: 2022-10-20 17:39:14\ntags:\n---\n\n\n## 2. 保证稳定性与兼容性\n### c++11\n通过内存模型、线程、原子操作等来支持本地并行编程(Native Concurrency)。\n通过统一初始化表达式、auto、declytype、移动语义等来统一对泛型编程的支持。 \n通过 constexpr、POD(概念)等更好地支持系统编程。\n通过内联命名空间、继承构造函数和右值引用等，以更好地支持库的构建。\n\n### _Pragma\n\n```c\n#pragma\n\n_Pragma(\"once)\n```\n\n### 变长参数定义以及__VA_ARGS_\n```c\n#define PR(...) printf(__VA_ARGS__) \n```\n\n### long long\n- ll (long long) %lld\n- ull (unsigned long long) %llu\n\nlimits.h\nLLONG_MIN\nLLONG_MAX\nULLONG_MIN\n\n### 静态断言 + static_assert\n\n静态断言\n编译时期断言\n```c++\ntemplate <typename t, typename u> int bit_copy(t& a, u& b) {\n  static_assert(sizeof(b) == sizeof(a), \"the parameters of bit_coppy must have same width.\");\n\n  // TODO\n}\n```\n\n\n### noexcept\n```c++\nvoid BlockThrow() noexcept { Throw(); }\n```\nnoexcept 会直接调用`std::terminate`中断程序的执行,阻止异常传播.\n即声明不抛出异常的函数\n\n```c++\ntemplate <class T>\nvoid fun() noexcept(noexcept(T())) {}\n```\n\n\n\neg:\n```c++\ntemplate<class T> class A {\n  public:\n    static constexpr T min() noexcept { return T(); }\n    static constexpr T max() noexcept { return T(); }\n    static constexpr T lowest() noexcept { return T(); }\n}\n```\n\nc++11中类的析构函数默认也是noexcept(true)的.\n\n\n### 2.7 快速初始化成员变量\nC++11 允许使用= {} 进行就地的非静态成员变量初始化。\n\n```c++\nstruct init{ int a = 1; double b {1.2}; }\n```\n\n初始化列表 后作用与 非静态成员, 即 初始化列表的效果总是优先于就地初始化的。\n\n\n### 2.8 非静态成员的sizeof\nc++11 中对非静态成员变量使用sizeof操作是合法的。\n```c++\n#include<iostream>\nusing namespace std;\n\nstruct People {\n  public:\n    int hand;\n}\n\nint main() {\n  cout << sizeof(People::hand) << endl;\n}\n```\n\n\n### 2.9 friend\n\n### 2.10 final/override\n`final`关键字使派生类不可覆盖它所修饰的虚函数.\n\n如果派生类的虚函数声明时, 使用了`override`描述符, 那么该函数必须重载其基类中的同名函数，否则代码将无法通过编译。\n\n\n### 2.11 模板函数的默认模板参数\n\n### 2.12 外部模板\n\n### 2.13 局部和匿名类型作模板实参\n\n## 3 通用为本, 专用为末\n### 3.1 继承构造函数\n\n子类可以通过使用using声明来声明继承基类的构造函数.\n\n```c++\n#include <iostream>\nusing namespace std;\n\nstruct A {\n  A(int i) {}\n}\n\nstruct B : A {\n  using A::A;\n\n  int d {0};\n}\n\nint main() {\n  B b(365);\n}\n```\n\n### 3.2 委派构造函数\n\n在C++11中，委派构造函数，就是指委派函数将构造的任务委派给了目标构造函数来完成的这样一种类构造的方式.\n```c++\nclass Info {\npublic:\n  Info() : Info(1, 'a') {}\n  Info(int i) : Info(i, 'a') {}\n  Info(char e) : Info(1, e) {}\n\nprivate:\n  Info(int i, char e): type(i), name(e) {}\n  int type;\n  char name;\n}\n```\n\n### 3.3 右值引用；移动语义和完美转发\n\n3.3.1 指针成员与拷贝构造\n涉及到指针要使用深拷贝.\n\n3.3.2 移动语义\n移动构造函数\n\n```c++\n#include <iostream>\nusing namespace std;\n\nclass HasPtrMem {\npublic:\n  HasPtrMem():d(new int(3)) {}\n  HasPtrMem(const HasPtrMem &h):d(new int(*h.d)) {}\n\n  HasPtrMem(HasPtrMem && h) : d(h.d) { // 移动构造函数\n    h.d = nullptr;\n  }\n\n  ~HasPtrMem() {\n    delete d;\n  }\n\n  int *d\n}\n```\n\n3.3.3 左值\\右值 与 右值引用\n\n可以取地址的、有名字的就是左值.\n不可以取地址的，没有名字的就是右值.\n\nc++11 中, 右值分为两种, 将亡值(xvalue, eXpiring Value), 纯右值(prvalue, Pure Rvalue)\n\n```c++\nT && a = ReturnRvalue();\nT b = ReturnRvalue();\n```\n右值引用是不能绑定到任何左值的\n```c++\nint c;\nint && d = c; // X 编译失败\n```\n\n出现这样的状况的原因是，在常量左值引用在 C++98 标准中开始就是个“万能”的引用 类型。它可以接受非常量左值、常量左值、右值对其进行初始化。而且在使用右值对其初始 化的时候，常量左值引用还可以像右值引用一样将右值的生命期延长。不过相比于右值引用 所引用的右值，常量左值所引用的右值在它的“余生”中只能是只读的。相对地，非常量左 值只能接受非常量左值对其进行初始化。\n\n```c++\nconst bool & judge = true;\nconst bool judge2 = true;\n```\n\n常量左值引用可以减少对象开销.\n\n\n3.3.4 std::move 强制转化为右值\n\n\n3.3.5 移动语义的一些其他问题\nmove_if_noexcept(x)\n如果x是noexcept的, 则为move语义，否则为copy语义.\n\n3.3.6 完美转发 P85\n\n```c++\nvoid IrunCodeActually(int t) {}\n\ntemplate <typename T>\nvoid IamForwarding(T && t) {\n  IrunCodeActually(static_cast<T &&>(t));\n}\n```\n\n\n```c++\n#include <iostream>\nusing namespace std;\n\nvoid RunCode(int && m) {}\nvoid RunCode(int & m) {}\nvoid RunCode(const int && m) {}\nvoid RunCode(const int & m) {}\n\ntemplate <typename T>\nvoid PerfectForward(T && t) { RunCode(forward<T>(t)); }\n\nint main() {\n  int a = 1;\n  int b = 2;\n  const int c = 3;\n  const int d = 4;\n\n  PerfectForward(a);\n  PerfectForward(move(b));\n  PerfectForward(c);\n  PerfectForward(move(d));\n}\n```\n\n\n3.4 显示转换操作符\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 4 新手易学，老兵易用\n\n## 5 提高类型安全\n\n## 6 提高性能及操作硬件的能力\n\n## 7 为改变思考方式而改变\n\n## 8 融入实际应用","slug":"cpp","published":1,"updated":"2022-10-23T09:09:14.382Z","_id":"cl9i6o72p0000rsnh2qw6ddmp","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"2-保证稳定性与兼容性\"><a href=\"#2-保证稳定性与兼容性\" class=\"headerlink\" title=\"2. 保证稳定性与兼容性\"></a>2. 保证稳定性与兼容性</h2><h3 id=\"c-11\"><a href=\"#c-11\" class=\"headerlink\" title=\"c++11\"></a>c++11</h3><p>通过内存模型、线程、原子操作等来支持本地并行编程(Native Concurrency)。<br>通过统一初始化表达式、auto、declytype、移动语义等来统一对泛型编程的支持。<br>通过 constexpr、POD(概念)等更好地支持系统编程。<br>通过内联命名空间、继承构造函数和右值引用等，以更好地支持库的构建。</p>\n<h3 id=\"Pragma\"><a href=\"#Pragma\" class=\"headerlink\" title=\"_Pragma\"></a>_Pragma</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">_Pragma</span>(<span class=\"string\">&quot;once)</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"变长参数定义以及-VA-ARGS\"><a href=\"#变长参数定义以及-VA-ARGS\" class=\"headerlink\" title=\"变长参数定义以及__VA_ARGS_\"></a>变长参数定义以及__VA_ARGS_</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> PR(...) printf(__VA_ARGS__) </span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"long-long\"><a href=\"#long-long\" class=\"headerlink\" title=\"long long\"></a>long long</h3><ul>\n<li>ll (long long) %lld</li>\n<li>ull (unsigned long long) %llu</li>\n</ul>\n<p>limits.h<br>LLONG_MIN<br>LLONG_MAX<br>ULLONG_MIN</p>\n<h3 id=\"静态断言-static-assert\"><a href=\"#静态断言-static-assert\" class=\"headerlink\" title=\"静态断言 + static_assert\"></a>静态断言 + static_assert</h3><p>静态断言<br>编译时期断言</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> t, <span class=\"keyword\">typename</span> u&gt; <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">bit_copy</span><span class=\"params\">(t&amp; a, u&amp; b)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">static_assert</span>(<span class=\"built_in\">sizeof</span>(b) == <span class=\"built_in\">sizeof</span>(a), <span class=\"string\">&quot;the parameters of bit_coppy must have same width.&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// TODO</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"noexcept\"><a href=\"#noexcept\" class=\"headerlink\" title=\"noexcept\"></a>noexcept</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">BlockThrow</span><span class=\"params\">()</span> <span class=\"keyword\">noexcept</span> </span>&#123; <span class=\"built_in\">Throw</span>(); &#125;</span><br></pre></td></tr></table></figure>\n<p>noexcept 会直接调用<code>std::terminate</code>中断程序的执行,阻止异常传播.<br>即声明不抛出异常的函数</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">class</span> <span class=\"title class_\">T</span>&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fun</span><span class=\"params\">()</span> <span class=\"title\">noexcept</span><span class=\"params\">(<span class=\"keyword\">noexcept</span>(T()))</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>eg:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">class</span> <span class=\"title class_\">T</span>&gt; <span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"keyword\">constexpr</span> T <span class=\"title\">min</span><span class=\"params\">()</span> <span class=\"keyword\">noexcept</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">T</span>(); &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"keyword\">constexpr</span> T <span class=\"title\">max</span><span class=\"params\">()</span> <span class=\"keyword\">noexcept</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">T</span>(); &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"keyword\">constexpr</span> T <span class=\"title\">lowest</span><span class=\"params\">()</span> <span class=\"keyword\">noexcept</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">T</span>(); &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>c++11中类的析构函数默认也是noexcept(true)的.</p>\n<h3 id=\"2-7-快速初始化成员变量\"><a href=\"#2-7-快速初始化成员变量\" class=\"headerlink\" title=\"2.7 快速初始化成员变量\"></a>2.7 快速初始化成员变量</h3><p>C++11 允许使用&#x3D; {} 进行就地的非静态成员变量初始化。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">init</span>&#123; <span class=\"type\">int</span> a = <span class=\"number\">1</span>; <span class=\"type\">double</span> b &#123;<span class=\"number\">1.2</span>&#125;; &#125;</span><br></pre></td></tr></table></figure>\n\n<p>初始化列表 后作用与 非静态成员, 即 初始化列表的效果总是优先于就地初始化的。</p>\n<h3 id=\"2-8-非静态成员的sizeof\"><a href=\"#2-8-非静态成员的sizeof\" class=\"headerlink\" title=\"2.8 非静态成员的sizeof\"></a>2.8 非静态成员的sizeof</h3><p>c++11 中对非静态成员变量使用sizeof操作是合法的。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">People</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> hand;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"built_in\">sizeof</span>(People::hand) &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"2-9-friend\"><a href=\"#2-9-friend\" class=\"headerlink\" title=\"2.9 friend\"></a>2.9 friend</h3><h3 id=\"2-10-final-x2F-override\"><a href=\"#2-10-final-x2F-override\" class=\"headerlink\" title=\"2.10 final&#x2F;override\"></a>2.10 final&#x2F;override</h3><p><code>final</code>关键字使派生类不可覆盖它所修饰的虚函数.</p>\n<p>如果派生类的虚函数声明时, 使用了<code>override</code>描述符, 那么该函数必须重载其基类中的同名函数，否则代码将无法通过编译。</p>\n<h3 id=\"2-11-模板函数的默认模板参数\"><a href=\"#2-11-模板函数的默认模板参数\" class=\"headerlink\" title=\"2.11 模板函数的默认模板参数\"></a>2.11 模板函数的默认模板参数</h3><h3 id=\"2-12-外部模板\"><a href=\"#2-12-外部模板\" class=\"headerlink\" title=\"2.12 外部模板\"></a>2.12 外部模板</h3><h3 id=\"2-13-局部和匿名类型作模板实参\"><a href=\"#2-13-局部和匿名类型作模板实参\" class=\"headerlink\" title=\"2.13 局部和匿名类型作模板实参\"></a>2.13 局部和匿名类型作模板实参</h3><h2 id=\"3-通用为本-专用为末\"><a href=\"#3-通用为本-专用为末\" class=\"headerlink\" title=\"3 通用为本, 专用为末\"></a>3 通用为本, 专用为末</h2><h3 id=\"3-1-继承构造函数\"><a href=\"#3-1-继承构造函数\" class=\"headerlink\" title=\"3.1 继承构造函数\"></a>3.1 继承构造函数</h3><p>子类可以通过使用using声明来声明继承基类的构造函数.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">A</span>(<span class=\"type\">int</span> i) &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">B</span> : A &#123;</span><br><span class=\"line\">  <span class=\"keyword\">using</span> A::A;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">int</span> d &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\">B <span class=\"title\">b</span><span class=\"params\">(<span class=\"number\">365</span>)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-委派构造函数\"><a href=\"#3-2-委派构造函数\" class=\"headerlink\" title=\"3.2 委派构造函数\"></a>3.2 委派构造函数</h3><p>在C++11中，委派构造函数，就是指委派函数将构造的任务委派给了目标构造函数来完成的这样一种类构造的方式.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Info</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"built_in\">Info</span>() : <span class=\"built_in\">Info</span>(<span class=\"number\">1</span>, <span class=\"string\">&#x27;a&#x27;</span>) &#123;&#125;</span><br><span class=\"line\">  <span class=\"built_in\">Info</span>(<span class=\"type\">int</span> i) : <span class=\"built_in\">Info</span>(i, <span class=\"string\">&#x27;a&#x27;</span>) &#123;&#125;</span><br><span class=\"line\">  <span class=\"built_in\">Info</span>(<span class=\"type\">char</span> e) : <span class=\"built_in\">Info</span>(<span class=\"number\">1</span>, e) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">  <span class=\"built_in\">Info</span>(<span class=\"type\">int</span> i, <span class=\"type\">char</span> e): <span class=\"built_in\">type</span>(i), <span class=\"built_in\">name</span>(e) &#123;&#125;</span><br><span class=\"line\">  <span class=\"type\">int</span> type;</span><br><span class=\"line\">  <span class=\"type\">char</span> name;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-右值引用；移动语义和完美转发\"><a href=\"#3-3-右值引用；移动语义和完美转发\" class=\"headerlink\" title=\"3.3 右值引用；移动语义和完美转发\"></a>3.3 右值引用；移动语义和完美转发</h3><p>3.3.1 指针成员与拷贝构造<br>涉及到指针要使用深拷贝.</p>\n<p>3.3.2 移动语义<br>移动构造函数</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">HasPtrMem</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"built_in\">HasPtrMem</span>():<span class=\"built_in\">d</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">int</span>(<span class=\"number\">3</span>)) &#123;&#125;</span><br><span class=\"line\">  <span class=\"built_in\">HasPtrMem</span>(<span class=\"type\">const</span> HasPtrMem &amp;h):<span class=\"built_in\">d</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">int</span>(*h.d)) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">HasPtrMem</span>(HasPtrMem &amp;&amp; h) : <span class=\"built_in\">d</span>(h.d) &#123; <span class=\"comment\">// 移动构造函数</span></span><br><span class=\"line\">    h.d = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ~<span class=\"built_in\">HasPtrMem</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> d;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">int</span> *d</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>3.3.3 左值\\右值 与 右值引用</p>\n<p>可以取地址的、有名字的就是左值.<br>不可以取地址的，没有名字的就是右值.</p>\n<p>c++11 中, 右值分为两种, 将亡值(xvalue, eXpiring Value), 纯右值(prvalue, Pure Rvalue)</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T &amp;&amp; a = <span class=\"built_in\">ReturnRvalue</span>();</span><br><span class=\"line\">T b = <span class=\"built_in\">ReturnRvalue</span>();</span><br></pre></td></tr></table></figure>\n<p>右值引用是不能绑定到任何左值的</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> c;</span><br><span class=\"line\"><span class=\"type\">int</span> &amp;&amp; d = c; <span class=\"comment\">// X 编译失败</span></span><br></pre></td></tr></table></figure>\n\n<p>出现这样的状况的原因是，在常量左值引用在 C++98 标准中开始就是个“万能”的引用 类型。它可以接受非常量左值、常量左值、右值对其进行初始化。而且在使用右值对其初始 化的时候，常量左值引用还可以像右值引用一样将右值的生命期延长。不过相比于右值引用 所引用的右值，常量左值所引用的右值在它的“余生”中只能是只读的。相对地，非常量左 值只能接受非常量左值对其进行初始化。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">bool</span> &amp; judge = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">bool</span> judge2 = <span class=\"literal\">true</span>;</span><br></pre></td></tr></table></figure>\n\n<p>常量左值引用可以减少对象开销.</p>\n<p>3.3.4 std::move 强制转化为右值</p>\n<p>3.3.5 移动语义的一些其他问题<br>move_if_noexcept(x)<br>如果x是noexcept的, 则为move语义，否则为copy语义.</p>\n<p>3.3.6 完美转发 P85</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">IrunCodeActually</span><span class=\"params\">(<span class=\"type\">int</span> t)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">IamForwarding</span><span class=\"params\">(T &amp;&amp; t)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">IrunCodeActually</span>(<span class=\"built_in\">static_cast</span>&lt;T &amp;&amp;&gt;(t));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">RunCode</span><span class=\"params\">(<span class=\"type\">int</span> &amp;&amp; m)</span> </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">RunCode</span><span class=\"params\">(<span class=\"type\">int</span> &amp; m)</span> </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">RunCode</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">int</span> &amp;&amp; m)</span> </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">RunCode</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">int</span> &amp; m)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">PerfectForward</span><span class=\"params\">(T &amp;&amp; t)</span> </span>&#123; <span class=\"built_in\">RunCode</span>(forward&lt;T&gt;(t)); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"type\">int</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"type\">const</span> <span class=\"type\">int</span> c = <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"type\">const</span> <span class=\"type\">int</span> d = <span class=\"number\">4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">PerfectForward</span>(a);</span><br><span class=\"line\">  <span class=\"built_in\">PerfectForward</span>(<span class=\"built_in\">move</span>(b));</span><br><span class=\"line\">  <span class=\"built_in\">PerfectForward</span>(c);</span><br><span class=\"line\">  <span class=\"built_in\">PerfectForward</span>(<span class=\"built_in\">move</span>(d));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>3.4 显示转换操作符</p>\n<h2 id=\"4-新手易学，老兵易用\"><a href=\"#4-新手易学，老兵易用\" class=\"headerlink\" title=\"4 新手易学，老兵易用\"></a>4 新手易学，老兵易用</h2><h2 id=\"5-提高类型安全\"><a href=\"#5-提高类型安全\" class=\"headerlink\" title=\"5 提高类型安全\"></a>5 提高类型安全</h2><h2 id=\"6-提高性能及操作硬件的能力\"><a href=\"#6-提高性能及操作硬件的能力\" class=\"headerlink\" title=\"6 提高性能及操作硬件的能力\"></a>6 提高性能及操作硬件的能力</h2><h2 id=\"7-为改变思考方式而改变\"><a href=\"#7-为改变思考方式而改变\" class=\"headerlink\" title=\"7 为改变思考方式而改变\"></a>7 为改变思考方式而改变</h2><h2 id=\"8-融入实际应用\"><a href=\"#8-融入实际应用\" class=\"headerlink\" title=\"8 融入实际应用\"></a>8 融入实际应用</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"2-保证稳定性与兼容性\"><a href=\"#2-保证稳定性与兼容性\" class=\"headerlink\" title=\"2. 保证稳定性与兼容性\"></a>2. 保证稳定性与兼容性</h2><h3 id=\"c-11\"><a href=\"#c-11\" class=\"headerlink\" title=\"c++11\"></a>c++11</h3><p>通过内存模型、线程、原子操作等来支持本地并行编程(Native Concurrency)。<br>通过统一初始化表达式、auto、declytype、移动语义等来统一对泛型编程的支持。<br>通过 constexpr、POD(概念)等更好地支持系统编程。<br>通过内联命名空间、继承构造函数和右值引用等，以更好地支持库的构建。</p>\n<h3 id=\"Pragma\"><a href=\"#Pragma\" class=\"headerlink\" title=\"_Pragma\"></a>_Pragma</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">_Pragma</span>(<span class=\"string\">&quot;once)</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"变长参数定义以及-VA-ARGS\"><a href=\"#变长参数定义以及-VA-ARGS\" class=\"headerlink\" title=\"变长参数定义以及__VA_ARGS_\"></a>变长参数定义以及__VA_ARGS_</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> PR(...) printf(__VA_ARGS__) </span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"long-long\"><a href=\"#long-long\" class=\"headerlink\" title=\"long long\"></a>long long</h3><ul>\n<li>ll (long long) %lld</li>\n<li>ull (unsigned long long) %llu</li>\n</ul>\n<p>limits.h<br>LLONG_MIN<br>LLONG_MAX<br>ULLONG_MIN</p>\n<h3 id=\"静态断言-static-assert\"><a href=\"#静态断言-static-assert\" class=\"headerlink\" title=\"静态断言 + static_assert\"></a>静态断言 + static_assert</h3><p>静态断言<br>编译时期断言</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> t, <span class=\"keyword\">typename</span> u&gt; <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">bit_copy</span><span class=\"params\">(t&amp; a, u&amp; b)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">static_assert</span>(<span class=\"built_in\">sizeof</span>(b) == <span class=\"built_in\">sizeof</span>(a), <span class=\"string\">&quot;the parameters of bit_coppy must have same width.&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// TODO</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"noexcept\"><a href=\"#noexcept\" class=\"headerlink\" title=\"noexcept\"></a>noexcept</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">BlockThrow</span><span class=\"params\">()</span> <span class=\"keyword\">noexcept</span> </span>&#123; <span class=\"built_in\">Throw</span>(); &#125;</span><br></pre></td></tr></table></figure>\n<p>noexcept 会直接调用<code>std::terminate</code>中断程序的执行,阻止异常传播.<br>即声明不抛出异常的函数</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">class</span> <span class=\"title class_\">T</span>&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fun</span><span class=\"params\">()</span> <span class=\"title\">noexcept</span><span class=\"params\">(<span class=\"keyword\">noexcept</span>(T()))</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>eg:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">class</span> <span class=\"title class_\">T</span>&gt; <span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"keyword\">constexpr</span> T <span class=\"title\">min</span><span class=\"params\">()</span> <span class=\"keyword\">noexcept</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">T</span>(); &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"keyword\">constexpr</span> T <span class=\"title\">max</span><span class=\"params\">()</span> <span class=\"keyword\">noexcept</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">T</span>(); &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"keyword\">constexpr</span> T <span class=\"title\">lowest</span><span class=\"params\">()</span> <span class=\"keyword\">noexcept</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">T</span>(); &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>c++11中类的析构函数默认也是noexcept(true)的.</p>\n<h3 id=\"2-7-快速初始化成员变量\"><a href=\"#2-7-快速初始化成员变量\" class=\"headerlink\" title=\"2.7 快速初始化成员变量\"></a>2.7 快速初始化成员变量</h3><p>C++11 允许使用&#x3D; {} 进行就地的非静态成员变量初始化。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">init</span>&#123; <span class=\"type\">int</span> a = <span class=\"number\">1</span>; <span class=\"type\">double</span> b &#123;<span class=\"number\">1.2</span>&#125;; &#125;</span><br></pre></td></tr></table></figure>\n\n<p>初始化列表 后作用与 非静态成员, 即 初始化列表的效果总是优先于就地初始化的。</p>\n<h3 id=\"2-8-非静态成员的sizeof\"><a href=\"#2-8-非静态成员的sizeof\" class=\"headerlink\" title=\"2.8 非静态成员的sizeof\"></a>2.8 非静态成员的sizeof</h3><p>c++11 中对非静态成员变量使用sizeof操作是合法的。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">People</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> hand;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"built_in\">sizeof</span>(People::hand) &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"2-9-friend\"><a href=\"#2-9-friend\" class=\"headerlink\" title=\"2.9 friend\"></a>2.9 friend</h3><h3 id=\"2-10-final-x2F-override\"><a href=\"#2-10-final-x2F-override\" class=\"headerlink\" title=\"2.10 final&#x2F;override\"></a>2.10 final&#x2F;override</h3><p><code>final</code>关键字使派生类不可覆盖它所修饰的虚函数.</p>\n<p>如果派生类的虚函数声明时, 使用了<code>override</code>描述符, 那么该函数必须重载其基类中的同名函数，否则代码将无法通过编译。</p>\n<h3 id=\"2-11-模板函数的默认模板参数\"><a href=\"#2-11-模板函数的默认模板参数\" class=\"headerlink\" title=\"2.11 模板函数的默认模板参数\"></a>2.11 模板函数的默认模板参数</h3><h3 id=\"2-12-外部模板\"><a href=\"#2-12-外部模板\" class=\"headerlink\" title=\"2.12 外部模板\"></a>2.12 外部模板</h3><h3 id=\"2-13-局部和匿名类型作模板实参\"><a href=\"#2-13-局部和匿名类型作模板实参\" class=\"headerlink\" title=\"2.13 局部和匿名类型作模板实参\"></a>2.13 局部和匿名类型作模板实参</h3><h2 id=\"3-通用为本-专用为末\"><a href=\"#3-通用为本-专用为末\" class=\"headerlink\" title=\"3 通用为本, 专用为末\"></a>3 通用为本, 专用为末</h2><h3 id=\"3-1-继承构造函数\"><a href=\"#3-1-继承构造函数\" class=\"headerlink\" title=\"3.1 继承构造函数\"></a>3.1 继承构造函数</h3><p>子类可以通过使用using声明来声明继承基类的构造函数.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">A</span>(<span class=\"type\">int</span> i) &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">B</span> : A &#123;</span><br><span class=\"line\">  <span class=\"keyword\">using</span> A::A;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">int</span> d &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\">B <span class=\"title\">b</span><span class=\"params\">(<span class=\"number\">365</span>)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-委派构造函数\"><a href=\"#3-2-委派构造函数\" class=\"headerlink\" title=\"3.2 委派构造函数\"></a>3.2 委派构造函数</h3><p>在C++11中，委派构造函数，就是指委派函数将构造的任务委派给了目标构造函数来完成的这样一种类构造的方式.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Info</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"built_in\">Info</span>() : <span class=\"built_in\">Info</span>(<span class=\"number\">1</span>, <span class=\"string\">&#x27;a&#x27;</span>) &#123;&#125;</span><br><span class=\"line\">  <span class=\"built_in\">Info</span>(<span class=\"type\">int</span> i) : <span class=\"built_in\">Info</span>(i, <span class=\"string\">&#x27;a&#x27;</span>) &#123;&#125;</span><br><span class=\"line\">  <span class=\"built_in\">Info</span>(<span class=\"type\">char</span> e) : <span class=\"built_in\">Info</span>(<span class=\"number\">1</span>, e) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">  <span class=\"built_in\">Info</span>(<span class=\"type\">int</span> i, <span class=\"type\">char</span> e): <span class=\"built_in\">type</span>(i), <span class=\"built_in\">name</span>(e) &#123;&#125;</span><br><span class=\"line\">  <span class=\"type\">int</span> type;</span><br><span class=\"line\">  <span class=\"type\">char</span> name;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-右值引用；移动语义和完美转发\"><a href=\"#3-3-右值引用；移动语义和完美转发\" class=\"headerlink\" title=\"3.3 右值引用；移动语义和完美转发\"></a>3.3 右值引用；移动语义和完美转发</h3><p>3.3.1 指针成员与拷贝构造<br>涉及到指针要使用深拷贝.</p>\n<p>3.3.2 移动语义<br>移动构造函数</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">HasPtrMem</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"built_in\">HasPtrMem</span>():<span class=\"built_in\">d</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">int</span>(<span class=\"number\">3</span>)) &#123;&#125;</span><br><span class=\"line\">  <span class=\"built_in\">HasPtrMem</span>(<span class=\"type\">const</span> HasPtrMem &amp;h):<span class=\"built_in\">d</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">int</span>(*h.d)) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">HasPtrMem</span>(HasPtrMem &amp;&amp; h) : <span class=\"built_in\">d</span>(h.d) &#123; <span class=\"comment\">// 移动构造函数</span></span><br><span class=\"line\">    h.d = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ~<span class=\"built_in\">HasPtrMem</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> d;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">int</span> *d</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>3.3.3 左值\\右值 与 右值引用</p>\n<p>可以取地址的、有名字的就是左值.<br>不可以取地址的，没有名字的就是右值.</p>\n<p>c++11 中, 右值分为两种, 将亡值(xvalue, eXpiring Value), 纯右值(prvalue, Pure Rvalue)</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T &amp;&amp; a = <span class=\"built_in\">ReturnRvalue</span>();</span><br><span class=\"line\">T b = <span class=\"built_in\">ReturnRvalue</span>();</span><br></pre></td></tr></table></figure>\n<p>右值引用是不能绑定到任何左值的</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> c;</span><br><span class=\"line\"><span class=\"type\">int</span> &amp;&amp; d = c; <span class=\"comment\">// X 编译失败</span></span><br></pre></td></tr></table></figure>\n\n<p>出现这样的状况的原因是，在常量左值引用在 C++98 标准中开始就是个“万能”的引用 类型。它可以接受非常量左值、常量左值、右值对其进行初始化。而且在使用右值对其初始 化的时候，常量左值引用还可以像右值引用一样将右值的生命期延长。不过相比于右值引用 所引用的右值，常量左值所引用的右值在它的“余生”中只能是只读的。相对地，非常量左 值只能接受非常量左值对其进行初始化。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">bool</span> &amp; judge = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">bool</span> judge2 = <span class=\"literal\">true</span>;</span><br></pre></td></tr></table></figure>\n\n<p>常量左值引用可以减少对象开销.</p>\n<p>3.3.4 std::move 强制转化为右值</p>\n<p>3.3.5 移动语义的一些其他问题<br>move_if_noexcept(x)<br>如果x是noexcept的, 则为move语义，否则为copy语义.</p>\n<p>3.3.6 完美转发 P85</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">IrunCodeActually</span><span class=\"params\">(<span class=\"type\">int</span> t)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">IamForwarding</span><span class=\"params\">(T &amp;&amp; t)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">IrunCodeActually</span>(<span class=\"built_in\">static_cast</span>&lt;T &amp;&amp;&gt;(t));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">RunCode</span><span class=\"params\">(<span class=\"type\">int</span> &amp;&amp; m)</span> </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">RunCode</span><span class=\"params\">(<span class=\"type\">int</span> &amp; m)</span> </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">RunCode</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">int</span> &amp;&amp; m)</span> </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">RunCode</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">int</span> &amp; m)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">PerfectForward</span><span class=\"params\">(T &amp;&amp; t)</span> </span>&#123; <span class=\"built_in\">RunCode</span>(forward&lt;T&gt;(t)); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"type\">int</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"type\">const</span> <span class=\"type\">int</span> c = <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"type\">const</span> <span class=\"type\">int</span> d = <span class=\"number\">4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">PerfectForward</span>(a);</span><br><span class=\"line\">  <span class=\"built_in\">PerfectForward</span>(<span class=\"built_in\">move</span>(b));</span><br><span class=\"line\">  <span class=\"built_in\">PerfectForward</span>(c);</span><br><span class=\"line\">  <span class=\"built_in\">PerfectForward</span>(<span class=\"built_in\">move</span>(d));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>3.4 显示转换操作符</p>\n<h2 id=\"4-新手易学，老兵易用\"><a href=\"#4-新手易学，老兵易用\" class=\"headerlink\" title=\"4 新手易学，老兵易用\"></a>4 新手易学，老兵易用</h2><h2 id=\"5-提高类型安全\"><a href=\"#5-提高类型安全\" class=\"headerlink\" title=\"5 提高类型安全\"></a>5 提高类型安全</h2><h2 id=\"6-提高性能及操作硬件的能力\"><a href=\"#6-提高性能及操作硬件的能力\" class=\"headerlink\" title=\"6 提高性能及操作硬件的能力\"></a>6 提高性能及操作硬件的能力</h2><h2 id=\"7-为改变思考方式而改变\"><a href=\"#7-为改变思考方式而改变\" class=\"headerlink\" title=\"7 为改变思考方式而改变\"></a>7 为改变思考方式而改变</h2><h2 id=\"8-融入实际应用\"><a href=\"#8-融入实际应用\" class=\"headerlink\" title=\"8 融入实际应用\"></a>8 融入实际应用</h2>"},{"title":"prepare_aosp_read","date":"2022-10-23T10:41:08.000Z","_content":"","source":"_posts/prepare-aosp-read.md","raw":"---\ntitle: prepare_aosp_read\ndate: 2022-10-23 18:41:08\ntags:\n---\n","slug":"prepare-aosp-read","published":1,"updated":"2022-10-23T10:41:08.306Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9lke2m700009mnh325n6muf","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tunnel原理的一点学习","date":"2022-10-23T16:27:34.000Z","_content":"\n\n\nref:\n[tun2socks](https://github.com/ambrop72/badvpn/tree/master/tun2socks)\nhttps://github.com/shark-vpn/shark-vpn.github.io\nhttps://yunfwe.cn/2018/05/24/2018/%E4%B8%80%E8%B5%B7%E5%8A%A8%E6%89%8B%E5%86%99%E4%B8%80%E4%B8%AAVPN/\nhttps://github.com/meh/rust-tun\nhttps://github.com/the-tunnel/tt-dns/blob/master/src/main.rs\nhttps://github.com/the-tunnel/rust-tun\n[icmp forward](https://www.lyytaw.com/%E7%BD%91%E7%BB%9C/%E4%BD%BF%E7%94%A8TUN%E8%99%9A%E6%8B%9F%E7%BD%91%E5%8D%A1%E5%AE%9E%E7%8E%B0ping%E8%AF%B7%E6%B1%82%E8%BD%AC%E5%8F%91/)\n[虚拟设备, 这个系列写的挺好的](https://github.com/g0dA/linuxStack/blob/master/linux%E7%BD%91%E7%BB%9C(%E5%9B%9B).md)\n\n","source":"_posts/tunnel.md","raw":"---\ntitle: tunnel原理的一点学习\ndate: 2022-10-24 00:27:34\ntags:\n---\n\n\n\nref:\n[tun2socks](https://github.com/ambrop72/badvpn/tree/master/tun2socks)\nhttps://github.com/shark-vpn/shark-vpn.github.io\nhttps://yunfwe.cn/2018/05/24/2018/%E4%B8%80%E8%B5%B7%E5%8A%A8%E6%89%8B%E5%86%99%E4%B8%80%E4%B8%AAVPN/\nhttps://github.com/meh/rust-tun\nhttps://github.com/the-tunnel/tt-dns/blob/master/src/main.rs\nhttps://github.com/the-tunnel/rust-tun\n[icmp forward](https://www.lyytaw.com/%E7%BD%91%E7%BB%9C/%E4%BD%BF%E7%94%A8TUN%E8%99%9A%E6%8B%9F%E7%BD%91%E5%8D%A1%E5%AE%9E%E7%8E%B0ping%E8%AF%B7%E6%B1%82%E8%BD%AC%E5%8F%91/)\n[虚拟设备, 这个系列写的挺好的](https://github.com/g0dA/linuxStack/blob/master/linux%E7%BD%91%E7%BB%9C(%E5%9B%9B).md)\n\n","slug":"tunnel","published":1,"updated":"2022-10-25T14:35:24.600Z","_id":"cl9lke2mc00019mnh8b4thlvj","comments":1,"layout":"post","photos":[],"link":"","content":"<p>ref:<br><a href=\"https://github.com/ambrop72/badvpn/tree/master/tun2socks\">tun2socks</a><br><a href=\"https://github.com/shark-vpn/shark-vpn.github.io\">https://github.com/shark-vpn/shark-vpn.github.io</a><br><a href=\"https://yunfwe.cn/2018/05/24/2018/%E4%B8%80%E8%B5%B7%E5%8A%A8%E6%89%8B%E5%86%99%E4%B8%80%E4%B8%AAVPN/\">https://yunfwe.cn/2018/05/24/2018/%E4%B8%80%E8%B5%B7%E5%8A%A8%E6%89%8B%E5%86%99%E4%B8%80%E4%B8%AAVPN/</a><br><a href=\"https://github.com/meh/rust-tun\">https://github.com/meh/rust-tun</a><br><a href=\"https://github.com/the-tunnel/tt-dns/blob/master/src/main.rs\">https://github.com/the-tunnel/tt-dns/blob/master/src/main.rs</a><br><a href=\"https://github.com/the-tunnel/rust-tun\">https://github.com/the-tunnel/rust-tun</a><br><a href=\"https://www.lyytaw.com/%E7%BD%91%E7%BB%9C/%E4%BD%BF%E7%94%A8TUN%E8%99%9A%E6%8B%9F%E7%BD%91%E5%8D%A1%E5%AE%9E%E7%8E%B0ping%E8%AF%B7%E6%B1%82%E8%BD%AC%E5%8F%91/\">icmp forward</a><br><a href=\"https://github.com/g0dA/linuxStack/blob/master/linux%E7%BD%91%E7%BB%9C(%E5%9B%9B).md\">虚拟设备, 这个系列写的挺好的</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>ref:<br><a href=\"https://github.com/ambrop72/badvpn/tree/master/tun2socks\">tun2socks</a><br><a href=\"https://github.com/shark-vpn/shark-vpn.github.io\">https://github.com/shark-vpn/shark-vpn.github.io</a><br><a href=\"https://yunfwe.cn/2018/05/24/2018/%E4%B8%80%E8%B5%B7%E5%8A%A8%E6%89%8B%E5%86%99%E4%B8%80%E4%B8%AAVPN/\">https://yunfwe.cn/2018/05/24/2018/%E4%B8%80%E8%B5%B7%E5%8A%A8%E6%89%8B%E5%86%99%E4%B8%80%E4%B8%AAVPN/</a><br><a href=\"https://github.com/meh/rust-tun\">https://github.com/meh/rust-tun</a><br><a href=\"https://github.com/the-tunnel/tt-dns/blob/master/src/main.rs\">https://github.com/the-tunnel/tt-dns/blob/master/src/main.rs</a><br><a href=\"https://github.com/the-tunnel/rust-tun\">https://github.com/the-tunnel/rust-tun</a><br><a href=\"https://www.lyytaw.com/%E7%BD%91%E7%BB%9C/%E4%BD%BF%E7%94%A8TUN%E8%99%9A%E6%8B%9F%E7%BD%91%E5%8D%A1%E5%AE%9E%E7%8E%B0ping%E8%AF%B7%E6%B1%82%E8%BD%AC%E5%8F%91/\">icmp forward</a><br><a href=\"https://github.com/g0dA/linuxStack/blob/master/linux%E7%BD%91%E7%BB%9C(%E5%9B%9B).md\">虚拟设备, 这个系列写的挺好的</a></p>\n"},{"title":"折腾arch","date":"2022-10-17T08:33:30.000Z","_content":"\n\n### xorg\nsudo pacman -S xorg-server xorg-apps xorg-xinit xorg-xclock xterm \n\n### kde plasma\nsudo pacman -S plasma\nsudo pacman -S kde-applications\n\n### 登录管理器\nsddm: simple desktop display manager\n\nsudo pacman -S sddm\nsudo systemctl enable sddm\nsudo systemctl start sddm\n\n\nX是协议，不是某个软件.\nX11R6 是 X协议的Release 6版本\n\n\ntwm是什么\nTabWindow Manager for the X WindowSystem. 是一个窗口管理器\n\n终端模拟器\nsTerm, Rxvt, Konsole, Kvt, Gnome-Terminal, Nxterm, eterm\n\n\n\nxrdp\n\n\n\nrun level [inittab详解](https://blog.csdn.net/newnewman80/article/details/8133797)\n0 - 关闭或暂停系统 | shutdown.target\n1 - 单用户模式 | rescue.target\n2 - 多用户, 没有NFS | multi-user.target\n3 - 完全多用户 | multi-user.target\n4 - 保留 | multi-user.target\n5 - X11(图形用户界面) | graphical.target\n6 - 重启系统 | reboot.target\n\n\n### systemd\nhttp://blog.itpub.net/31524109/viewspace-2647049/\n\n\nDisplay manager: https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\n\n\n\n\ndwm安装\nhttps://blog.csdn.net/qq_45933858/article/details/124553077\n\nkde是桌面\n\nDM: https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\nDM是显示管理器, 也叫登录管理器。\nSDDM - Simple Desktop Display Manager\n不同DM的区别 https://blog.csdn.net/weixin_36073714/article/details/116758417\nWM(Window Manager)\n\n\nREF:\nhttps://www.cnblogs.com/EasonJim/p/7230616.html\nhttps://www.jianshu.com/p/a05559a7b757\nhttps://jtao.work/archives/x--w-i-n-d-o-w--she-zhi-jie-shao\n[deepin lighdm配置](https://wiki.archlinux.org/title/Deepin_Desktop_Environment_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87))\n[Window Manager](https://wiki.archlinux.org/title/Window_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87))\n[KDE plasma](https://wiki.archlinux.org/title/KDE_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E5%90%AF%E5%8A%A8_Plasma)\n[/etc/inittab](https://blog.csdn.net/ChunfengZhang/article/details/4450531)\n[arch inittab](https://wiki.archlinux.org/title/SysVinit_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87))\n[ubuntu](https://blog.csdn.net/yusiguyuan/article/details/9928139)","source":"_posts/arch.md","raw":"---\ntitle: 折腾arch\ndate: 2022-10-17 16:33:30\ntags: archlinux\n---\n\n\n### xorg\nsudo pacman -S xorg-server xorg-apps xorg-xinit xorg-xclock xterm \n\n### kde plasma\nsudo pacman -S plasma\nsudo pacman -S kde-applications\n\n### 登录管理器\nsddm: simple desktop display manager\n\nsudo pacman -S sddm\nsudo systemctl enable sddm\nsudo systemctl start sddm\n\n\nX是协议，不是某个软件.\nX11R6 是 X协议的Release 6版本\n\n\ntwm是什么\nTabWindow Manager for the X WindowSystem. 是一个窗口管理器\n\n终端模拟器\nsTerm, Rxvt, Konsole, Kvt, Gnome-Terminal, Nxterm, eterm\n\n\n\nxrdp\n\n\n\nrun level [inittab详解](https://blog.csdn.net/newnewman80/article/details/8133797)\n0 - 关闭或暂停系统 | shutdown.target\n1 - 单用户模式 | rescue.target\n2 - 多用户, 没有NFS | multi-user.target\n3 - 完全多用户 | multi-user.target\n4 - 保留 | multi-user.target\n5 - X11(图形用户界面) | graphical.target\n6 - 重启系统 | reboot.target\n\n\n### systemd\nhttp://blog.itpub.net/31524109/viewspace-2647049/\n\n\nDisplay manager: https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\n\n\n\n\ndwm安装\nhttps://blog.csdn.net/qq_45933858/article/details/124553077\n\nkde是桌面\n\nDM: https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\nDM是显示管理器, 也叫登录管理器。\nSDDM - Simple Desktop Display Manager\n不同DM的区别 https://blog.csdn.net/weixin_36073714/article/details/116758417\nWM(Window Manager)\n\n\nREF:\nhttps://www.cnblogs.com/EasonJim/p/7230616.html\nhttps://www.jianshu.com/p/a05559a7b757\nhttps://jtao.work/archives/x--w-i-n-d-o-w--she-zhi-jie-shao\n[deepin lighdm配置](https://wiki.archlinux.org/title/Deepin_Desktop_Environment_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87))\n[Window Manager](https://wiki.archlinux.org/title/Window_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87))\n[KDE plasma](https://wiki.archlinux.org/title/KDE_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E5%90%AF%E5%8A%A8_Plasma)\n[/etc/inittab](https://blog.csdn.net/ChunfengZhang/article/details/4450531)\n[arch inittab](https://wiki.archlinux.org/title/SysVinit_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87))\n[ubuntu](https://blog.csdn.net/yusiguyuan/article/details/9928139)","slug":"arch","published":1,"updated":"2022-10-18T12:19:40.877Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9obodil0000d5nha70jaero","content":"<h3 id=\"xorg\"><a href=\"#xorg\" class=\"headerlink\" title=\"xorg\"></a>xorg</h3><p>sudo pacman -S xorg-server xorg-apps xorg-xinit xorg-xclock xterm </p>\n<h3 id=\"kde-plasma\"><a href=\"#kde-plasma\" class=\"headerlink\" title=\"kde plasma\"></a>kde plasma</h3><p>sudo pacman -S plasma<br>sudo pacman -S kde-applications</p>\n<h3 id=\"登录管理器\"><a href=\"#登录管理器\" class=\"headerlink\" title=\"登录管理器\"></a>登录管理器</h3><p>sddm: simple desktop display manager</p>\n<p>sudo pacman -S sddm<br>sudo systemctl enable sddm<br>sudo systemctl start sddm</p>\n<p>X是协议，不是某个软件.<br>X11R6 是 X协议的Release 6版本</p>\n<p>twm是什么<br>TabWindow Manager for the X WindowSystem. 是一个窗口管理器</p>\n<p>终端模拟器<br>sTerm, Rxvt, Konsole, Kvt, Gnome-Terminal, Nxterm, eterm</p>\n<p>xrdp</p>\n<p>run level <a href=\"https://blog.csdn.net/newnewman80/article/details/8133797\">inittab详解</a><br>0 - 关闭或暂停系统 | shutdown.target<br>1 - 单用户模式 | rescue.target<br>2 - 多用户, 没有NFS | multi-user.target<br>3 - 完全多用户 | multi-user.target<br>4 - 保留 | multi-user.target<br>5 - X11(图形用户界面) | graphical.target<br>6 - 重启系统 | reboot.target</p>\n<h3 id=\"systemd\"><a href=\"#systemd\" class=\"headerlink\" title=\"systemd\"></a>systemd</h3><p><a href=\"http://blog.itpub.net/31524109/viewspace-2647049/\">http://blog.itpub.net/31524109/viewspace-2647049/</a></p>\n<p>Display manager: <a href=\"https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p>\n<p>dwm安装<br><a href=\"https://blog.csdn.net/qq_45933858/article/details/124553077\">https://blog.csdn.net/qq_45933858/article/details/124553077</a></p>\n<p>kde是桌面</p>\n<p>DM: <a href=\"https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a><br>DM是显示管理器, 也叫登录管理器。<br>SDDM - Simple Desktop Display Manager<br>不同DM的区别 <a href=\"https://blog.csdn.net/weixin_36073714/article/details/116758417\">https://blog.csdn.net/weixin_36073714/article/details/116758417</a><br>WM(Window Manager)</p>\n<p>REF:<br><a href=\"https://www.cnblogs.com/EasonJim/p/7230616.html\">https://www.cnblogs.com/EasonJim/p/7230616.html</a><br><a href=\"https://www.jianshu.com/p/a05559a7b757\">https://www.jianshu.com/p/a05559a7b757</a><br><a href=\"https://jtao.work/archives/x--w-i-n-d-o-w--she-zhi-jie-shao\">https://jtao.work/archives/x--w-i-n-d-o-w--she-zhi-jie-shao</a><br><a href=\"https://wiki.archlinux.org/title/Deepin_Desktop_Environment_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">deepin lighdm配置</a><br><a href=\"https://wiki.archlinux.org/title/Window_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">Window Manager</a><br><a href=\"https://wiki.archlinux.org/title/KDE_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E5%90%AF%E5%8A%A8_Plasma\">KDE plasma</a><br><a href=\"https://blog.csdn.net/ChunfengZhang/article/details/4450531\">&#x2F;etc&#x2F;inittab</a><br><a href=\"https://wiki.archlinux.org/title/SysVinit_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">arch inittab</a><br><a href=\"https://blog.csdn.net/yusiguyuan/article/details/9928139\">ubuntu</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"xorg\"><a href=\"#xorg\" class=\"headerlink\" title=\"xorg\"></a>xorg</h3><p>sudo pacman -S xorg-server xorg-apps xorg-xinit xorg-xclock xterm </p>\n<h3 id=\"kde-plasma\"><a href=\"#kde-plasma\" class=\"headerlink\" title=\"kde plasma\"></a>kde plasma</h3><p>sudo pacman -S plasma<br>sudo pacman -S kde-applications</p>\n<h3 id=\"登录管理器\"><a href=\"#登录管理器\" class=\"headerlink\" title=\"登录管理器\"></a>登录管理器</h3><p>sddm: simple desktop display manager</p>\n<p>sudo pacman -S sddm<br>sudo systemctl enable sddm<br>sudo systemctl start sddm</p>\n<p>X是协议，不是某个软件.<br>X11R6 是 X协议的Release 6版本</p>\n<p>twm是什么<br>TabWindow Manager for the X WindowSystem. 是一个窗口管理器</p>\n<p>终端模拟器<br>sTerm, Rxvt, Konsole, Kvt, Gnome-Terminal, Nxterm, eterm</p>\n<p>xrdp</p>\n<p>run level <a href=\"https://blog.csdn.net/newnewman80/article/details/8133797\">inittab详解</a><br>0 - 关闭或暂停系统 | shutdown.target<br>1 - 单用户模式 | rescue.target<br>2 - 多用户, 没有NFS | multi-user.target<br>3 - 完全多用户 | multi-user.target<br>4 - 保留 | multi-user.target<br>5 - X11(图形用户界面) | graphical.target<br>6 - 重启系统 | reboot.target</p>\n<h3 id=\"systemd\"><a href=\"#systemd\" class=\"headerlink\" title=\"systemd\"></a>systemd</h3><p><a href=\"http://blog.itpub.net/31524109/viewspace-2647049/\">http://blog.itpub.net/31524109/viewspace-2647049/</a></p>\n<p>Display manager: <a href=\"https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p>\n<p>dwm安装<br><a href=\"https://blog.csdn.net/qq_45933858/article/details/124553077\">https://blog.csdn.net/qq_45933858/article/details/124553077</a></p>\n<p>kde是桌面</p>\n<p>DM: <a href=\"https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">https://wiki.archlinux.org/title/Display_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a><br>DM是显示管理器, 也叫登录管理器。<br>SDDM - Simple Desktop Display Manager<br>不同DM的区别 <a href=\"https://blog.csdn.net/weixin_36073714/article/details/116758417\">https://blog.csdn.net/weixin_36073714/article/details/116758417</a><br>WM(Window Manager)</p>\n<p>REF:<br><a href=\"https://www.cnblogs.com/EasonJim/p/7230616.html\">https://www.cnblogs.com/EasonJim/p/7230616.html</a><br><a href=\"https://www.jianshu.com/p/a05559a7b757\">https://www.jianshu.com/p/a05559a7b757</a><br><a href=\"https://jtao.work/archives/x--w-i-n-d-o-w--she-zhi-jie-shao\">https://jtao.work/archives/x--w-i-n-d-o-w--she-zhi-jie-shao</a><br><a href=\"https://wiki.archlinux.org/title/Deepin_Desktop_Environment_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">deepin lighdm配置</a><br><a href=\"https://wiki.archlinux.org/title/Window_manager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">Window Manager</a><br><a href=\"https://wiki.archlinux.org/title/KDE_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E5%90%AF%E5%8A%A8_Plasma\">KDE plasma</a><br><a href=\"https://blog.csdn.net/ChunfengZhang/article/details/4450531\">&#x2F;etc&#x2F;inittab</a><br><a href=\"https://wiki.archlinux.org/title/SysVinit_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">arch inittab</a><br><a href=\"https://blog.csdn.net/yusiguyuan/article/details/9928139\">ubuntu</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cl9cib5720000vunh78i43t12","tag_id":"cl9cib5780001vunh4g5q7m96","_id":"cl9cib57a0002vunh2jht7y0u"},{"post_id":"cl9cib57c0004vunh19dd9m89","tag_id":"cl9cic13w000031nh6c2whdwa","_id":"cl9cic13y000131nh8ssg2ulm"},{"post_id":"cl9obodil0000d5nha70jaero","tag_id":"cl9f3fo3a00027knha404f4ch","_id":"cl9obodir0001d5nh7gxl8bgy"}],"Tag":[{"name":"杂念","_id":"cl9cib5780001vunh4g5q7m96"},{"name":"git,code","_id":"cl9cic13w000031nh6c2whdwa"},{"name":"archlinux","_id":"cl9f3fo3a00027knha404f4ch"}]}}